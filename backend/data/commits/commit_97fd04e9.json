{
  "id": "commit_97fd04e9_1756931871",
  "timestamp": "2025-09-04T02:07:51.18931+05:30",
  "commit_hash": "97fd04e959bec9887ff511f3228c7a345c09a9dd",
  "author": "arpit529srivastava",
  "email": "arpitsrivastava529@gmail.com",
  "message": "testing\n\nSigned-off-by: arpit529srivastava \u003carpitsrivastava529@gmail.com\u003e\n",
  "files_changed": [
    ".DS_Store",
    "backend/bin/git-hook",
    "hello.cpp",
    "mcp/.env",
    "mcp/README.md",
    "mcp/__pycache__/api.cpython-313.pyc",
    "mcp/agent.py",
    "mcp/api.py",
    "mcp/main.py",
    "mcp/pyproject.toml",
    "mcp/requirements.txt",
    "mcp/simple_multi_agent.py",
    "mcp/test_api.py",
    "mcp/threat-demo",
    "mcp/uv.lock",
    "mcp/vuln_sample.py"
  ],
  "additions": 2482,
  "deletions": 0,
  "file_diffs": [
    {
      "file_name": ".DS_Store",
      "status": "A",
      "additions": 0,
      "deletions": 0,
      "diff": "diff --git a/.DS_Store b/.DS_Store\nnew file mode 100644\nindex 0000000..76d6ba9\nBinary files /dev/null and b/.DS_Store differ\n"
    },
    {
      "file_name": "backend/bin/git-hook",
      "status": "M",
      "additions": 0,
      "deletions": 0,
      "diff": "diff --git a/backend/bin/git-hook b/backend/bin/git-hook\nindex c3447bc..d58fdde 100755\nBinary files a/backend/bin/git-hook and b/backend/bin/git-hook differ\n"
    },
    {
      "file_name": "hello.cpp",
      "status": "A",
      "additions": 6,
      "deletions": 0,
      "diff": "diff --git a/hello.cpp b/hello.cpp\nnew file mode 100644\nindex 0000000..f253cbe\n--- /dev/null\n+++ b/hello.cpp\n@@ -0,0 +1,6 @@\n+#include \u003ciostream\u003e\n+\n+int main() {\n+    std::cout \u003c\u003c \"Hello, World!\" \u003c\u003c std::endl;\n+    return 0;\n+}\n\\ No newline at end of file\n"
    },
    {
      "file_name": "mcp/.env",
      "status": "A",
      "additions": 8,
      "deletions": 0,
      "diff": "diff --git a/mcp/.env b/mcp/.env\nnew file mode 100644\nindex 0000000..00d1eaa\n--- /dev/null\n+++ b/mcp/.env\n@@ -0,0 +1,8 @@\n+OPENAI_API_KEY = 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\n+LANGSMITH_TRACING=\"true\"\n+LANGSMITH_ENDPOINT=\"https://api.smith.langchain.com\"\n+LANGSMITH_API_KEY=\"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\"\n+LANGSMITH_PROJECT=\"BlogAgent\"\n+\n+GROQ_API_KEY=\"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\"\n+SLACK_WEBHOOK_URL=\"https://hooks.slack.com/services/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\"\n\\ No newline at end of file\n"
    },
    {
      "file_name": "mcp/README.md",
      "status": "A",
      "additions": 0,
      "deletions": 0,
      "diff": "diff --git a/mcp/README.md b/mcp/README.md\nnew file mode 100644\nindex 0000000..e69de29\n"
    },
    {
      "file_name": "mcp/__pycache__/api.cpython-313.pyc",
      "status": "A",
      "additions": 0,
      "deletions": 0,
      "diff": "diff --git a/mcp/__pycache__/api.cpython-313.pyc b/mcp/__pycache__/api.cpython-313.pyc\nnew file mode 100644\nindex 0000000..295f730\nBinary files /dev/null and b/mcp/__pycache__/api.cpython-313.pyc differ\n"
    },
    {
      "file_name": "mcp/agent.py",
      "status": "A",
      "additions": 325,
      "deletions": 0,
      "diff": "diff --git a/mcp/agent.py b/mcp/agent.py\nnew file mode 100644\nindex 0000000..25087fb\n--- /dev/null\n+++ b/mcp/agent.py\n@@ -0,0 +1,325 @@\n+import asyncio\r\n+import os\r\n+import requests\r\n+import json\r\n+from datetime import datetime\r\n+from langchain_mcp_adapters.client import MultiServerMCPClient\r\n+# Corrected import for the chat model\r\n+from langchain_openai import ChatOpenAI\r\n+from langgraph.graph import StateGraph, START, END\r\n+from typing import TypedDict, List\r\n+from typing_extensions import Annotated\r\n+from langgraph.graph.message import add_messages\r\n+from langgraph.prebuilt import ToolNode\r\n+from dotenv import load_dotenv\r\n+\r\n+# Load environment variables from .env file\r\n+load_dotenv()\r\n+\r\n+# Slack integration functions\r\n+async def send_to_slack(message: str, webhook_url: str = None) -\u003e bool:\r\n+    \"\"\"Send security analysis report to Slack\"\"\"\r\n+    if not webhook_url:\r\n+        webhook_url = os.getenv(\"SLACK_WEBHOOK_URL\")\r\n+    \r\n+    if not webhook_url:\r\n+        print(\"‚ö†Ô∏è No Slack webhook URL found. Set SLACK_WEBHOOK_URL in .env file\")\r\n+        return False\r\n+    \r\n+    try:\r\n+        # Format message for Slack\r\n+        slack_payload = {\r\n+            \"text\": \"üîí Security Analysis Report\",\r\n+            \"blocks\": [\r\n+                {\r\n+                    \"type\": \"header\",\r\n+                    \"text\": {\r\n+                        \"type\": \"plain_text\",\r\n+                        \"text\": \"üîí Security Analysis Report\"\r\n+                    }\r\n+                },\r\n+                {\r\n+                    \"type\": \"section\",\r\n+                    \"fields\": [\r\n+                        {\r\n+                            \"type\": \"mrkdwn\",\r\n+                            \"text\": f\"*Timestamp:* {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\"\r\n+                        },\r\n+                        {\r\n+                            \"type\": \"mrkdwn\",\r\n+                            \"text\": f\"*Analysis Type:* Automated Security Scan\"\r\n+                        }\r\n+                    ]\r\n+                },\r\n+                {\r\n+                    \"type\": \"section\",\r\n+                    \"text\": {\r\n+                        \"type\": \"mrkdwn\",\r\n+                        \"text\": f\"```\\n{message}\\n```\"\r\n+                    }\r\n+                }\r\n+            ]\r\n+        }\r\n+        \r\n+        response = requests.post(\r\n+            webhook_url,\r\n+            json=slack_payload,\r\n+            headers={'Content-Type': 'application/json'},\r\n+            timeout=10\r\n+        )\r\n+        \r\n+        if response.status_code == 200:\r\n+            print(\"‚úÖ Security report sent to Slack successfully!\")\r\n+            return True\r\n+        else:\r\n+            print(f\"‚ùå Failed to send to Slack. Status: {response.status_code}\")\r\n+            return False\r\n+            \r\n+    except Exception as e:\r\n+        print(f\"‚ùå Error sending to Slack: {str(e)}\")\r\n+        return False\r\n+\r\n+def format_security_report_for_slack(report_content: str) -\u003e str:\r\n+    \"\"\"Format the security report for better Slack presentation\"\"\"\r\n+    # Truncate if too long for Slack (max 3000 chars for text blocks)\r\n+    if len(report_content) \u003e 2800:\r\n+        report_content = report_content[:2800] + \"\\n...\\n[Report truncated - see full details in logs]\"\r\n+    \r\n+    return report_content\r\n+\r\n+# Define the state for the graph\r\n+# This structure correctly defines how messages and other data will be managed.\r\n+class SecurityAnalysisState(TypedDict):\r\n+    messages: Annotated[List, add_messages]\r\n+    file_queue: List[str]\r\n+    processed_files: List[str]\r\n+    scan_results: List[dict] # Note: This isn't currently being populated, but the field is ready.\r\n+    current_phase: str\r\n+\r\n+async def main():\r\n+    # FIX 1: Correctly initialize the model using the standard LangChain class.\r\n+    # \"gpt-4.1\" is not a valid model name. Using a standard, powerful model like \"gpt-4-turbo\".\r\n+    # Setting temperature to 0 encourages more deterministic, instruction-following behavior.\r\n+    model = ChatOpenAI(model=\"gpt-4o\", temperature=0)\r\n+\r\n+    # Set up the Multi-Server MCP Client\r\n+    # Ensure the path \"E:\\\\Threat_detect\" exists and is accessible.\r\n+    client = MultiServerMCPClient(\r\n+        {\r\n+            \"semgrep\": {\r\n+                \"url\": \"https://mcp.semgrep.ai/mcp\",\r\n+                \"transport\": \"streamable_http\",\r\n+            },\r\n+            \"filesystem\": {\r\n+                \"command\": \"npx\",\r\n+                \"args\": [\r\n+                    \"-y\",\r\n+                    \"@modelcontextprotocol/server-filesystem\",\r\n+                    os.getcwd()  # Using the current working directory for portability\r\n+                ],\r\n+                \"transport\": \"stdio\",\r\n+            }\r\n+        }\r\n+    )\r\n+    \r\n+    # Gracefully load tools, allowing the script to run without them.\r\n+    try:\r\n+        tools = await client.get_tools()\r\n+        print(\"‚úÖ MCP tools loaded successfully.\")\r\n+    except Exception as e:\r\n+        print(f\"‚ö†Ô∏è Warning: MCP tools failed to load ({str(e)}) ‚Äì continuing without tools.\")\r\n+        tools = []\r\n+\r\n+    # Bind the loaded tools to the model.\r\n+    model_with_tools = model.bind_tools(tools) if tools else model\r\n+    tool_node = ToolNode(tools) if tools else None\r\n+\r\n+    # --- Agent Definitions ---\r\n+\r\n+    async def discovery_agent(state: SecurityAnalysisState):\r\n+        \"\"\"Dynamically discovers all files within the 'threat-demo/IaC' subdirectory.\"\"\"\r\n+        print(\"--- DISCOVERY PHASE ---\")\r\n+    \r\n+        # Correctly point to the nested directory\r\n+        target_dir = os.path.join(\"threat-demo\", \"IaC\")\r\n+        discovered_files = []\r\n+    \r\n+        if not os.path.isdir(target_dir):\r\n+            print(f\"‚ö†Ô∏è Error: Directory '{target_dir}' not found. Make sure you are running the script from the correct location.\")\r\n+            return {\r\n+                \"file_queue\": [],\r\n+            }\r\n+\r\n+        # os.walk will find all files in the target directory and its subfolders\r\n+        for root, _, files in os.walk(target_dir):\r\n+            for filename in files:\r\n+                # Create the full relative path (e.g., \"threat-demo/IaC/terraform/main.tf\")\r\n+                full_path = os.path.join(root, filename)\r\n+                discovered_files.append(full_path)\r\n+                \r\n+        if discovered_files:\r\n+            print(f\"‚úÖ Discovered {len(discovered_files)} files to scan: {discovered_files}\")\r\n+        else:\r\n+            print(f\"‚ö†Ô∏è No files found in the '{target_dir}' directory.\")\r\n+\r\n+        return {\r\n+            \"current_phase\": \"processing\",\r\n+            \"file_queue\": discovered_files,\r\n+            \"processed_files\": [],\r\n+            \"scan_results\": []\r\n+        }\r\n+\r\n+    async def file_processor_agent(state: SecurityAnalysisState):\r\n+        \"\"\"Processes one file from the queue, invoking tools to scan it.\"\"\"\r\n+        print(f\"--- PROCESSING PHASE (Queue: {state['file_queue']}) ---\")\r\n+        file_queue = state.get(\"file_queue\", [])\r\n+        \r\n+        if not file_queue:\r\n+            # This case should ideally not be hit due to graph routing, but it's safe to have.\r\n+            return {\"current_phase\": \"reporting\"}\r\n+\r\n+        next_file = file_queue[0]\r\n+        remaining_queue = file_queue[1:]\r\n+        \r\n+        # Dynamically create the prompt based on the file type\r\n+        file_ext = next_file.split('.')[-1].lower()\r\n+        if file_ext in ['tf', 'tfvars']:\r\n+            config = 'p/terraform'\r\n+        elif file_ext in ['yml', 'yaml'] and 'k8s' in next_file.lower():\r\n+            config = 'p/kubernetes'\r\n+        elif 'dockerfile' in next_file.lower():\r\n+            config = 'p/docker'\r\n+        else:\r\n+            # Default to a generic, fast scan for other file types\r\n+            config = 'p/default'\r\n+\r\n+        scan_instruction = f\"\"\"\r\n+        You MUST perform a security scan on the file: `{next_file}`.\r\n+        \r\n+        Follow these steps MANDATORILY:\r\n+        1. Use the `read_text_file` tool to read the content of `{next_file}`.\r\n+        2. Use the `semgrep_scan` tool on the content you just read. Use the configuration: '{config}'.\r\n+        3. Analyze the JSON output from semgrep and report any security findings in a human-readable format.\r\n+        \r\n+        DO NOT describe what you would do. YOU MUST call the tools now.\r\n+        \"\"\"\r\n+        \r\n+        # Append the instruction to the message history and invoke the model\r\n+        response = await model_with_tools.ainvoke(state['messages'] + [(\"user\", scan_instruction)])\r\n+        \r\n+        return {\r\n+            \"messages\": [response],\r\n+            \"file_queue\": remaining_queue,\r\n+            \"processed_files\": state.get(\"processed_files\", []) + [next_file],\r\n+        }\r\n+\r\n+    async def report_generator_agent(state: SecurityAnalysisState):\r\n+        \"\"\"Generates a final summary report of all findings and sends to Slack.\"\"\"\r\n+        print(\"--- REPORTING PHASE ---\")\r\n+        summary_prompt = (\r\n+            \"You have completed the security scan. Please generate a final, comprehensive security report. \"\r\n+            f\"You have processed the following files: {state['processed_files']}. \"\r\n+            \"Summarize all the findings from the conversation history, group them by severity, \"\r\n+            \"and provide clear recommendations for remediation.\"\r\n+        )\r\n+        response = await model.ainvoke(state['messages'] + [(\"user\", summary_prompt)])\r\n+        \r\n+        # Extract the report content\r\n+        report_content = response.content if hasattr(response, 'content') else str(response)\r\n+        \r\n+        # Format and send to Slack\r\n+        formatted_report = format_security_report_for_slack(report_content)\r\n+        slack_success = await send_to_slack(formatted_report)\r\n+        \r\n+        if slack_success:\r\n+            print(\"üì§ Security report sent to Slack!\")\r\n+        else:\r\n+            print(\"üìã Security report generated (Slack delivery failed)\")\r\n+        \r\n+        return {\"messages\": [response], \"current_phase\": \"complete\"}\r\n+\r\n+    # --- Graph Routing Logic ---\r\n+\r\n+    # FIX 2: A simplified and more robust router function.\r\n+    # This function is now only responsible for the logic within the processing loop.\r\n+    def processing_router(state: SecurityAnalysisState):\r\n+        \"\"\"Determines the next step after the file_processor_agent runs.\"\"\"\r\n+        last_message = state[\"messages\"][-1]\r\n+        \r\n+        # If the last message from the agent contains a tool call, route to the tool node.\r\n+        if hasattr(last_message, \"tool_calls\") and last_message.tool_calls:\r\n+            return \"tools\"\r\n+        \r\n+        # If there are still files in the queue, loop back to the processor.\r\n+        if state.get(\"file_queue\"):\r\n+            return \"file_processor\"\r\n+            \r\n+        # If the queue is empty, proceed to generate the final report.\r\n+        return \"report_generator\"\r\n+\r\n+    # --- Graph Construction ---\r\n+\r\n+    builder = StateGraph(SecurityAnalysisState)\r\n+    \r\n+    # Add all the nodes to the graph\r\n+    builder.add_node(\"discovery\", discovery_agent)\r\n+    builder.add_node(\"file_processor\", file_processor_agent)\r\n+    builder.add_node(\"report_generator\", report_generator_agent)\r\n+    if tool_node:\r\n+        builder.add_node(\"tools\", tool_node)\r\n+\r\n+    # FIX 3: Simplified and more robust graph edges.\r\n+    # The workflow is now more explicit and easier to follow.\r\n+    builder.add_edge(START, \"discovery\")\r\n+    builder.add_edge(\"discovery\", \"file_processor\")\r\n+\r\n+    # The file_processor is the heart of the loop. Its next step is conditional.\r\n+    builder.add_conditional_edges(\r\n+        \"file_processor\",\r\n+        processing_router,\r\n+        # The dictionary maps the router's return values to the next node.\r\n+        {\r\n+            \"tools\": \"tools\" if tool_node else \"report_generator\", # Fallback if tools aren't loaded\r\n+            \"file_processor\": \"file_processor\",\r\n+            \"report_generator\": \"report_generator\"\r\n+        }\r\n+    )\r\n+    \r\n+    # CRITICAL FIX: After a tool is used, control MUST return to the agent that called it\r\n+    # so it can process the results. We add a direct edge back to the file_processor.\r\n+    if tool_node:\r\n+        builder.add_edge(\"tools\", \"file_processor\")\r\n+\r\n+    # The report generator is the final step before ending.\r\n+    builder.add_edge(\"report_generator\", END)\r\n+\r\n+    graph = builder.compile()\r\n+\r\n+    # --- Graph Execution ---\r\n+    \r\n+    # The initial prompt provides the agent with its persona and overall goal.\r\n+    initial_prompt = \"\"\"\r\n+    You are a security analysis AI agent. Your mission is to scan code for vulnerabilities using the provided tools.\r\n+    Start by analyzing the files given to you one by one. After scanning all files, provide a final summary report.\r\n+    Let's begin the analysis.\r\n+    \"\"\"\r\n+    initial_state = {\r\n+        \"messages\": [(\"user\", initial_prompt)],\r\n+    }\r\n+    \r\n+    # Invoke the graph with the initial state\r\n+    final_state = await graph.ainvoke(initial_state, config={\"recursion_limit\": 20})\r\n+    \r\n+    print(\"\\n--- FINAL REPORT ---\")\r\n+    # Print the last message from the AI, which contains the final report.\r\n+    print(final_state['messages'][-1].content)\r\n+\r\n+\r\n+if __name__ == \"__main__\":\r\n+    # To run this, you need a file named `vuln_sample.py` in the same directory.\r\n+    # Example `vuln_sample.py`:\r\n+    # import os\r\n+    # password = \"hardcoded_password\"\r\n+    # def run_command(cmd):\r\n+    #     os.system(f\"echo {cmd}\")\r\n+    asyncio.run(main())\n\\ No newline at end of file\n"
    },
    {
      "file_name": "mcp/api.py",
      "status": "A",
      "additions": 444,
      "deletions": 0,
      "diff": "diff --git a/mcp/api.py b/mcp/api.py\nnew file mode 100644\nindex 0000000..329e448\n--- /dev/null\n+++ b/mcp/api.py\n@@ -0,0 +1,444 @@\n+import asyncio\r\n+import os\r\n+import requests\r\n+import json\r\n+from datetime import datetime\r\n+from langchain_mcp_adapters.client import MultiServerMCPClient\r\n+from langchain_openai import ChatOpenAI\r\n+from langgraph.graph import StateGraph, START, END\r\n+from typing import TypedDict, List\r\n+from typing_extensions import Annotated\r\n+from langgraph.graph.message import add_messages\r\n+from langgraph.prebuilt import ToolNode\r\n+from dotenv import load_dotenv\r\n+import tempfile # NEW: For creating temporary files\r\n+\r\n+# Load environment variables from .env file\r\n+load_dotenv()\r\n+\r\n+# Slack integration functions (unchanged)\r\n+async def send_to_slack(message: str, webhook_url: str = None) -\u003e bool:\r\n+    \"\"\"Send security analysis report to Slack\"\"\"\r\n+    if not webhook_url:\r\n+        webhook_url = os.getenv(\"SLACK_WEBHOOK_URL\")\r\n+    \r\n+    if not webhook_url:\r\n+        print(\"‚ö†Ô∏è No Slack webhook URL found. Set SLACK_WEBHOOK_URL in .env file\")\r\n+        return False\r\n+    \r\n+    try:\r\n+        slack_payload = {\r\n+            \"text\": \"üîí Security Analysis Report\",\r\n+            \"blocks\": [\r\n+                {\r\n+                    \"type\": \"header\",\r\n+                    \"text\": {\r\n+                        \"type\": \"plain_text\",\r\n+                        \"text\": \"üîí Security Analysis Report\"\r\n+                    }\r\n+                },\r\n+                {\r\n+                    \"type\": \"section\",\r\n+                    \"fields\": [\r\n+                        {\r\n+                            \"type\": \"mrkdwn\",\r\n+                            \"text\": f\"*Timestamp:* {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\"\r\n+                        },\r\n+                        {\r\n+                            \"type\": \"mrkdwn\",\r\n+                            \"text\": f\"*Analysis Type:* Automated Security Scan\"\r\n+                        }\r\n+                    ]\r\n+                },\r\n+                {\r\n+                    \"type\": \"section\",\r\n+                    \"text\": {\r\n+                        \"type\": \"mrkdwn\",\r\n+                        \"text\": f\"```\\n{message}\\n```\"\r\n+                    }\r\n+                }\r\n+            ]\r\n+        }\r\n+        \r\n+        response = requests.post(\r\n+            webhook_url,\r\n+            json=slack_payload,\r\n+            headers={'Content-Type': 'application/json'},\r\n+            timeout=10\r\n+        )\r\n+        \r\n+        if response.status_code == 200:\r\n+            print(\"‚úÖ Security report sent to Slack successfully!\")\r\n+            return True\r\n+        else:\r\n+            print(f\"‚ùå Failed to send to Slack. Status: {response.status_code}\")\r\n+            return False\r\n+            \r\n+    except Exception as e:\r\n+        print(f\"‚ùå Error sending to Slack: {str(e)}\")\r\n+        return False\r\n+\r\n+def format_security_report_for_slack(report_content: str) -\u003e str:\r\n+    \"\"\"Format the security report for better Slack presentation\"\"\"\r\n+    if len(report_content) \u003e 2800:\r\n+        report_content = report_content[:2800] + \"\\n...\\n[Report truncated - see full details in logs]\"\r\n+    return report_content\r\n+\r\n+# Define the state for the graph (unchanged)\r\n+class SecurityAnalysisState(TypedDict):\r\n+    messages: Annotated[List, add_messages]\r\n+    file_queue: List[str]\r\n+    processed_files: List[str]\r\n+    scan_results: List[dict]\r\n+    current_phase: str\r\n+\r\n+async def main():\r\n+    model = ChatOpenAI(model=\"gpt-4o\", temperature=0)\r\n+\r\n+    # Set up MCP Client (unchanged)\r\n+    client = MultiServerMCPClient(\r\n+        {\r\n+            \"semgrep\": {\r\n+                \"url\": \"https://mcp.semgrep.ai/mcp\",\r\n+                \"transport\": \"streamable_http\",\r\n+            },\r\n+            \"filesystem\": {\r\n+                \"command\": \"npx\",\r\n+                \"args\": [\r\n+                    \"-y\",\r\n+                    \"@modelcontextprotocol/server-filesystem\",\r\n+                    os.getcwd()\r\n+                ],\r\n+                \"transport\": \"stdio\",\r\n+            }\r\n+        }\r\n+    )\r\n+    \r\n+    try:\r\n+        tools = await client.get_tools()\r\n+        print(\"‚úÖ MCP tools loaded successfully.\")\r\n+    except Exception as e:\r\n+        print(f\"‚ö†Ô∏è Warning: MCP tools failed to load ({str(e)}) ‚Äì continuing without tools.\")\r\n+        tools = []\r\n+\r\n+    model_with_tools = model.bind_tools(tools) if tools else model\r\n+    tool_node = ToolNode(tools) if tools else None\r\n+\r\n+    # --- Agent Definitions ---\r\n+\r\n+    # MODIFIED: This agent now fetches code from your API\r\n+    async def discovery_agent(state: SecurityAnalysisState):\r\n+        \"\"\"Fetches code from the API endpoint and prepares it for scanning.\"\"\"\r\n+        print(\"--- DISCOVERY PHASE (via API) ---\")\r\n+        api_endpoint = \"http://localhost:8000/api/v1/commits/latest\"\r\n+        discovered_files = []\r\n+        \r\n+        # NEW: Create a temporary directory to store the code files\r\n+        # This directory and its contents will be automatically deleted when the 'with' block is exited.\r\n+        with tempfile.TemporaryDirectory() as temp_dir:\r\n+            try:\r\n+                print(f\"Fetching code from {api_endpoint}...\")\r\n+                response = requests.get(api_endpoint, timeout=15)\r\n+                response.raise_for_status()  # Raise an exception for bad status codes (4xx or 5xx)\r\n+                \r\n+                # IMPORTANT: Assuming the API returns a JSON list of objects,\r\n+                # where each object has 'filename' and 'code' keys.\r\n+                # e.g., [{\"filename\": \"main.py\", \"code\": \"print('hello')\"}, ...]\r\n+                code_data = response.json()\r\n+\r\n+                if not isinstance(code_data, list):\r\n+                    print(f\"‚ö†Ô∏è Error: API response is not a JSON list. Received: {type(code_data)}\")\r\n+                    return {\"file_queue\": []}\r\n+\r\n+                for item in code_data:\r\n+                    filename = item.get(\"filename\", \"unknown_file.tmp\")\r\n+                    code_content = item.get(\"code\", \"\")\r\n+                    \r\n+                    # Create a secure temporary file path\r\n+                    file_path = os.path.join(temp_dir, filename)\r\n+                    \r\n+                    # Ensure subdirectory exists if filename contains slashes\r\n+                    os.makedirs(os.path.dirname(file_path), exist_ok=True)\r\n+                    \r\n+                    with open(file_path, \"w\", encoding=\"utf-8\") as f:\r\n+                        f.write(code_content)\r\n+                    \r\n+                    discovered_files.append(file_path)\r\n+\r\n+            except requests.exceptions.RequestException as e:\r\n+                print(f\"‚ùå Error fetching code from API: {e}\")\r\n+                # Return an empty queue to stop the process gracefully\r\n+                return {\"file_queue\": []}\r\n+            except json.JSONDecodeError:\r\n+                print(\"‚ùå Error: Failed to decode JSON from API response.\")\r\n+                return {\"file_queue\": []}\r\n+        \r\n+            if discovered_files:\r\n+                print(f\"‚úÖ Discovered {len(discovered_files)} files from API to scan: {discovered_files}\")\r\n+            else:\r\n+                print(\"‚ö†Ô∏è No files found from the API endpoint.\")\r\n+\r\n+            # This part is tricky because the temp_dir will be deleted.\r\n+            # For a real-world scenario, you might manage the temp dir outside this function\r\n+            # or pass the content directly. For this example, we'll proceed,\r\n+            # but be aware the files are gone after this function returns.\r\n+            # A better approach is shown in the next version of main().\r\n+\r\n+            # For now, let's assume the graph runs fast enough or the file handles remain open\r\n+            # A more robust solution is to manage temp_dir in the main execution scope.\r\n+\r\n+            # Let's adjust main() to handle the temporary directory correctly.\r\n+            # The logic to create files will be moved there. This function will just fetch.\r\n+            \r\n+        # This function will now be redefined inside main() to have access to a persistent temp_dir\r\n+        pass # Placeholder\r\n+\r\n+    # All other agents (file_processor_agent, report_generator_agent) remain UNCHANGED\r\n+    # because they are already designed to work with a queue of file paths.\r\n+    async def file_processor_agent(state: SecurityAnalysisState):\r\n+        \"\"\"Processes one file from the queue, invoking tools to scan it.\"\"\"\r\n+        print(f\"--- PROCESSING PHASE (Queue: {state['file_queue']}) ---\")\r\n+        file_queue = state.get(\"file_queue\", [])\r\n+        \r\n+        if not file_queue:\r\n+            return {\"current_phase\": \"reporting\"}\r\n+\r\n+        next_file = file_queue[0]\r\n+        remaining_queue = file_queue[1:]\r\n+        \r\n+        file_ext = os.path.basename(next_file).split('.')[-1].lower()\r\n+        if file_ext in ['tf', 'tfvars']:\r\n+            config = 'p/terraform'\r\n+        elif file_ext in ['yml', 'yaml'] and 'k8s' in next_file.lower():\r\n+            config = 'p/kubernetes'\r\n+        elif 'dockerfile' in next_file.lower():\r\n+            config = 'p/docker'\r\n+        else:\r\n+            config = 'p/default'\r\n+\r\n+        scan_instruction = f\"\"\"\r\n+        You MUST perform a security scan on the file: `{next_file}`.\r\n+        \r\n+        Follow these steps MANDATORILY:\r\n+        1. Use the `read_text_file` tool to read the content of `{next_file}`.\r\n+        2. Use the `semgrep_scan` tool on the content you just read. Use the configuration: '{config}'.\r\n+        3. Analyze the JSON output from semgrep and report any security findings in a human-readable format.\r\n+        \r\n+        DO NOT describe what you would do. YOU MUST call the tools now.\r\n+        \"\"\"\r\n+        \r\n+        response = await model_with_tools.ainvoke(state['messages'] + [(\"user\", scan_instruction)])\r\n+        \r\n+        return {\r\n+            \"messages\": [response],\r\n+            \"file_queue\": remaining_queue,\r\n+            \"processed_files\": state.get(\"processed_files\", []) + [next_file],\r\n+            \"scan_results\": state.get(\"scan_results\", [])\r\n+        }\r\n+\r\n+    async def report_generator_agent(state: SecurityAnalysisState):\r\n+        \"\"\"Generates a final summary report of all findings and sends to Slack.\"\"\"\r\n+        print(\"--- REPORTING PHASE ---\")\r\n+        \r\n+        # Safely get processed_files with a default empty list\r\n+        processed_files = state.get(\"processed_files\", [])\r\n+        \r\n+        summary_prompt = (\r\n+            \"You have completed the security scan. Please generate a final, comprehensive security report. \"\r\n+            f\"You have processed the following files: {[os.path.basename(f) for f in processed_files]}. \"\r\n+            \"Summarize all the findings from the conversation history, group them by severity, \"\r\n+            \"and provide clear recommendations for remediation.\"\r\n+        )\r\n+        response = await model.ainvoke(state['messages'] + [(\"user\", summary_prompt)])\r\n+        \r\n+        report_content = response.content if hasattr(response, 'content') else str(response)\r\n+        \r\n+        formatted_report = format_security_report_for_slack(report_content)\r\n+        slack_success = await send_to_slack(formatted_report)\r\n+        \r\n+        if slack_success:\r\n+            print(\"üì§ Security report sent to Slack!\")\r\n+        else:\r\n+            print(\"üìã Security report generated (Slack delivery failed)\")\r\n+        \r\n+        return {\"messages\": [response], \"current_phase\": \"complete\"}\r\n+\r\n+    # Routing logic (unchanged)\r\n+    def processing_router(state: SecurityAnalysisState):\r\n+        \"\"\"Determines the next step after the file_processor_agent runs.\"\"\"\r\n+        last_message = state[\"messages\"][-1]\r\n+        \r\n+        if hasattr(last_message, \"tool_calls\") and last_message.tool_calls:\r\n+            return \"tools\"\r\n+        \r\n+        if state.get(\"file_queue\"):\r\n+            return \"file_processor\"\r\n+            \r\n+        return \"report_generator\"\r\n+    \r\n+    # MODIFIED: Create a temporary directory that persists for the entire graph execution\r\n+    with tempfile.TemporaryDirectory() as temp_dir:\r\n+        # NEW: Redefine the discovery agent inside this context to access temp_dir\r\n+        async def discovery_agent_api(state: SecurityAnalysisState):\r\n+            \"\"\"Fetches code from the API endpoint and saves it to a persistent temp directory.\"\"\"\r\n+            print(\"--- DISCOVERY PHASE (via API) ---\")\r\n+            api_endpoint = \"http://localhost:8000/api/v1/commits/latest\"\r\n+            discovered_files = []\r\n+\r\n+            try:\r\n+                print(f\"Fetching code from {api_endpoint}...\")\r\n+                response = requests.get(api_endpoint, timeout=15)\r\n+                response.raise_for_status()\r\n+                api_response = response.json()\r\n+\r\n+                # Handle the actual API response format\r\n+                if not isinstance(api_response, dict) or \"data\" not in api_response:\r\n+                    print(f\"‚ö†Ô∏è Error: API response must be a JSON object with 'data' field. Got {type(api_response).__name__}.\")\r\n+                    return {\r\n+                        \"file_queue\": [],\r\n+                        \"processed_files\": [],\r\n+                        \"scan_results\": [],\r\n+                        \"current_phase\": \"processing\"\r\n+                    }\r\n+\r\n+                commit_data = api_response[\"data\"]\r\n+                \r\n+                # Extract file diffs from the commit data\r\n+                file_diffs = commit_data.get(\"file_diffs\", [])\r\n+                \r\n+                if not file_diffs:\r\n+                    print(\"‚ö†Ô∏è No file diffs found in the commit data.\")\r\n+                    return {\r\n+                        \"file_queue\": [],\r\n+                        \"processed_files\": [],\r\n+                        \"scan_results\": [],\r\n+                        \"current_phase\": \"processing\"\r\n+                    }\r\n+\r\n+                for file_diff in file_diffs:\r\n+                    filename = file_diff.get(\"file_name\", f\"unknown_file_{len(discovered_files)}.tmp\")\r\n+                    diff_content = file_diff.get(\"diff\", \"\")\r\n+                    \r\n+                    # Skip binary files or files without meaningful content\r\n+                    if \"Binary files\" in diff_content or not diff_content.strip():\r\n+                        print(f\"‚ö†Ô∏è Skipping binary or empty file: {filename}\")\r\n+                        continue\r\n+                    \r\n+                    # Extract the actual file content from the diff\r\n+                    # For added files, extract the new content\r\n+                    # For modified files, we'll use the diff content for analysis\r\n+                    file_content = extract_file_content_from_diff(diff_content, filename)\r\n+                    \r\n+                    if not file_content:\r\n+                        print(f\"‚ö†Ô∏è Could not extract content for file: {filename}\")\r\n+                        continue\r\n+                    \r\n+                    # Create a secure temporary file path\r\n+                    safe_filename = os.path.basename(filename)  # Use basename to avoid path traversal\r\n+                    file_path = os.path.join(temp_dir, safe_filename)\r\n+                    \r\n+                    with open(file_path, \"w\", encoding=\"utf-8\") as f:\r\n+                        f.write(file_content)\r\n+                    \r\n+                    discovered_files.append(file_path)\r\n+                    print(f\"‚úÖ Prepared file for analysis: {filename}\")\r\n+\r\n+            except requests.exceptions.RequestException as e:\r\n+                print(f\"‚ùå Error fetching code from API: {e}\")\r\n+                return {\r\n+                    \"file_queue\": [],\r\n+                    \"processed_files\": [],\r\n+                    \"scan_results\": [],\r\n+                    \"current_phase\": \"processing\"\r\n+                }\r\n+            except json.JSONDecodeError:\r\n+                print(f\"‚ùå Error: Failed to decode JSON from API response.\")\r\n+                return {\r\n+                    \"file_queue\": [],\r\n+                    \"processed_files\": [],\r\n+                    \"scan_results\": [],\r\n+                    \"current_phase\": \"processing\"\r\n+                }\r\n+\r\n+            if discovered_files:\r\n+                print(f\"‚úÖ Discovered {len(discovered_files)} files from API to scan: {discovered_files}\")\r\n+            else:\r\n+                print(\"‚ö†Ô∏è No files found from the API endpoint.\")\r\n+\r\n+            return {\r\n+                \"current_phase\": \"processing\",\r\n+                \"file_queue\": discovered_files,\r\n+                \"processed_files\": [],\r\n+                \"scan_results\": []\r\n+            }\r\n+\r\n+        def extract_file_content_from_diff(diff_content: str, filename: str) -\u003e str:\r\n+            \"\"\"Extract the actual file content from a git diff.\"\"\"\r\n+            lines = diff_content.split('\\n')\r\n+            content_lines = []\r\n+            \r\n+            for line in lines:\r\n+                # Skip diff headers and metadata\r\n+                if line.startswith('diff --git') or line.startswith('index ') or line.startswith('---') or line.startswith('+++'):\r\n+                    continue\r\n+                \r\n+                # Remove the diff markers and extract content\r\n+                if line.startswith('+') and not line.startswith('+++'):\r\n+                    # This is an added line, include it\r\n+                    content_lines.append(line[1:])\r\n+                elif line.startswith(' ') and not line.startswith(' '):\r\n+                    # This is an unchanged line, include it\r\n+                    content_lines.append(line[1:])\r\n+                # Skip lines starting with '-' as they are deletions\r\n+            \r\n+            return '\\n'.join(content_lines)\r\n+\r\n+\r\n+        # --- Graph Construction ---\r\n+        builder = StateGraph(SecurityAnalysisState)\r\n+        \r\n+        builder.add_node(\"discovery\", discovery_agent_api) # MODIFIED: Use the new API-based agent\r\n+        builder.add_node(\"file_processor\", file_processor_agent)\r\n+        builder.add_node(\"report_generator\", report_generator_agent)\r\n+        if tool_node:\r\n+            builder.add_node(\"tools\", tool_node)\r\n+\r\n+        builder.add_edge(START, \"discovery\")\r\n+        builder.add_edge(\"discovery\", \"file_processor\")\r\n+\r\n+        builder.add_conditional_edges(\r\n+            \"file_processor\",\r\n+            processing_router,\r\n+            {\r\n+                \"tools\": \"tools\" if tool_node else \"report_generator\",\r\n+                \"file_processor\": \"file_processor\",\r\n+                \"report_generator\": \"report_generator\"\r\n+            }\r\n+        )\r\n+        \r\n+        if tool_node:\r\n+            builder.add_edge(\"tools\", \"file_processor\")\r\n+\r\n+        builder.add_edge(\"report_generator\", END)\r\n+\r\n+        graph = builder.compile()\r\n+\r\n+        # --- Graph Execution ---\r\n+        initial_prompt = \"\"\"\r\n+        You are a security analysis AI agent. Your mission is to scan code for vulnerabilities using the provided tools.\r\n+        Start by analyzing the files given to you one by one. After scanning all files, provide a final summary report.\r\n+        Let's begin the analysis.\r\n+        \"\"\"\r\n+        initial_state = {\r\n+            \"messages\": [(\"user\", initial_prompt)],\r\n+        }\r\n+        \r\n+        final_state = await graph.ainvoke(initial_state, config={\"recursion_limit\": 50}) # Increased recursion limit\r\n+        \r\n+        print(\"\\n--- FINAL REPORT ---\")\r\n+        if final_state['messages'] and final_state['messages'][-1]:\r\n+             print(final_state['messages'][-1].content)\r\n+\r\n+\r\n+if __name__ == \"__main__\":\r\n+    asyncio.run(main())\n\\ No newline at end of file\n"
    },
    {
      "file_name": "mcp/main.py",
      "status": "A",
      "additions": 6,
      "deletions": 0,
      "diff": "diff --git a/mcp/main.py b/mcp/main.py\nnew file mode 100644\nindex 0000000..196d48c\n--- /dev/null\n+++ b/mcp/main.py\n@@ -0,0 +1,6 @@\n+def main():\n+    print(\"Hello from threat-detect!\")\n+\n+\n+if __name__ == \"__main__\":\n+    main()\n"
    },
    {
      "file_name": "mcp/pyproject.toml",
      "status": "A",
      "additions": 22,
      "deletions": 0,
      "diff": "diff --git a/mcp/pyproject.toml b/mcp/pyproject.toml\nnew file mode 100644\nindex 0000000..a6dbe70\n--- /dev/null\n+++ b/mcp/pyproject.toml\n@@ -0,0 +1,22 @@\n+[project]\n+name = \"threat-detect\"\n+version = \"0.1.0\"\n+description = \"Add your description here\"\n+readme = \"README.md\"\n+requires-python = \"\u003e=3.13\"\n+dependencies = [\n+    \"fastapi\u003e=0.116.1\",\n+    \"langchain\u003e=0.3.27\",\n+    \"langchain-core\u003e=0.3.75\",\n+    \"langchain-groq\u003e=0.3.7\",\n+    \"langchain-mcp-adapters\u003e=0.1.9\",\n+    \"langchain-openai\u003e=0.3.32\",\n+    \"langgraph\u003e=0.6.6\",\n+    \"nest-asyncio\u003e=1.6.0\",\n+    \"pydantic\u003e=2.11.7\",\n+    \"python-dotenv\u003e=1.1.1\",\n+    \"requests\u003e=2.32.5\",\n+    \"tavily-python\u003e=0.7.11\",\n+    \"typing-extensions\u003e=4.15.0\",\n+    \"uvicorn[standard]\u003e=0.35.0\",\n+]\n"
    },
    {
      "file_name": "mcp/requirements.txt",
      "status": "A",
      "additions": 14,
      "deletions": 0,
      "diff": "diff --git a/mcp/requirements.txt b/mcp/requirements.txt\nnew file mode 100644\nindex 0000000..1264b0a\n--- /dev/null\n+++ b/mcp/requirements.txt\n@@ -0,0 +1,14 @@\n+langchain\n+langchain-core\n+langgraph\n+langchain-openai\n+langchain-mcp-adapters\n+\n+pydantic\n+typing-extensions\n+nest-asyncio\n+\n+tavily-python\n+python-dotenv\n+langchain_mcp_adapters\n+requests\n"
    },
    {
      "file_name": "mcp/simple_multi_agent.py",
      "status": "A",
      "additions": 239,
      "deletions": 0,
      "diff": "diff --git a/mcp/simple_multi_agent.py b/mcp/simple_multi_agent.py\nnew file mode 100644\nindex 0000000..c3cb05f\n--- /dev/null\n+++ b/mcp/simple_multi_agent.py\n@@ -0,0 +1,239 @@\n+import asyncio\r\n+from typing import Dict, List, Any\r\n+from dataclasses import dataclass\r\n+from langchain_mcp_adapters.client import MultiServerMCPClient\r\n+from langchain.chat_models import init_chat_model\r\n+from dotenv import load_dotenv\r\n+\r\n+load_dotenv()\r\n+\r\n+@dataclass\r\n+class SecurityFinding:\r\n+    file_path: str\r\n+    line_number: int\r\n+    rule_id: str\r\n+    severity: str\r\n+    message: str\r\n+\r\n+class MultiAgentSecuritySystem:\r\n+    def __init__(self):\r\n+        self.model = init_chat_model(\"groq:qwen/qwen3-32b\")\r\n+        self.tools = []\r\n+        self.files_read = set()\r\n+        self.findings = []\r\n+    \r\n+    async def setup_mcp(self):\r\n+        \"\"\"Initialize MCP client and tools\"\"\"\r\n+        client = MultiServerMCPClient({\r\n+            \"semgrep\": {\r\n+                \"url\": \"https://mcp.semgrep.ai/mcp\",\r\n+                \"transport\": \"streamable_http\",\r\n+            },\r\n+            \"filesystem\": {\r\n+                \"command\": \"npx\",\r\n+                \"args\": [\r\n+                    \"-y\",\r\n+                    \"@modelcontextprotocol/server-filesystem\",\r\n+                    \"E:\\\\Threat_detect\"\r\n+                ],\r\n+                \"transport\": \"stdio\",\r\n+            }\r\n+        })\r\n+        \r\n+        try:\r\n+            self.tools = await client.get_tools()\r\n+            print(\"‚úÖ MCP tools loaded successfully\")\r\n+        except Exception as e:\r\n+            print(f\"‚ùå MCP tools failed to load: {e}\")\r\n+            self.tools = []\r\n+    \r\n+    async def file_reader_agent(self, file_path: str) -\u003e str:\r\n+        \"\"\"Agent 1: Read files (prevents re-reading)\"\"\"\r\n+        if file_path in self.files_read:\r\n+            return f\"[SKIP] Already read: {file_path}\"\r\n+        \r\n+        try:\r\n+            read_tool = next((t for t in self.tools if getattr(t, \"name\", \"\") == \"read_text_file\"), None)\r\n+            if not read_tool:\r\n+                return f\"[ERROR] No read tool available\"\r\n+            \r\n+            result = await read_tool.ainvoke({\"path\": file_path})\r\n+            self.files_read.add(file_path)\r\n+            print(f\"üìñ Read: {file_path}\")\r\n+            return result\r\n+        except Exception as e:\r\n+            return f\"[ERROR] {file_path}: {str(e)}\"\r\n+    \r\n+    async def security_analyzer_agent(self, files_content: Dict[str, str]) -\u003e List[SecurityFinding]:\r\n+        \"\"\"Agent 2: Analyze security (structured, no hallucination)\"\"\"\r\n+        try:\r\n+            semgrep_tool = next((t for t in self.tools if getattr(t, \"name\", \"\") == \"semgrep_scan\"), None)\r\n+            if not semgrep_tool:\r\n+                return []\r\n+            \r\n+            # Batch files for efficiency\r\n+            code_files = [\r\n+                {\"filename\": path, \"content\": content}\r\n+                for path, content in files_content.items()\r\n+            ]\r\n+            \r\n+            # Determine config based on file types\r\n+            config = \"p/security-audit\"  # Default\r\n+            if any(path.endswith(('.tf', '.tfvars')) for path in files_content.keys()):\r\n+                config = \"p/terraform\"\r\n+            elif any(path.endswith(('.yml', '.yaml')) for path in files_content.keys()):\r\n+                config = \"p/kubernetes\"\r\n+            elif any('Dockerfile' in path for path in files_content.keys()):\r\n+                config = \"p/docker\"\r\n+            \r\n+            print(f\"üîç Scanning {len(code_files)} files with config: {config}\")\r\n+            result = await semgrep_tool.ainvoke({\r\n+                \"code_files\": code_files,\r\n+                \"config\": config\r\n+            })\r\n+            \r\n+            # Parse results (no LLM hallucination - direct parsing)\r\n+            findings = []\r\n+            if isinstance(result, dict) and \"results\" in result:\r\n+                for finding in result[\"results\"]:\r\n+                    findings.append(SecurityFinding(\r\n+                        file_path=finding.get(\"path\", \"\"),\r\n+                        line_number=finding.get(\"start\", {}).get(\"line\", 0),\r\n+                        rule_id=finding.get(\"check_id\", \"\"),\r\n+                        severity=finding.get(\"extra\", {}).get(\"severity\", \"\"),\r\n+                        message=finding.get(\"extra\", {}).get(\"message\", \"\")\r\n+                    ))\r\n+            \r\n+            print(f\"üéØ Found {len(findings)} security issues\")\r\n+            return findings\r\n+            \r\n+        except Exception as e:\r\n+            print(f\"‚ùå Security analysis failed: {e}\")\r\n+            return []\r\n+    \r\n+    async def report_writer_agent(self, findings: List[SecurityFinding], files_analyzed: List[str]) -\u003e str:\r\n+        \"\"\"Agent 3: Write reports (structured, factual)\"\"\"\r\n+        # Group by severity\r\n+        critical = [f for f in findings if f.severity.upper() == \"ERROR\"]\r\n+        high = [f for f in findings if f.severity.upper() == \"WARNING\"]\r\n+        medium = [f for f in findings if f.severity.upper() == \"INFO\"]\r\n+        \r\n+        # Generate structured report (no LLM hallucination)\r\n+        report = f\"\"\"\r\n+# üîí Security Analysis Report\r\n+\r\n+## üìä Summary\r\n+- **Files Analyzed**: {len(files_analyzed)}\r\n+- **Total Findings**: {len(findings)}\r\n+- **üö® Critical (ERROR)**: {len(critical)}\r\n+- **‚ö†Ô∏è High (WARNING)**: {len(high)}\r\n+- **‚ÑπÔ∏è Medium (INFO)**: {len(medium)}\r\n+\r\n+## üìÅ Files Analyzed\r\n+{chr(10).join(f\"- {f}\" for f in files_analyzed)}\r\n+\r\n+## üö® Critical Findings\r\n+\"\"\"\r\n+        \r\n+        for finding in critical:\r\n+            report += f\"\"\"\r\n+### {finding.rule_id}\r\n+- **File**: `{finding.file_path}:{finding.line_number}`\r\n+- **Severity**: {finding.severity}\r\n+- **Issue**: {finding.message}\r\n+\"\"\"\r\n+        \r\n+        report += \"\\n## ‚ö†Ô∏è High Priority Findings\\n\"\r\n+        for finding in high:\r\n+            report += f\"\"\"\r\n+### {finding.rule_id}\r\n+- **File**: `{finding.file_path}:{finding.line_number}`\r\n+- **Severity**: {finding.severity}\r\n+- **Issue**: {finding.message}\r\n+\"\"\"\r\n+        \r\n+        report += \"\\n## üõ†Ô∏è Recommendations\\n\"\r\n+        if critical:\r\n+            report += \"1. **URGENT**: Fix all Critical findings immediately\\n\"\r\n+        if high:\r\n+            report += \"2. **HIGH PRIORITY**: Address High severity findings\\n\"\r\n+        if findings:\r\n+            report += \"3. **PREVENTION**: Integrate Semgrep into CI/CD pipeline\\n\"\r\n+            report += \"4. **TRAINING**: Provide security training for developers\\n\"\r\n+        else:\r\n+            report += \"‚úÖ No security issues found. Continue regular monitoring.\\n\"\r\n+        \r\n+        return report\r\n+    \r\n+    async def context_manager_agent(self, current_step: str, data_size: int) -\u003e bool:\r\n+        \"\"\"Agent 4: Manage context window\"\"\"\r\n+        max_context = 8000\r\n+        if data_size \u003e max_context:\r\n+            print(f\"‚ö†Ô∏è Context limit reached ({data_size} \u003e {max_context})\")\r\n+            return False\r\n+        \r\n+        print(f\"üìä Context: {current_step} ({data_size} chars)\")\r\n+        return True\r\n+    \r\n+    async def analyze_directory(self, target_dir: str):\r\n+        \"\"\"Main orchestration method\"\"\"\r\n+        print(\"üöÄ Starting Multi-Agent Security Analysis...\")\r\n+        \r\n+        # Setup\r\n+        await self.setup_mcp()\r\n+        if not self.tools:\r\n+            print(\"‚ùå Cannot proceed without MCP tools\")\r\n+            return\r\n+        \r\n+        # Step 1: File Discovery\r\n+        print(\"\\nüìÅ Step 1: File Discovery\")\r\n+        try:\r\n+            list_tool = next((t for t in self.tools if getattr(t, \"name\", \"\") == \"list_directory\"), None)\r\n+            if list_tool:\r\n+                files = await list_tool.ainvoke({\"path\": target_dir})\r\n+                print(f\"Found {len(files)} items\")\r\n+            else:\r\n+                print(\"‚ùå No list_directory tool available\")\r\n+                return\r\n+        except Exception as e:\r\n+            print(f\"‚ùå File discovery failed: {e}\")\r\n+            return\r\n+        \r\n+        # Step 2: Read Files (Agent 1)\r\n+        print(\"\\nüìñ Step 2: Reading Files\")\r\n+        files_content = {}\r\n+        for file_path in files:\r\n+            if not file_path.startswith(\"[DIR]\"):\r\n+                full_path = f\"{target_dir}/{file_path.replace('[FILE] ', '')}\"\r\n+                content = await self.file_reader_agent(full_path)\r\n+                \r\n+                if not content.startswith(\"[ERROR]\") and not content.startswith(\"[SKIP]\"):\r\n+                    files_content[full_path] = content\r\n+                    \r\n+                    # Context management\r\n+                    if not await self.context_manager_agent(\"Reading files\", len(content)):\r\n+                        break\r\n+        \r\n+        print(f\"‚úÖ Read {len(files_content)} files\")\r\n+        \r\n+        # Step 3: Security Analysis (Agent 2)\r\n+        print(\"\\nüîç Step 3: Security Analysis\")\r\n+        findings = await self.security_analyzer_agent(files_content)\r\n+        \r\n+        # Step 4: Generate Report (Agent 3)\r\n+        print(\"\\nüìù Step 4: Generating Report\")\r\n+        report = await self.report_writer_agent(findings, list(files_content.keys()))\r\n+        \r\n+        # Step 5: Output\r\n+        print(\"\\n\" + \"=\"*80)\r\n+        print(report)\r\n+        print(\"=\"*80)\r\n+        \r\n+        print(f\"\\n‚úÖ Analysis complete: {len(findings)} issues in {len(files_content)} files\")\r\n+\r\n+async def main():\r\n+    system = MultiAgentSecuritySystem()\r\n+    await system.analyze_directory(\"threat-demo/IAC\")\r\n+\r\n+if __name__ == \"__main__\":\r\n+    asyncio.run(main())\r\n"
    },
    {
      "file_name": "mcp/test_api.py",
      "status": "A",
      "additions": 143,
      "deletions": 0,
      "diff": "diff --git a/mcp/test_api.py b/mcp/test_api.py\nnew file mode 100644\nindex 0000000..e0bd6b4\n--- /dev/null\n+++ b/mcp/test_api.py\n@@ -0,0 +1,143 @@\n+#!/usr/bin/env python3\r\n+\"\"\"\r\n+Test script for the MCP Code Analysis API\r\n+\"\"\"\r\n+\r\n+import requests\r\n+import json\r\n+import time\r\n+\r\n+# API endpoint\r\n+API_URL = \"http://localhost:8000/analyze-file\"\r\n+\r\n+def test_api_with_vulnerable_code():\r\n+    \"\"\"Test the API with the vulnerable code from vuln_sample.py\"\"\"\r\n+    \r\n+    # Read the vulnerable code\r\n+    with open(\"vuln_sample.py\", \"r\") as f:\r\n+        vulnerable_code = f.read()\r\n+    \r\n+    # Prepare the request\r\n+    payload = {\r\n+        \"code\": vulnerable_code,\r\n+        \"language\": \"python\"\r\n+    }\r\n+    \r\n+    print(\"üß™ Testing API with vulnerable code...\")\r\n+    print(f\"üì° Sending request to: {API_URL}\")\r\n+    print(f\"üìÑ Code length: {len(vulnerable_code)} characters\")\r\n+    \r\n+    try:\r\n+        # Send the request\r\n+        response = requests.post(\r\n+            API_URL,\r\n+            json=payload,\r\n+            headers={\"Content-Type\": \"application/json\"},\r\n+            timeout=60  # 60 second timeout for analysis\r\n+        )\r\n+        \r\n+        if response.status_code == 200:\r\n+            result = response.json()\r\n+            print(\"‚úÖ API request successful!\")\r\n+            print(\"\\n\" + \"=\"*80)\r\n+            print(\"üîí SECURITY ANALYSIS REPORT\")\r\n+            print(\"=\"*80)\r\n+            print(result[\"report\"])\r\n+            print(\"=\"*80)\r\n+            return True\r\n+        else:\r\n+            print(f\"‚ùå API request failed with status: {response.status_code}\")\r\n+            print(f\"Response: {response.text}\")\r\n+            return False\r\n+            \r\n+    except requests.exceptions.ConnectionError:\r\n+        print(\"‚ùå Connection failed. Is the API server running on localhost:8000?\")\r\n+        print(\"üí° Try running: python api.py\")\r\n+        return False\r\n+    except requests.exceptions.Timeout:\r\n+        print(\"‚ùå Request timed out. The analysis took too long.\")\r\n+        return False\r\n+    except Exception as e:\r\n+        print(f\"‚ùå Unexpected error: {e}\")\r\n+        return False\r\n+\r\n+def test_api_with_simple_code():\r\n+    \"\"\"Test the API with a simple, safe code snippet\"\"\"\r\n+    \r\n+    simple_code = '''\r\n+def hello_world():\r\n+    \"\"\"A simple, safe function\"\"\"\r\n+    return \"Hello, World!\"\r\n+\r\n+def add_numbers(a, b):\r\n+    \"\"\"Add two numbers safely\"\"\"\r\n+    return a + b\r\n+\r\n+if __name__ == \"__main__\":\r\n+    print(hello_world())\r\n+    print(add_numbers(5, 3))\r\n+'''\r\n+    \r\n+    payload = {\r\n+        \"code\": simple_code,\r\n+        \"language\": \"python\"\r\n+    }\r\n+    \r\n+    print(\"\\nüß™ Testing API with simple, safe code...\")\r\n+    \r\n+    try:\r\n+        response = requests.post(\r\n+            API_URL,\r\n+            json=payload,\r\n+            headers={\"Content-Type\": \"application/json\"},\r\n+            timeout=30\r\n+        )\r\n+        \r\n+        if response.status_code == 200:\r\n+            result = response.json()\r\n+            print(\"‚úÖ Simple code test successful!\")\r\n+            print(\"\\n\" + \"=\"*50)\r\n+            print(\"üìä ANALYSIS RESULT\")\r\n+            print(\"=\"*50)\r\n+            print(result[\"report\"])\r\n+            print(\"=\"*50)\r\n+            return True\r\n+        else:\r\n+            print(f\"‚ùå Simple code test failed: {response.status_code}\")\r\n+            return False\r\n+            \r\n+    except Exception as e:\r\n+        print(f\"‚ùå Simple code test error: {e}\")\r\n+        return False\r\n+\r\n+def main():\r\n+    \"\"\"Run all tests\"\"\"\r\n+    print(\"üöÄ Starting API Tests for Threat Detection System\")\r\n+    print(\"=\"*60)\r\n+    \r\n+    # Wait a moment for server to be ready\r\n+    print(\"‚è≥ Waiting 2 seconds for server to be ready...\")\r\n+    time.sleep(2)\r\n+    \r\n+    # Test 1: Simple code\r\n+    success1 = test_api_with_simple_code()\r\n+    \r\n+    # Test 2: Vulnerable code\r\n+    success2 = test_api_with_vulnerable_code()\r\n+    \r\n+    # Summary\r\n+    print(\"\\n\" + \"=\"*60)\r\n+    print(\"üìã TEST SUMMARY\")\r\n+    print(\"=\"*60)\r\n+    print(f\"Simple Code Test: {'‚úÖ PASSED' if success1 else '‚ùå FAILED'}\")\r\n+    print(f\"Vulnerable Code Test: {'‚úÖ PASSED' if success2 else '‚ùå FAILED'}\")\r\n+    \r\n+    if success1 and success2:\r\n+        print(\"\\nüéâ All tests passed! Your threat detection API is working correctly.\")\r\n+    else:\r\n+        print(\"\\n‚ö†Ô∏è Some tests failed. Check the error messages above.\")\r\n+    \r\n+    return success1 and success2\r\n+\r\n+if __name__ == \"__main__\":\r\n+    main()\r\n"
    },
    {
      "file_name": "mcp/threat-demo",
      "status": "A",
      "additions": 1,
      "deletions": 0,
      "diff": "diff --git a/mcp/threat-demo b/mcp/threat-demo\nnew file mode 160000\nindex 0000000..e48ccb3\n--- /dev/null\n+++ b/mcp/threat-demo\n@@ -0,0 +1 @@\n+Subproject commit e48ccb3cfede6f530fd5c23178b62c5b9017331b\n"
    },
    {
      "file_name": "mcp/uv.lock",
      "status": "A",
      "additions": 1183,
      "deletions": 0,
      "diff": "diff --git a/mcp/uv.lock b/mcp/uv.lock\nnew file mode 100644\nindex 0000000..b750743\n--- /dev/null\n+++ b/mcp/uv.lock\n@@ -0,0 +1,1183 @@\n+version = 1\n+revision = 2\n+requires-python = \"\u003e=3.13\"\n+\n+[[package]]\n+name = \"annotated-types\"\n+version = \"0.7.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/ee/67/531ea369ba64dcff5ec9c3402f9f51bf748cec26dde048a2f973a4eea7f5/annotated_types-0.7.0.tar.gz\", hash = \"sha256:aff07c09a53a08bc8cfccb9c85b05f1aa9a2a6f23728d790723543408344ce89\", size = 16081, upload-time = \"2024-05-20T21:33:25.928Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/78/b6/6307fbef88d9b5ee7421e68d78a9f162e0da4900bc5f5793f6d3d0e34fb8/annotated_types-0.7.0-py3-none-any.whl\", hash = \"sha256:1f02e8b43a8fbbc3f3e0d4f0f4bfc8131bcb4eebe8849b8e5c773f3a1c582a53\", size = 13643, upload-time = \"2024-05-20T21:33:24.1Z\" },\n+]\n+\n+[[package]]\n+name = \"anyio\"\n+version = \"4.10.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"idna\" },\n+    { name = \"sniffio\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/f1/b4/636b3b65173d3ce9a38ef5f0522789614e590dab6a8d505340a4efe4c567/anyio-4.10.0.tar.gz\", hash = \"sha256:3f3fae35c96039744587aa5b8371e7e8e603c0702999535961dd336026973ba6\", size = 213252, upload-time = \"2025-08-04T08:54:26.451Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/6f/12/e5e0282d673bb9746bacfb6e2dba8719989d3660cdb2ea79aee9a9651afb/anyio-4.10.0-py3-none-any.whl\", hash = \"sha256:60e474ac86736bbfd6f210f7a61218939c318f43f9972497381f1c5e930ed3d1\", size = 107213, upload-time = \"2025-08-04T08:54:24.882Z\" },\n+]\n+\n+[[package]]\n+name = \"attrs\"\n+version = \"25.3.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/5a/b0/1367933a8532ee6ff8d63537de4f1177af4bff9f3e829baf7331f595bb24/attrs-25.3.0.tar.gz\", hash = \"sha256:75d7cefc7fb576747b2c81b4442d4d4a1ce0900973527c011d1030fd3bf4af1b\", size = 812032, upload-time = \"2025-03-13T11:10:22.779Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/77/06/bb80f5f86020c4551da315d78b3ab75e8228f89f0162f2c3a819e407941a/attrs-25.3.0-py3-none-any.whl\", hash = \"sha256:427318ce031701fea540783410126f03899a97ffc6f61596ad581ac2e40e3bc3\", size = 63815, upload-time = \"2025-03-13T11:10:21.14Z\" },\n+]\n+\n+[[package]]\n+name = \"certifi\"\n+version = \"2025.8.3\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/dc/67/960ebe6bf230a96cda2e0abcf73af550ec4f090005363542f0765df162e0/certifi-2025.8.3.tar.gz\", hash = \"sha256:e564105f78ded564e3ae7c923924435e1daa7463faeab5bb932bc53ffae63407\", size = 162386, upload-time = \"2025-08-03T03:07:47.08Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/e5/48/1549795ba7742c948d2ad169c1c8cdbae65bc450d6cd753d124b17c8cd32/certifi-2025.8.3-py3-none-any.whl\", hash = \"sha256:f6c12493cfb1b06ba2ff328595af9350c65d6644968e5d3a2ffd78699af217a5\", size = 161216, upload-time = \"2025-08-03T03:07:45.777Z\" },\n+]\n+\n+[[package]]\n+name = \"charset-normalizer\"\n+version = \"3.4.3\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/83/2d/5fd176ceb9b2fc619e63405525573493ca23441330fcdaee6bef9460e924/charset_normalizer-3.4.3.tar.gz\", hash = \"sha256:6fce4b8500244f6fcb71465d4a4930d132ba9ab8e71a7859e6a5d59851068d14\", size = 122371, upload-time = \"2025-08-09T07:57:28.46Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/65/ca/2135ac97709b400c7654b4b764daf5c5567c2da45a30cdd20f9eefe2d658/charset_normalizer-3.4.3-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:14c2a87c65b351109f6abfc424cab3927b3bdece6f706e4d12faaf3d52ee5efe\", size = 205326, upload-time = \"2025-08-09T07:56:24.721Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/71/11/98a04c3c97dd34e49c7d247083af03645ca3730809a5509443f3c37f7c99/charset_normalizer-3.4.3-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:41d1fc408ff5fdfb910200ec0e74abc40387bccb3252f3f27c0676731df2b2c8\", size = 146008, upload-time = \"2025-08-09T07:56:26.004Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/60/f5/4659a4cb3c4ec146bec80c32d8bb16033752574c20b1252ee842a95d1a1e/charset_normalizer-3.4.3-cp313-cp313-manylinux2014_ppc64le.manylinux_2_17_ppc64le.manylinux_2_28_ppc64le.whl\", hash = \"sha256:1bb60174149316da1c35fa5233681f7c0f9f514509b8e399ab70fea5f17e45c9\", size = 159196, upload-time = \"2025-08-09T07:56:27.25Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/86/9e/f552f7a00611f168b9a5865a1414179b2c6de8235a4fa40189f6f79a1753/charset_normalizer-3.4.3-cp313-cp313-manylinux2014_s390x.manylinux_2_17_s390x.manylinux_2_28_s390x.whl\", hash = \"sha256:30d006f98569de3459c2fc1f2acde170b7b2bd265dc1943e87e1a4efe1b67c31\", size = 156819, upload-time = \"2025-08-09T07:56:28.515Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/7e/95/42aa2156235cbc8fa61208aded06ef46111c4d3f0de233107b3f38631803/charset_normalizer-3.4.3-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:416175faf02e4b0810f1f38bcb54682878a4af94059a1cd63b8747244420801f\", size = 151350, upload-time = \"2025-08-09T07:56:29.716Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c2/a9/3865b02c56f300a6f94fc631ef54f0a8a29da74fb45a773dfd3dcd380af7/charset_normalizer-3.4.3-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:6aab0f181c486f973bc7262a97f5aca3ee7e1437011ef0c2ec04b5a11d16c927\", size = 148644, upload-time = \"2025-08-09T07:56:30.984Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/77/d9/cbcf1a2a5c7d7856f11e7ac2d782aec12bdfea60d104e60e0aa1c97849dc/charset_normalizer-3.4.3-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:fdabf8315679312cfa71302f9bd509ded4f2f263fb5b765cf1433b39106c3cc9\", size = 160468, upload-time = \"2025-08-09T07:56:32.252Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/f6/42/6f45efee8697b89fda4d50580f292b8f7f9306cb2971d4b53f8914e4d890/charset_normalizer-3.4.3-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:bd28b817ea8c70215401f657edef3a8aa83c29d447fb0b622c35403780ba11d5\", size = 158187, upload-time = \"2025-08-09T07:56:33.481Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/70/99/f1c3bdcfaa9c45b3ce96f70b14f070411366fa19549c1d4832c935d8e2c3/charset_normalizer-3.4.3-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:18343b2d246dc6761a249ba1fb13f9ee9a2bcd95decc767319506056ea4ad4dc\", size = 152699, upload-time = \"2025-08-09T07:56:34.739Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a3/ad/b0081f2f99a4b194bcbb1934ef3b12aa4d9702ced80a37026b7607c72e58/charset_normalizer-3.4.3-cp313-cp313-win32.whl\", hash = \"sha256:6fb70de56f1859a3f71261cbe41005f56a7842cc348d3aeb26237560bfa5e0ce\", size = 99580, upload-time = \"2025-08-09T07:56:35.981Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/9a/8f/ae790790c7b64f925e5c953b924aaa42a243fb778fed9e41f147b2a5715a/charset_normalizer-3.4.3-cp313-cp313-win_amd64.whl\", hash = \"sha256:cf1ebb7d78e1ad8ec2a8c4732c7be2e736f6e5123a4146c5b89c9d1f585f8cef\", size = 107366, upload-time = \"2025-08-09T07:56:37.339Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8e/91/b5a06ad970ddc7a0e513112d40113e834638f4ca1120eb727a249fb2715e/charset_normalizer-3.4.3-cp314-cp314-macosx_10_13_universal2.whl\", hash = \"sha256:3cd35b7e8aedeb9e34c41385fda4f73ba609e561faedfae0a9e75e44ac558a15\", size = 204342, upload-time = \"2025-08-09T07:56:38.687Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ce/ec/1edc30a377f0a02689342f214455c3f6c2fbedd896a1d2f856c002fc3062/charset_normalizer-3.4.3-cp314-cp314-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:b89bc04de1d83006373429975f8ef9e7932534b8cc9ca582e4db7d20d91816db\", size = 145995, upload-time = \"2025-08-09T07:56:40.048Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/17/e5/5e67ab85e6d22b04641acb5399c8684f4d37caf7558a53859f0283a650e9/charset_normalizer-3.4.3-cp314-cp314-manylinux2014_ppc64le.manylinux_2_17_ppc64le.manylinux_2_28_ppc64le.whl\", hash = \"sha256:2001a39612b241dae17b4687898843f254f8748b796a2e16f1051a17078d991d\", size = 158640, upload-time = \"2025-08-09T07:56:41.311Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/f1/e5/38421987f6c697ee3722981289d554957c4be652f963d71c5e46a262e135/charset_normalizer-3.4.3-cp314-cp314-manylinux2014_s390x.manylinux_2_17_s390x.manylinux_2_28_s390x.whl\", hash = \"sha256:8dcfc373f888e4fb39a7bc57e93e3b845e7f462dacc008d9749568b1c4ece096\", size = 156636, upload-time = \"2025-08-09T07:56:43.195Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a0/e4/5a075de8daa3ec0745a9a3b54467e0c2967daaaf2cec04c845f73493e9a1/charset_normalizer-3.4.3-cp314-cp314-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:18b97b8404387b96cdbd30ad660f6407799126d26a39ca65729162fd810a99aa\", size = 150939, upload-time = \"2025-08-09T07:56:44.819Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/02/f7/3611b32318b30974131db62b4043f335861d4d9b49adc6d57c1149cc49d4/charset_normalizer-3.4.3-cp314-cp314-musllinux_1_2_aarch64.whl\", hash = \"sha256:ccf600859c183d70eb47e05a44cd80a4ce77394d1ac0f79dbd2dd90a69a3a049\", size = 148580, upload-time = \"2025-08-09T07:56:46.684Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/7e/61/19b36f4bd67f2793ab6a99b979b4e4f3d8fc754cbdffb805335df4337126/charset_normalizer-3.4.3-cp314-cp314-musllinux_1_2_ppc64le.whl\", hash = \"sha256:53cd68b185d98dde4ad8990e56a58dea83a4162161b1ea9272e5c9182ce415e0\", size = 159870, upload-time = \"2025-08-09T07:56:47.941Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/06/57/84722eefdd338c04cf3030ada66889298eaedf3e7a30a624201e0cbe424a/charset_normalizer-3.4.3-cp314-cp314-musllinux_1_2_s390x.whl\", hash = \"sha256:30a96e1e1f865f78b030d65241c1ee850cdf422d869e9028e2fc1d5e4db73b92\", size = 157797, upload-time = \"2025-08-09T07:56:49.756Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/72/2a/aff5dd112b2f14bcc3462c312dce5445806bfc8ab3a7328555da95330e4b/charset_normalizer-3.4.3-cp314-cp314-musllinux_1_2_x86_64.whl\", hash = \"sha256:d716a916938e03231e86e43782ca7878fb602a125a91e7acb8b5112e2e96ac16\", size = 152224, upload-time = \"2025-08-09T07:56:51.369Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b7/8c/9839225320046ed279c6e839d51f028342eb77c91c89b8ef2549f951f3ec/charset_normalizer-3.4.3-cp314-cp314-win32.whl\", hash = \"sha256:c6dbd0ccdda3a2ba7c2ecd9d77b37f3b5831687d8dc1b6ca5f56a4880cc7b7ce\", size = 100086, upload-time = \"2025-08-09T07:56:52.722Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ee/7a/36fbcf646e41f710ce0a563c1c9a343c6edf9be80786edeb15b6f62e17db/charset_normalizer-3.4.3-cp314-cp314-win_amd64.whl\", hash = \"sha256:73dc19b562516fc9bcf6e5d6e596df0b4eb98d87e4f79f3ae71840e6ed21361c\", size = 107400, upload-time = \"2025-08-09T07:56:55.172Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8a/1f/f041989e93b001bc4e44bb1669ccdcf54d3f00e628229a85b08d330615c5/charset_normalizer-3.4.3-py3-none-any.whl\", hash = \"sha256:ce571ab16d890d23b5c278547ba694193a45011ff86a9162a71307ed9f86759a\", size = 53175, upload-time = \"2025-08-09T07:57:26.864Z\" },\n+]\n+\n+[[package]]\n+name = \"click\"\n+version = \"8.2.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"colorama\", marker = \"sys_platform == 'win32'\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/60/6c/8ca2efa64cf75a977a0d7fac081354553ebe483345c734fb6b6515d96bbc/click-8.2.1.tar.gz\", hash = \"sha256:27c491cc05d968d271d5a1db13e3b5a184636d9d930f148c50b038f0d0646202\", size = 286342, upload-time = \"2025-05-20T23:19:49.832Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/85/32/10bb5764d90a8eee674e9dc6f4db6a0ab47c8c4d0d83c27f7c39ac415a4d/click-8.2.1-py3-none-any.whl\", hash = \"sha256:61a3265b914e850b85317d0b3109c7f8cd35a670f963866005d6ef1d5175a12b\", size = 102215, upload-time = \"2025-05-20T23:19:47.796Z\" },\n+]\n+\n+[[package]]\n+name = \"colorama\"\n+version = \"0.4.6\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/d8/53/6f443c9a4a8358a93a6792e2acffb9d9d5cb0a5cfd8802644b7b1c9a02e4/colorama-0.4.6.tar.gz\", hash = \"sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44\", size = 27697, upload-time = \"2022-10-25T02:36:22.414Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/d1/d6/3965ed04c63042e047cb6a3e6ed1a63a35087b6a609aa3a15ed8ac56c221/colorama-0.4.6-py2.py3-none-any.whl\", hash = \"sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6\", size = 25335, upload-time = \"2022-10-25T02:36:20.889Z\" },\n+]\n+\n+[[package]]\n+name = \"distro\"\n+version = \"1.9.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/fc/f8/98eea607f65de6527f8a2e8885fc8015d3e6f5775df186e443e0964a11c3/distro-1.9.0.tar.gz\", hash = \"sha256:2fa77c6fd8940f116ee1d6b94a2f90b13b5ea8d019b98bc8bafdcabcdd9bdbed\", size = 60722, upload-time = \"2023-12-24T09:54:32.31Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/12/b3/231ffd4ab1fc9d679809f356cebee130ac7daa00d6d6f3206dd4fd137e9e/distro-1.9.0-py3-none-any.whl\", hash = \"sha256:7bffd925d65168f85027d8da9af6bddab658135b840670a223589bc0c8ef02b2\", size = 20277, upload-time = \"2023-12-24T09:54:30.421Z\" },\n+]\n+\n+[[package]]\n+name = \"fastapi\"\n+version = \"0.116.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"pydantic\" },\n+    { name = \"starlette\" },\n+    { name = \"typing-extensions\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/78/d7/6c8b3bfe33eeffa208183ec037fee0cce9f7f024089ab1c5d12ef04bd27c/fastapi-0.116.1.tar.gz\", hash = \"sha256:ed52cbf946abfd70c5a0dccb24673f0670deeb517a88b3544d03c2a6bf283143\", size = 296485, upload-time = \"2025-07-11T16:22:32.057Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/e5/47/d63c60f59a59467fda0f93f46335c9d18526d7071f025cb5b89d5353ea42/fastapi-0.116.1-py3-none-any.whl\", hash = \"sha256:c46ac7c312df840f0c9e220f7964bada936781bc4e2e6eb71f1c4d7553786565\", size = 95631, upload-time = \"2025-07-11T16:22:30.485Z\" },\n+]\n+\n+[[package]]\n+name = \"greenlet\"\n+version = \"3.2.4\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/03/b8/704d753a5a45507a7aab61f18db9509302ed3d0a27ac7e0359ec2905b1a6/greenlet-3.2.4.tar.gz\", hash = \"sha256:0dca0d95ff849f9a364385f36ab49f50065d76964944638be9691e1832e9f86d\", size = 188260, upload-time = \"2025-08-07T13:24:33.51Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/49/e8/58c7f85958bda41dafea50497cbd59738c5c43dbbea5ee83d651234398f4/greenlet-3.2.4-cp313-cp313-macosx_11_0_universal2.whl\", hash = \"sha256:1a921e542453fe531144e91e1feedf12e07351b1cf6c9e8a3325ea600a715a31\", size = 272814, upload-time = \"2025-08-07T13:15:50.011Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/62/dd/b9f59862e9e257a16e4e610480cfffd29e3fae018a68c2332090b53aac3d/greenlet-3.2.4-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:cd3c8e693bff0fff6ba55f140bf390fa92c994083f838fece0f63be121334945\", size = 641073, upload-time = \"2025-08-07T13:42:57.23Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/f7/0b/bc13f787394920b23073ca3b6c4a7a21396301ed75a655bcb47196b50e6e/greenlet-3.2.4-cp313-cp313-manylinux2014_ppc64le.manylinux_2_17_ppc64le.whl\", hash = \"sha256:710638eb93b1fa52823aa91bf75326f9ecdfd5e0466f00789246a5280f4ba0fc\", size = 655191, upload-time = \"2025-08-07T13:45:29.752Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/f2/d6/6adde57d1345a8d0f14d31e4ab9c23cfe8e2cd39c3baf7674b4b0338d266/greenlet-3.2.4-cp313-cp313-manylinux2014_s390x.manylinux_2_17_s390x.whl\", hash = \"sha256:c5111ccdc9c88f423426df3fd1811bfc40ed66264d35aa373420a34377efc98a\", size = 649516, upload-time = \"2025-08-07T13:53:16.314Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/7f/3b/3a3328a788d4a473889a2d403199932be55b1b0060f4ddd96ee7cdfcad10/greenlet-3.2.4-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:d76383238584e9711e20ebe14db6c88ddcedc1829a9ad31a584389463b5aa504\", size = 652169, upload-time = \"2025-08-07T13:18:32.861Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ee/43/3cecdc0349359e1a527cbf2e3e28e5f8f06d3343aaf82ca13437a9aa290f/greenlet-3.2.4-cp313-cp313-manylinux_2_24_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:23768528f2911bcd7e475210822ffb5254ed10d71f4028387e5a99b4c6699671\", size = 610497, upload-time = \"2025-08-07T13:18:31.636Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b8/19/06b6cf5d604e2c382a6f31cafafd6f33d5dea706f4db7bdab184bad2b21d/greenlet-3.2.4-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:00fadb3fedccc447f517ee0d3fd8fe49eae949e1cd0f6a611818f4f6fb7dc83b\", size = 1121662, upload-time = \"2025-08-07T13:42:41.117Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a2/15/0d5e4e1a66fab130d98168fe984c509249c833c1a3c16806b90f253ce7b9/greenlet-3.2.4-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:d25c5091190f2dc0eaa3f950252122edbbadbb682aa7b1ef2f8af0f8c0afefae\", size = 1149210, upload-time = \"2025-08-07T13:18:24.072Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/0b/55/2321e43595e6801e105fcfdee02b34c0f996eb71e6ddffca6b10b7e1d771/greenlet-3.2.4-cp313-cp313-win_amd64.whl\", hash = \"sha256:554b03b6e73aaabec3745364d6239e9e012d64c68ccd0b8430c64ccc14939a8b\", size = 299685, upload-time = \"2025-08-07T13:24:38.824Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/22/5c/85273fd7cc388285632b0498dbbab97596e04b154933dfe0f3e68156c68c/greenlet-3.2.4-cp314-cp314-macosx_11_0_universal2.whl\", hash = \"sha256:49a30d5fda2507ae77be16479bdb62a660fa51b1eb4928b524975b3bde77b3c0\", size = 273586, upload-time = \"2025-08-07T13:16:08.004Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d1/75/10aeeaa3da9332c2e761e4c50d4c3556c21113ee3f0afa2cf5769946f7a3/greenlet-3.2.4-cp314-cp314-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:299fd615cd8fc86267b47597123e3f43ad79c9d8a22bebdce535e53550763e2f\", size = 686346, upload-time = \"2025-08-07T13:42:59.944Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c0/aa/687d6b12ffb505a4447567d1f3abea23bd20e73a5bed63871178e0831b7a/greenlet-3.2.4-cp314-cp314-manylinux2014_ppc64le.manylinux_2_17_ppc64le.whl\", hash = \"sha256:c17b6b34111ea72fc5a4e4beec9711d2226285f0386ea83477cbb97c30a3f3a5\", size = 699218, upload-time = \"2025-08-07T13:45:30.969Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/dc/8b/29aae55436521f1d6f8ff4e12fb676f3400de7fcf27fccd1d4d17fd8fecd/greenlet-3.2.4-cp314-cp314-manylinux2014_s390x.manylinux_2_17_s390x.whl\", hash = \"sha256:b4a1870c51720687af7fa3e7cda6d08d801dae660f75a76f3845b642b4da6ee1\", size = 694659, upload-time = \"2025-08-07T13:53:17.759Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/92/2e/ea25914b1ebfde93b6fc4ff46d6864564fba59024e928bdc7de475affc25/greenlet-3.2.4-cp314-cp314-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:061dc4cf2c34852b052a8620d40f36324554bc192be474b9e9770e8c042fd735\", size = 695355, upload-time = \"2025-08-07T13:18:34.517Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/72/60/fc56c62046ec17f6b0d3060564562c64c862948c9d4bc8aa807cf5bd74f4/greenlet-3.2.4-cp314-cp314-manylinux_2_24_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:44358b9bf66c8576a9f57a590d5f5d6e72fa4228b763d0e43fee6d3b06d3a337\", size = 657512, upload-time = \"2025-08-07T13:18:33.969Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e3/a5/6ddab2b4c112be95601c13428db1d8b6608a8b6039816f2ba09c346c08fc/greenlet-3.2.4-cp314-cp314-win_amd64.whl\", hash = \"sha256:e37ab26028f12dbb0ff65f29a8d3d44a765c61e729647bf2ddfbbed621726f01\", size = 303425, upload-time = \"2025-08-07T13:32:27.59Z\" },\n+]\n+\n+[[package]]\n+name = \"groq\"\n+version = \"0.31.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"anyio\" },\n+    { name = \"distro\" },\n+    { name = \"httpx\" },\n+    { name = \"pydantic\" },\n+    { name = \"sniffio\" },\n+    { name = \"typing-extensions\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/66/a2/77fd1460e7d55859219223719aa44ae8902a3a1ad333cd5faf330eb0b894/groq-0.31.0.tar.gz\", hash = \"sha256:182252e9bf0d696df607c137cbafa851d2c84aaf94bcfe9165c0bc231043490c\", size = 136237, upload-time = \"2025-08-05T23:14:01.183Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/ab/f8/14672d69a91495f43462c5490067eeafc30346e81bda1a62848e897f9bc3/groq-0.31.0-py3-none-any.whl\", hash = \"sha256:5e3c7ec9728b7cccf913da982a9b5ebb46dc18a070b35e12a3d6a1e12d6b0f7f\", size = 131365, upload-time = \"2025-08-05T23:13:59.768Z\" },\n+]\n+\n+[[package]]\n+name = \"h11\"\n+version = \"0.16.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/01/ee/02a2c011bdab74c6fb3c75474d40b3052059d95df7e73351460c8588d963/h11-0.16.0.tar.gz\", hash = \"sha256:4e35b956cf45792e4caa5885e69fba00bdbc6ffafbfa020300e549b208ee5ff1\", size = 101250, upload-time = \"2025-04-24T03:35:25.427Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/04/4b/29cac41a4d98d144bf5f6d33995617b185d14b22401f75ca86f384e87ff1/h11-0.16.0-py3-none-any.whl\", hash = \"sha256:63cf8bbe7522de3bf65932fda1d9c2772064ffb3dae62d55932da54b31cb6c86\", size = 37515, upload-time = \"2025-04-24T03:35:24.344Z\" },\n+]\n+\n+[[package]]\n+name = \"httpcore\"\n+version = \"1.0.9\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"certifi\" },\n+    { name = \"h11\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/06/94/82699a10bca87a5556c9c59b5963f2d039dbd239f25bc2a63907a05a14cb/httpcore-1.0.9.tar.gz\", hash = \"sha256:6e34463af53fd2ab5d807f399a9b45ea31c3dfa2276f15a2c3f00afff6e176e8\", size = 85484, upload-time = \"2025-04-24T22:06:22.219Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/7e/f5/f66802a942d491edb555dd61e3a9961140fd64c90bce1eafd741609d334d/httpcore-1.0.9-py3-none-any.whl\", hash = \"sha256:2d400746a40668fc9dec9810239072b40b4484b640a8c38fd654a024c7a1bf55\", size = 78784, upload-time = \"2025-04-24T22:06:20.566Z\" },\n+]\n+\n+[[package]]\n+name = \"httptools\"\n+version = \"0.6.4\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/a7/9a/ce5e1f7e131522e6d3426e8e7a490b3a01f39a6696602e1c4f33f9e94277/httptools-0.6.4.tar.gz\", hash = \"sha256:4e93eee4add6493b59a5c514da98c939b244fce4a0d8879cd3f466562f4b7d5c\", size = 240639, upload-time = \"2024-10-16T19:45:08.902Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/94/a3/9fe9ad23fd35f7de6b91eeb60848986058bd8b5a5c1e256f5860a160cc3e/httptools-0.6.4-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:ade273d7e767d5fae13fa637f4d53b6e961fb7fd93c7797562663f0171c26660\", size = 197214, upload-time = \"2024-10-16T19:44:38.738Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ea/d9/82d5e68bab783b632023f2fa31db20bebb4e89dfc4d2293945fd68484ee4/httptools-0.6.4-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:856f4bc0478ae143bad54a4242fccb1f3f86a6e1be5548fecfd4102061b3a083\", size = 102431, upload-time = \"2024-10-16T19:44:39.818Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/96/c1/cb499655cbdbfb57b577734fde02f6fa0bbc3fe9fb4d87b742b512908dff/httptools-0.6.4-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:322d20ea9cdd1fa98bd6a74b77e2ec5b818abdc3d36695ab402a0de8ef2865a3\", size = 473121, upload-time = \"2024-10-16T19:44:41.189Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/af/71/ee32fd358f8a3bb199b03261f10921716990808a675d8160b5383487a317/httptools-0.6.4-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4d87b29bd4486c0093fc64dea80231f7c7f7eb4dc70ae394d70a495ab8436071\", size = 473805, upload-time = \"2024-10-16T19:44:42.384Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8a/0a/0d4df132bfca1507114198b766f1737d57580c9ad1cf93c1ff673e3387be/httptools-0.6.4-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:342dd6946aa6bda4b8f18c734576106b8a31f2fe31492881a9a160ec84ff4bd5\", size = 448858, upload-time = \"2024-10-16T19:44:43.959Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1e/6a/787004fdef2cabea27bad1073bf6a33f2437b4dbd3b6fb4a9d71172b1c7c/httptools-0.6.4-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:4b36913ba52008249223042dca46e69967985fb4051951f94357ea681e1f5dc0\", size = 452042, upload-time = \"2024-10-16T19:44:45.071Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/4d/dc/7decab5c404d1d2cdc1bb330b1bf70e83d6af0396fd4fc76fc60c0d522bf/httptools-0.6.4-cp313-cp313-win_amd64.whl\", hash = \"sha256:28908df1b9bb8187393d5b5db91435ccc9c8e891657f9cbb42a2541b44c82fc8\", size = 87682, upload-time = \"2024-10-16T19:44:46.46Z\" },\n+]\n+\n+[[package]]\n+name = \"httpx\"\n+version = \"0.28.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"anyio\" },\n+    { name = \"certifi\" },\n+    { name = \"httpcore\" },\n+    { name = \"idna\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/b1/df/48c586a5fe32a0f01324ee087459e112ebb7224f646c0b5023f5e79e9956/httpx-0.28.1.tar.gz\", hash = \"sha256:75e98c5f16b0f35b567856f597f06ff2270a374470a5c2392242528e3e3e42fc\", size = 141406, upload-time = \"2024-12-06T15:37:23.222Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/2a/39/e50c7c3a983047577ee07d2a9e53faf5a69493943ec3f6a384bdc792deb2/httpx-0.28.1-py3-none-any.whl\", hash = \"sha256:d909fcccc110f8c7faf814ca82a9a4d816bc5a6dbfea25d6591d6985b8ba59ad\", size = 73517, upload-time = \"2024-12-06T15:37:21.509Z\" },\n+]\n+\n+[[package]]\n+name = \"httpx-sse\"\n+version = \"0.4.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/6e/fa/66bd985dd0b7c109a3bcb89272ee0bfb7e2b4d06309ad7b38ff866734b2a/httpx_sse-0.4.1.tar.gz\", hash = \"sha256:8f44d34414bc7b21bf3602713005c5df4917884f76072479b21f68befa4ea26e\", size = 12998, upload-time = \"2025-06-24T13:21:05.71Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/25/0a/6269e3473b09aed2dab8aa1a600c70f31f00ae1349bee30658f7e358a159/httpx_sse-0.4.1-py3-none-any.whl\", hash = \"sha256:cba42174344c3a5b06f255ce65b350880f962d99ead85e776f23c6618a377a37\", size = 8054, upload-time = \"2025-06-24T13:21:04.772Z\" },\n+]\n+\n+[[package]]\n+name = \"idna\"\n+version = \"3.10\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/f1/70/7703c29685631f5a7590aa73f1f1d3fa9a380e654b86af429e0934a32f7d/idna-3.10.tar.gz\", hash = \"sha256:12f65c9b470abda6dc35cf8e63cc574b1c52b11df2c86030af0ac09b01b13ea9\", size = 190490, upload-time = \"2024-09-15T18:07:39.745Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/76/c6/c88e154df9c4e1a2a66ccf0005a88dfb2650c1dffb6f5ce603dfbd452ce3/idna-3.10-py3-none-any.whl\", hash = \"sha256:946d195a0d259cbba61165e88e65941f16e9b36ea6ddb97f00452bae8b1287d3\", size = 70442, upload-time = \"2024-09-15T18:07:37.964Z\" },\n+]\n+\n+[[package]]\n+name = \"jiter\"\n+version = \"0.10.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/ee/9d/ae7ddb4b8ab3fb1b51faf4deb36cb48a4fbbd7cb36bad6a5fca4741306f7/jiter-0.10.0.tar.gz\", hash = \"sha256:07a7142c38aacc85194391108dc91b5b57093c978a9932bd86a36862759d9500\", size = 162759, upload-time = \"2025-05-18T19:04:59.73Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/2e/b0/279597e7a270e8d22623fea6c5d4eeac328e7d95c236ed51a2b884c54f70/jiter-0.10.0-cp313-cp313-macosx_10_12_x86_64.whl\", hash = \"sha256:e0588107ec8e11b6f5ef0e0d656fb2803ac6cf94a96b2b9fc675c0e3ab5e8644\", size = 311617, upload-time = \"2025-05-18T19:04:02.078Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/91/e3/0916334936f356d605f54cc164af4060e3e7094364add445a3bc79335d46/jiter-0.10.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:cafc4628b616dc32530c20ee53d71589816cf385dd9449633e910d596b1f5c8a\", size = 318947, upload-time = \"2025-05-18T19:04:03.347Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/6a/8e/fd94e8c02d0e94539b7d669a7ebbd2776e51f329bb2c84d4385e8063a2ad/jiter-0.10.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:520ef6d981172693786a49ff5b09eda72a42e539f14788124a07530f785c3ad6\", size = 344618, upload-time = \"2025-05-18T19:04:04.709Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/6f/b0/f9f0a2ec42c6e9c2e61c327824687f1e2415b767e1089c1d9135f43816bd/jiter-0.10.0-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:554dedfd05937f8fc45d17ebdf298fe7e0c77458232bcb73d9fbbf4c6455f5b3\", size = 368829, upload-time = \"2025-05-18T19:04:06.912Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e8/57/5bbcd5331910595ad53b9fd0c610392ac68692176f05ae48d6ce5c852967/jiter-0.10.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:5bc299da7789deacf95f64052d97f75c16d4fc8c4c214a22bf8d859a4288a1c2\", size = 491034, upload-time = \"2025-05-18T19:04:08.222Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/9b/be/c393df00e6e6e9e623a73551774449f2f23b6ec6a502a3297aeeece2c65a/jiter-0.10.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5161e201172de298a8a1baad95eb85db4fb90e902353b1f6a41d64ea64644e25\", size = 388529, upload-time = \"2025-05-18T19:04:09.566Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/42/3e/df2235c54d365434c7f150b986a6e35f41ebdc2f95acea3036d99613025d/jiter-0.10.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2e2227db6ba93cb3e2bf67c87e594adde0609f146344e8207e8730364db27041\", size = 350671, upload-time = \"2025-05-18T19:04:10.98Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c6/77/71b0b24cbcc28f55ab4dbfe029f9a5b73aeadaba677843fc6dc9ed2b1d0a/jiter-0.10.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:15acb267ea5e2c64515574b06a8bf393fbfee6a50eb1673614aa45f4613c0cca\", size = 390864, upload-time = \"2025-05-18T19:04:12.722Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/6a/d3/ef774b6969b9b6178e1d1e7a89a3bd37d241f3d3ec5f8deb37bbd203714a/jiter-0.10.0-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:901b92f2e2947dc6dfcb52fd624453862e16665ea909a08398dde19c0731b7f4\", size = 522989, upload-time = \"2025-05-18T19:04:14.261Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/0c/41/9becdb1d8dd5d854142f45a9d71949ed7e87a8e312b0bede2de849388cb9/jiter-0.10.0-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:d0cb9a125d5a3ec971a094a845eadde2db0de85b33c9f13eb94a0c63d463879e\", size = 513495, upload-time = \"2025-05-18T19:04:15.603Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/9c/36/3468e5a18238bdedae7c4d19461265b5e9b8e288d3f86cd89d00cbb48686/jiter-0.10.0-cp313-cp313-win32.whl\", hash = \"sha256:48a403277ad1ee208fb930bdf91745e4d2d6e47253eedc96e2559d1e6527006d\", size = 211289, upload-time = \"2025-05-18T19:04:17.541Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/7e/07/1c96b623128bcb913706e294adb5f768fb7baf8db5e1338ce7b4ee8c78ef/jiter-0.10.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:75f9eb72ecb640619c29bf714e78c9c46c9c4eaafd644bf78577ede459f330d4\", size = 205074, upload-time = \"2025-05-18T19:04:19.21Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/54/46/caa2c1342655f57d8f0f2519774c6d67132205909c65e9aa8255e1d7b4f4/jiter-0.10.0-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:28ed2a4c05a1f32ef0e1d24c2611330219fed727dae01789f4a335617634b1ca\", size = 318225, upload-time = \"2025-05-18T19:04:20.583Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/43/84/c7d44c75767e18946219ba2d703a5a32ab37b0bc21886a97bc6062e4da42/jiter-0.10.0-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:14a4c418b1ec86a195f1ca69da8b23e8926c752b685af665ce30777233dfe070\", size = 350235, upload-time = \"2025-05-18T19:04:22.363Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/01/16/f5a0135ccd968b480daad0e6ab34b0c7c5ba3bc447e5088152696140dcb3/jiter-0.10.0-cp313-cp313t-win_amd64.whl\", hash = \"sha256:d7bfed2fe1fe0e4dda6ef682cee888ba444b21e7a6553e03252e4feb6cf0adca\", size = 207278, upload-time = \"2025-05-18T19:04:23.627Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1c/9b/1d646da42c3de6c2188fdaa15bce8ecb22b635904fc68be025e21249ba44/jiter-0.10.0-cp314-cp314-macosx_10_12_x86_64.whl\", hash = \"sha256:5e9251a5e83fab8d87799d3e1a46cb4b7f2919b895c6f4483629ed2446f66522\", size = 310866, upload-time = \"2025-05-18T19:04:24.891Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ad/0e/26538b158e8a7c7987e94e7aeb2999e2e82b1f9d2e1f6e9874ddf71ebda0/jiter-0.10.0-cp314-cp314-macosx_11_0_arm64.whl\", hash = \"sha256:023aa0204126fe5b87ccbcd75c8a0d0261b9abdbbf46d55e7ae9f8e22424eeb8\", size = 318772, upload-time = \"2025-05-18T19:04:26.161Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/7b/fb/d302893151caa1c2636d6574d213e4b34e31fd077af6050a9c5cbb42f6fb/jiter-0.10.0-cp314-cp314-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3c189c4f1779c05f75fc17c0c1267594ed918996a231593a21a5ca5438445216\", size = 344534, upload-time = \"2025-05-18T19:04:27.495Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/01/d8/5780b64a149d74e347c5128d82176eb1e3241b1391ac07935693466d6219/jiter-0.10.0-cp314-cp314-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:15720084d90d1098ca0229352607cd68256c76991f6b374af96f36920eae13c4\", size = 369087, upload-time = \"2025-05-18T19:04:28.896Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e8/5b/f235a1437445160e777544f3ade57544daf96ba7e96c1a5b24a6f7ac7004/jiter-0.10.0-cp314-cp314-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e4f2fb68e5f1cfee30e2b2a09549a00683e0fde4c6a2ab88c94072fc33cb7426\", size = 490694, upload-time = \"2025-05-18T19:04:30.183Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/85/a9/9c3d4617caa2ff89cf61b41e83820c27ebb3f7b5fae8a72901e8cd6ff9be/jiter-0.10.0-cp314-cp314-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:ce541693355fc6da424c08b7edf39a2895f58d6ea17d92cc2b168d20907dee12\", size = 388992, upload-time = \"2025-05-18T19:04:32.028Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/68/b1/344fd14049ba5c94526540af7eb661871f9c54d5f5601ff41a959b9a0bbd/jiter-0.10.0-cp314-cp314-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:31c50c40272e189d50006ad5c73883caabb73d4e9748a688b216e85a9a9ca3b9\", size = 351723, upload-time = \"2025-05-18T19:04:33.467Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/41/89/4c0e345041186f82a31aee7b9d4219a910df672b9fef26f129f0cda07a29/jiter-0.10.0-cp314-cp314-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:fa3402a2ff9815960e0372a47b75c76979d74402448509ccd49a275fa983ef8a\", size = 392215, upload-time = \"2025-05-18T19:04:34.827Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/55/58/ee607863e18d3f895feb802154a2177d7e823a7103f000df182e0f718b38/jiter-0.10.0-cp314-cp314-musllinux_1_1_aarch64.whl\", hash = \"sha256:1956f934dca32d7bb647ea21d06d93ca40868b505c228556d3373cbd255ce853\", size = 522762, upload-time = \"2025-05-18T19:04:36.19Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/15/d0/9123fb41825490d16929e73c212de9a42913d68324a8ce3c8476cae7ac9d/jiter-0.10.0-cp314-cp314-musllinux_1_1_x86_64.whl\", hash = \"sha256:fcedb049bdfc555e261d6f65a6abe1d5ad68825b7202ccb9692636c70fcced86\", size = 513427, upload-time = \"2025-05-18T19:04:37.544Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d8/b3/2bd02071c5a2430d0b70403a34411fc519c2f227da7b03da9ba6a956f931/jiter-0.10.0-cp314-cp314-win32.whl\", hash = \"sha256:ac509f7eccca54b2a29daeb516fb95b6f0bd0d0d8084efaf8ed5dfc7b9f0b357\", size = 210127, upload-time = \"2025-05-18T19:04:38.837Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/03/0c/5fe86614ea050c3ecd728ab4035534387cd41e7c1855ef6c031f1ca93e3f/jiter-0.10.0-cp314-cp314t-macosx_11_0_arm64.whl\", hash = \"sha256:5ed975b83a2b8639356151cef5c0d597c68376fc4922b45d0eb384ac058cfa00\", size = 318527, upload-time = \"2025-05-18T19:04:40.612Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b3/4a/4175a563579e884192ba6e81725fc0448b042024419be8d83aa8a80a3f44/jiter-0.10.0-cp314-cp314t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3aa96f2abba33dc77f79b4cf791840230375f9534e5fac927ccceb58c5e604a5\", size = 354213, upload-time = \"2025-05-18T19:04:41.894Z\" },\n+]\n+\n+[[package]]\n+name = \"jsonpatch\"\n+version = \"1.33\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"jsonpointer\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/42/78/18813351fe5d63acad16aec57f94ec2b70a09e53ca98145589e185423873/jsonpatch-1.33.tar.gz\", hash = \"sha256:9fcd4009c41e6d12348b4a0ff2563ba56a2923a7dfee731d004e212e1ee5030c\", size = 21699, upload-time = \"2023-06-26T12:07:29.144Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/73/07/02e16ed01e04a374e644b575638ec7987ae846d25ad97bcc9945a3ee4b0e/jsonpatch-1.33-py2.py3-none-any.whl\", hash = \"sha256:0ae28c0cd062bbd8b8ecc26d7d164fbbea9652a1a3693f3b956c1eae5145dade\", size = 12898, upload-time = \"2023-06-16T21:01:28.466Z\" },\n+]\n+\n+[[package]]\n+name = \"jsonpointer\"\n+version = \"3.0.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/6a/0a/eebeb1fa92507ea94016a2a790b93c2ae41a7e18778f85471dc54475ed25/jsonpointer-3.0.0.tar.gz\", hash = \"sha256:2b2d729f2091522d61c3b31f82e11870f60b68f43fbc705cb76bf4b832af59ef\", size = 9114, upload-time = \"2024-06-10T19:24:42.462Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/71/92/5e77f98553e9e75130c78900d000368476aed74276eb8ae8796f65f00918/jsonpointer-3.0.0-py2.py3-none-any.whl\", hash = \"sha256:13e088adc14fca8b6aa8177c044e12701e6ad4b28ff10e65f2267a90109c9942\", size = 7595, upload-time = \"2024-06-10T19:24:40.698Z\" },\n+]\n+\n+[[package]]\n+name = \"jsonschema\"\n+version = \"4.25.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"attrs\" },\n+    { name = \"jsonschema-specifications\" },\n+    { name = \"referencing\" },\n+    { name = \"rpds-py\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/74/69/f7185de793a29082a9f3c7728268ffb31cb5095131a9c139a74078e27336/jsonschema-4.25.1.tar.gz\", hash = \"sha256:e4a9655ce0da0c0b67a085847e00a3a51449e1157f4f75e9fb5aa545e122eb85\", size = 357342, upload-time = \"2025-08-18T17:03:50.038Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/bf/9c/8c95d856233c1f82500c2450b8c68576b4cf1c871db3afac5c34ff84e6fd/jsonschema-4.25.1-py3-none-any.whl\", hash = \"sha256:3fba0169e345c7175110351d456342c364814cfcf3b964ba4587f22915230a63\", size = 90040, upload-time = \"2025-08-18T17:03:48.373Z\" },\n+]\n+\n+[[package]]\n+name = \"jsonschema-specifications\"\n+version = \"2025.4.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"referencing\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/bf/ce/46fbd9c8119cfc3581ee5643ea49464d168028cfb5caff5fc0596d0cf914/jsonschema_specifications-2025.4.1.tar.gz\", hash = \"sha256:630159c9f4dbea161a6a2205c3011cc4f18ff381b189fff48bb39b9bf26ae608\", size = 15513, upload-time = \"2025-04-23T12:34:07.418Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/01/0e/b27cdbaccf30b890c40ed1da9fd4a3593a5cf94dae54fb34f8a4b74fcd3f/jsonschema_specifications-2025.4.1-py3-none-any.whl\", hash = \"sha256:4653bffbd6584f7de83a67e0d620ef16900b390ddc7939d56684d6c81e33f1af\", size = 18437, upload-time = \"2025-04-23T12:34:05.422Z\" },\n+]\n+\n+[[package]]\n+name = \"langchain\"\n+version = \"0.3.27\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"langchain-core\" },\n+    { name = \"langchain-text-splitters\" },\n+    { name = \"langsmith\" },\n+    { name = \"pydantic\" },\n+    { name = \"pyyaml\" },\n+    { name = \"requests\" },\n+    { name = \"sqlalchemy\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/83/f6/f4f7f3a56626fe07e2bb330feb61254dbdf06c506e6b59a536a337da51cf/langchain-0.3.27.tar.gz\", hash = \"sha256:aa6f1e6274ff055d0fd36254176770f356ed0a8994297d1df47df341953cec62\", size = 10233809, upload-time = \"2025-07-24T14:42:32.959Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/f6/d5/4861816a95b2f6993f1360cfb605aacb015506ee2090433a71de9cca8477/langchain-0.3.27-py3-none-any.whl\", hash = \"sha256:7b20c4f338826acb148d885b20a73a16e410ede9ee4f19bb02011852d5f98798\", size = 1018194, upload-time = \"2025-07-24T14:42:30.23Z\" },\n+]\n+\n+[[package]]\n+name = \"langchain-core\"\n+version = \"0.3.75\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"jsonpatch\" },\n+    { name = \"langsmith\" },\n+    { name = \"packaging\" },\n+    { name = \"pydantic\" },\n+    { name = \"pyyaml\" },\n+    { name = \"tenacity\" },\n+    { name = \"typing-extensions\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/06/63/270b71a23e849984505ddc7c5c9fd3f4bd9cb14b1a484ee44c4e51c33cc2/langchain_core-0.3.75.tar.gz\", hash = \"sha256:ab0eb95a06ed6043f76162e6086b45037690cb70b7f090bd83b5ebb8a05b70ed\", size = 570876, upload-time = \"2025-08-26T15:24:12.246Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/fb/42/0d0221cce6f168f644d7d96cb6c87c4e42fc55d2941da7a36e970e3ab8ab/langchain_core-0.3.75-py3-none-any.whl\", hash = \"sha256:03ca1fadf955ee3c7d5806a841f4b3a37b816acea5e61a7e6ba1298c05eea7f5\", size = 443986, upload-time = \"2025-08-26T15:24:10.883Z\" },\n+]\n+\n+[[package]]\n+name = \"langchain-groq\"\n+version = \"0.3.7\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"groq\" },\n+    { name = \"langchain-core\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/54/9d/1bbe0b8d8368ac1df2eabd14be93e052cddac969573b910db4457237bce2/langchain_groq-0.3.7.tar.gz\", hash = \"sha256:4d799aa565f31e51c632f0f20c588f21c5a0e6c6dd2303efaef43351f9b41bd4\", size = 25004, upload-time = \"2025-08-05T19:20:45.436Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/9d/31/5f32d15105d0160c3753113d5cca5787236c6d2717d25126597d8adc39dd/langchain_groq-0.3.7-py3-none-any.whl\", hash = \"sha256:2e13870534c032fe1facde3a6ab1fb59af6f1e7a2763125ad549d8e403fc9d00\", size = 16418, upload-time = \"2025-08-05T19:20:44.4Z\" },\n+]\n+\n+[[package]]\n+name = \"langchain-mcp-adapters\"\n+version = \"0.1.9\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"langchain-core\" },\n+    { name = \"mcp\" },\n+    { name = \"typing-extensions\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/b9/74/e36003a43136f9095a5f968c730fbfe894f94284ebe6d2b50bb17d41b8b5/langchain_mcp_adapters-0.1.9.tar.gz\", hash = \"sha256:0018cf7b5f7bc4c044e05ec20fcb9ebe345311c8d1060c61d411188001ab3aab\", size = 22101, upload-time = \"2025-07-09T15:56:14.455Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/a4/eb/9e98822d3db22beff44449a8f61fca208d4f59d592a7ce67ce4c400b8f8f/langchain_mcp_adapters-0.1.9-py3-none-any.whl\", hash = \"sha256:fd131009c60c9e5a864f96576bbe757fc1809abd604891cb2e5d6e8aebd6975c\", size = 15300, upload-time = \"2025-07-09T15:56:13.316Z\" },\n+]\n+\n+[[package]]\n+name = \"langchain-openai\"\n+version = \"0.3.32\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"langchain-core\" },\n+    { name = \"openai\" },\n+    { name = \"tiktoken\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/7e/19/167d9ad1b6bb75406c4acceda01ef0dc1101c7f629f74441fe8a787fb190/langchain_openai-0.3.32.tar.gz\", hash = \"sha256:782ad669bd1bdb964456d8882c5178717adcfceecb482cc20005f770e43d346d\", size = 782982, upload-time = \"2025-08-26T14:25:27.917Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/e6/3d/e22ee65fff79afe7bdfbd67844243eb279b440c882dad9e4262dcc87131f/langchain_openai-0.3.32-py3-none-any.whl\", hash = \"sha256:3354f76822f7cc76d8069831fe2a77f9bc7ff3b4f13af788bd94e4c6e853b400\", size = 74531, upload-time = \"2025-08-26T14:25:26.542Z\" },\n+]\n+\n+[[package]]\n+name = \"langchain-text-splitters\"\n+version = \"0.3.11\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"langchain-core\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/11/43/dcda8fd25f0b19cb2835f2f6bb67f26ad58634f04ac2d8eae00526b0fa55/langchain_text_splitters-0.3.11.tar.gz\", hash = \"sha256:7a50a04ada9a133bbabb80731df7f6ddac51bc9f1b9cab7fa09304d71d38a6cc\", size = 46458, upload-time = \"2025-08-31T23:02:58.316Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/58/0d/41a51b40d24ff0384ec4f7ab8dd3dcea8353c05c973836b5e289f1465d4f/langchain_text_splitters-0.3.11-py3-none-any.whl\", hash = \"sha256:cf079131166a487f1372c8ab5d0bfaa6c0a4291733d9c43a34a16ac9bcd6a393\", size = 33845, upload-time = \"2025-08-31T23:02:57.195Z\" },\n+]\n+\n+[[package]]\n+name = \"langgraph\"\n+version = \"0.6.6\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"langchain-core\" },\n+    { name = \"langgraph-checkpoint\" },\n+    { name = \"langgraph-prebuilt\" },\n+    { name = \"langgraph-sdk\" },\n+    { name = \"pydantic\" },\n+    { name = \"xxhash\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/02/2b/59f0b2985467ec84b006dd41ec31c0aae43a7f16722d5514292500b871c9/langgraph-0.6.6.tar.gz\", hash = \"sha256:e7d3cefacf356f8c01721b166b67b3bf581659d5361a3530f59ecd9b8448eca7\", size = 465452, upload-time = \"2025-08-20T04:02:13.915Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/e4/ef/81fce0a80925cd89987aa641ff01573e3556a24f2d205112862a69df7fd3/langgraph-0.6.6-py3-none-any.whl\", hash = \"sha256:a2283a5236abba6c8307c1a485c04e8a0f0ffa2be770878782a7bf2deb8d7954\", size = 153274, upload-time = \"2025-08-20T04:02:12.251Z\" },\n+]\n+\n+[[package]]\n+name = \"langgraph-checkpoint\"\n+version = \"2.1.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"langchain-core\" },\n+    { name = \"ormsgpack\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/73/3e/d00eb2b56c3846a0cabd2e5aa71c17a95f882d4f799a6ffe96a19b55eba9/langgraph_checkpoint-2.1.1.tar.gz\", hash = \"sha256:72038c0f9e22260cb9bff1f3ebe5eb06d940b7ee5c1e4765019269d4f21cf92d\", size = 136256, upload-time = \"2025-07-17T13:07:52.411Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/4c/dd/64686797b0927fb18b290044be12ae9d4df01670dce6bb2498d5ab65cb24/langgraph_checkpoint-2.1.1-py3-none-any.whl\", hash = \"sha256:5a779134fd28134a9a83d078be4450bbf0e0c79fdf5e992549658899e6fc5ea7\", size = 43925, upload-time = \"2025-07-17T13:07:51.023Z\" },\n+]\n+\n+[[package]]\n+name = \"langgraph-prebuilt\"\n+version = \"0.6.4\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"langchain-core\" },\n+    { name = \"langgraph-checkpoint\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/d6/21/9b198d11732101ee8cdf30af98d0b4f11254c768de15173e57f5260fd14b/langgraph_prebuilt-0.6.4.tar.gz\", hash = \"sha256:e9e53b906ee5df46541d1dc5303239e815d3ec551e52bb03dd6463acc79ec28f\", size = 125695, upload-time = \"2025-08-07T18:17:57.333Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/0a/7f/973b0d9729d9693d6e5b4bc5f3ae41138d194cb7b16b0ed230020beeb13a/langgraph_prebuilt-0.6.4-py3-none-any.whl\", hash = \"sha256:819f31d88b84cb2729ff1b79db2d51e9506b8fb7aaacfc0d359d4fe16e717344\", size = 28025, upload-time = \"2025-08-07T18:17:56.493Z\" },\n+]\n+\n+[[package]]\n+name = \"langgraph-sdk\"\n+version = \"0.2.5\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"httpx\" },\n+    { name = \"orjson\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/42/72/37943b367f480b4761c052e86b0c380ecb928cdccf1d5c85d569e036c06f/langgraph_sdk-0.2.5.tar.gz\", hash = \"sha256:b28aa0f485811388465ac5d2a19d728ab84b59a8900cdfcf0f4e8177802cbf62\", size = 79816, upload-time = \"2025-09-03T00:51:14.285Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/f1/2c/9e5a0259601253f89f8b50095a6a2541ff6beb9041c92e64bd8e05e77c29/langgraph_sdk-0.2.5-py3-none-any.whl\", hash = \"sha256:a837a7a3c5e16ba55a3952037f9d8e247d3e001e9a0e3b07aacef55861e5dc58\", size = 54052, upload-time = \"2025-09-03T00:51:13.057Z\" },\n+]\n+\n+[[package]]\n+name = \"langsmith\"\n+version = \"0.4.23\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"httpx\" },\n+    { name = \"orjson\", marker = \"platform_python_implementation != 'PyPy'\" },\n+    { name = \"packaging\" },\n+    { name = \"pydantic\" },\n+    { name = \"requests\" },\n+    { name = \"requests-toolbelt\" },\n+    { name = \"zstandard\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/26/59/1f92c84585da3bad6d76050f32811198dd2bb4e6a0a63f7b0041b75344ee/langsmith-0.4.23.tar.gz\", hash = \"sha256:d8af9c6bf69c377a5a0a1c56bd742ab6acfce794e3c4a6993b08e76ee2397998\", size = 939141, upload-time = \"2025-09-02T22:06:38.606Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/3c/63/c132d3e356702668bf3103771e2398fee963c22715a88501d55361761f8f/langsmith-0.4.23-py3-none-any.whl\", hash = \"sha256:2b7cc692c537d5e48c2932277a69c35a89ff5b153828281194e2af34aeda985f\", size = 378757, upload-time = \"2025-09-02T22:06:36.621Z\" },\n+]\n+\n+[[package]]\n+name = \"mcp\"\n+version = \"1.13.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"anyio\" },\n+    { name = \"httpx\" },\n+    { name = \"httpx-sse\" },\n+    { name = \"jsonschema\" },\n+    { name = \"pydantic\" },\n+    { name = \"pydantic-settings\" },\n+    { name = \"python-multipart\" },\n+    { name = \"pywin32\", marker = \"sys_platform == 'win32'\" },\n+    { name = \"sse-starlette\" },\n+    { name = \"starlette\" },\n+    { name = \"uvicorn\", marker = \"sys_platform != 'emscripten'\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/66/3c/82c400c2d50afdac4fbefb5b4031fd327e2ad1f23ccef8eee13c5909aa48/mcp-1.13.1.tar.gz\", hash = \"sha256:165306a8fd7991dc80334edd2de07798175a56461043b7ae907b279794a834c5\", size = 438198, upload-time = \"2025-08-22T09:22:16.061Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/19/3f/d085c7f49ade6d273b185d61ec9405e672b6433f710ea64a90135a8dd445/mcp-1.13.1-py3-none-any.whl\", hash = \"sha256:c314e7c8bd477a23ba3ef472ee5a32880316c42d03e06dcfa31a1cc7a73b65df\", size = 161494, upload-time = \"2025-08-22T09:22:14.705Z\" },\n+]\n+\n+[[package]]\n+name = \"nest-asyncio\"\n+version = \"1.6.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/83/f8/51569ac65d696c8ecbee95938f89d4abf00f47d58d48f6fbabfe8f0baefe/nest_asyncio-1.6.0.tar.gz\", hash = \"sha256:6f172d5449aca15afd6c646851f4e31e02c598d553a667e38cafa997cfec55fe\", size = 7418, upload-time = \"2024-01-21T14:25:19.227Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/a0/c4/c2971a3ba4c6103a3d10c4b0f24f461ddc027f0f09763220cf35ca1401b3/nest_asyncio-1.6.0-py3-none-any.whl\", hash = \"sha256:87af6efd6b5e897c81050477ef65c62e2b2f35d51703cae01aff2905b1852e1c\", size = 5195, upload-time = \"2024-01-21T14:25:17.223Z\" },\n+]\n+\n+[[package]]\n+name = \"openai\"\n+version = \"1.104.2\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"anyio\" },\n+    { name = \"distro\" },\n+    { name = \"httpx\" },\n+    { name = \"jiter\" },\n+    { name = \"pydantic\" },\n+    { name = \"sniffio\" },\n+    { name = \"tqdm\" },\n+    { name = \"typing-extensions\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/94/dc/965b3528ed0435b717acca45e2541d94bd827c0520ce172366323c9edcab/openai-1.104.2.tar.gz\", hash = \"sha256:9b582ead9dd208753f89dae8e36b6548c6ada076e87ba3db36630e29239661ab\", size = 557160, upload-time = \"2025-09-02T21:42:31.054Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/46/9c/d0b56971e5584aea338bb00d3ca96a7f6694dff77006581b21cd773497ce/openai-1.104.2-py3-none-any.whl\", hash = \"sha256:0148951da12ea651f890ef38f8adef75b78c053dba37ea2bdba857c8945860d4\", size = 928160, upload-time = \"2025-09-02T21:42:28.678Z\" },\n+]\n+\n+[[package]]\n+name = \"orjson\"\n+version = \"3.11.3\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/be/4d/8df5f83256a809c22c4d6792ce8d43bb503be0fb7a8e4da9025754b09658/orjson-3.11.3.tar.gz\", hash = \"sha256:1c0603b1d2ffcd43a411d64797a19556ef76958aef1c182f22dc30860152a98a\", size = 5482394, upload-time = \"2025-08-26T17:46:43.171Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/fc/79/8932b27293ad35919571f77cb3693b5906cf14f206ef17546052a241fdf6/orjson-3.11.3-cp313-cp313-macosx_10_15_x86_64.macosx_11_0_arm64.macosx_10_15_universal2.whl\", hash = \"sha256:af40c6612fd2a4b00de648aa26d18186cd1322330bd3a3cc52f87c699e995810\", size = 238127, upload-time = \"2025-08-26T17:45:38.146Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1c/82/cb93cd8cf132cd7643b30b6c5a56a26c4e780c7a145db6f83de977b540ce/orjson-3.11.3-cp313-cp313-macosx_15_0_arm64.whl\", hash = \"sha256:9f1587f26c235894c09e8b5b7636a38091a9e6e7fe4531937534749c04face43\", size = 127494, upload-time = \"2025-08-26T17:45:39.57Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a4/b8/2d9eb181a9b6bb71463a78882bcac1027fd29cf62c38a40cc02fc11d3495/orjson-3.11.3-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:61dcdad16da5bb486d7227a37a2e789c429397793a6955227cedbd7252eb5a27\", size = 123017, upload-time = \"2025-08-26T17:45:40.876Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b4/14/a0e971e72d03b509190232356d54c0f34507a05050bd026b8db2bf2c192c/orjson-3.11.3-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:11c6d71478e2cbea0a709e8a06365fa63da81da6498a53e4c4f065881d21ae8f\", size = 127898, upload-time = \"2025-08-26T17:45:42.188Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8e/af/dc74536722b03d65e17042cc30ae586161093e5b1f29bccda24765a6ae47/orjson-3.11.3-cp313-cp313-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ff94112e0098470b665cb0ed06efb187154b63649403b8d5e9aedeb482b4548c\", size = 130742, upload-time = \"2025-08-26T17:45:43.511Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/62/e6/7a3b63b6677bce089fe939353cda24a7679825c43a24e49f757805fc0d8a/orjson-3.11.3-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ae8b756575aaa2a855a75192f356bbda11a89169830e1439cfb1a3e1a6dde7be\", size = 132377, upload-time = \"2025-08-26T17:45:45.525Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fc/cd/ce2ab93e2e7eaf518f0fd15e3068b8c43216c8a44ed82ac2b79ce5cef72d/orjson-3.11.3-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:c9416cc19a349c167ef76135b2fe40d03cea93680428efee8771f3e9fb66079d\", size = 135313, upload-time = \"2025-08-26T17:45:46.821Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d0/b4/f98355eff0bd1a38454209bbc73372ce351ba29933cb3e2eba16c04b9448/orjson-3.11.3-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b822caf5b9752bc6f246eb08124c3d12bf2175b66ab74bac2ef3bbf9221ce1b2\", size = 132908, upload-time = \"2025-08-26T17:45:48.126Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/eb/92/8f5182d7bc2a1bed46ed960b61a39af8389f0ad476120cd99e67182bfb6d/orjson-3.11.3-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:414f71e3bdd5573893bf5ecdf35c32b213ed20aa15536fe2f588f946c318824f\", size = 130905, upload-time = \"2025-08-26T17:45:49.414Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1a/60/c41ca753ce9ffe3d0f67b9b4c093bdd6e5fdb1bc53064f992f66bb99954d/orjson-3.11.3-cp313-cp313-musllinux_1_2_armv7l.whl\", hash = \"sha256:828e3149ad8815dc14468f36ab2a4b819237c155ee1370341b91ea4c8672d2ee\", size = 403812, upload-time = \"2025-08-26T17:45:51.085Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/dd/13/e4a4f16d71ce1868860db59092e78782c67082a8f1dc06a3788aef2b41bc/orjson-3.11.3-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:ac9e05f25627ffc714c21f8dfe3a579445a5c392a9c8ae7ba1d0e9fb5333f56e\", size = 146277, upload-time = \"2025-08-26T17:45:52.851Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8d/8b/bafb7f0afef9344754a3a0597a12442f1b85a048b82108ef2c956f53babd/orjson-3.11.3-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:e44fbe4000bd321d9f3b648ae46e0196d21577cf66ae684a96ff90b1f7c93633\", size = 135418, upload-time = \"2025-08-26T17:45:54.806Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/60/d4/bae8e4f26afb2c23bea69d2f6d566132584d1c3a5fe89ee8c17b718cab67/orjson-3.11.3-cp313-cp313-win32.whl\", hash = \"sha256:2039b7847ba3eec1f5886e75e6763a16e18c68a63efc4b029ddf994821e2e66b\", size = 136216, upload-time = \"2025-08-26T17:45:57.182Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/88/76/224985d9f127e121c8cad882cea55f0ebe39f97925de040b75ccd4b33999/orjson-3.11.3-cp313-cp313-win_amd64.whl\", hash = \"sha256:29be5ac4164aa8bdcba5fa0700a3c9c316b411d8ed9d39ef8a882541bd452fae\", size = 131362, upload-time = \"2025-08-26T17:45:58.56Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e2/cf/0dce7a0be94bd36d1346be5067ed65ded6adb795fdbe3abd234c8d576d01/orjson-3.11.3-cp313-cp313-win_arm64.whl\", hash = \"sha256:18bd1435cb1f2857ceb59cfb7de6f92593ef7b831ccd1b9bfb28ca530e539dce\", size = 125989, upload-time = \"2025-08-26T17:45:59.95Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ef/77/d3b1fef1fc6aaeed4cbf3be2b480114035f4df8fa1a99d2dac1d40d6e924/orjson-3.11.3-cp314-cp314-macosx_10_15_x86_64.macosx_11_0_arm64.macosx_10_15_universal2.whl\", hash = \"sha256:cf4b81227ec86935568c7edd78352a92e97af8da7bd70bdfdaa0d2e0011a1ab4\", size = 238115, upload-time = \"2025-08-26T17:46:01.669Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e4/6d/468d21d49bb12f900052edcfbf52c292022d0a323d7828dc6376e6319703/orjson-3.11.3-cp314-cp314-macosx_15_0_arm64.whl\", hash = \"sha256:bc8bc85b81b6ac9fc4dae393a8c159b817f4c2c9dee5d12b773bddb3b95fc07e\", size = 127493, upload-time = \"2025-08-26T17:46:03.466Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/67/46/1e2588700d354aacdf9e12cc2d98131fb8ac6f31ca65997bef3863edb8ff/orjson-3.11.3-cp314-cp314-manylinux_2_34_aarch64.whl\", hash = \"sha256:88dcfc514cfd1b0de038443c7b3e6a9797ffb1b3674ef1fd14f701a13397f82d\", size = 122998, upload-time = \"2025-08-26T17:46:04.803Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3b/94/11137c9b6adb3779f1b34fd98be51608a14b430dbc02c6d41134fbba484c/orjson-3.11.3-cp314-cp314-manylinux_2_34_x86_64.whl\", hash = \"sha256:d61cd543d69715d5fc0a690c7c6f8dcc307bc23abef9738957981885f5f38229\", size = 132915, upload-time = \"2025-08-26T17:46:06.237Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/10/61/dccedcf9e9bcaac09fdabe9eaee0311ca92115699500efbd31950d878833/orjson-3.11.3-cp314-cp314-musllinux_1_2_aarch64.whl\", hash = \"sha256:2b7b153ed90ababadbef5c3eb39549f9476890d339cf47af563aea7e07db2451\", size = 130907, upload-time = \"2025-08-26T17:46:07.581Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/0e/fd/0e935539aa7b08b3ca0f817d73034f7eb506792aae5ecc3b7c6e679cdf5f/orjson-3.11.3-cp314-cp314-musllinux_1_2_armv7l.whl\", hash = \"sha256:7909ae2460f5f494fecbcd10613beafe40381fd0316e35d6acb5f3a05bfda167\", size = 403852, upload-time = \"2025-08-26T17:46:08.982Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/4a/2b/50ae1a5505cd1043379132fdb2adb8a05f37b3e1ebffe94a5073321966fd/orjson-3.11.3-cp314-cp314-musllinux_1_2_i686.whl\", hash = \"sha256:2030c01cbf77bc67bee7eef1e7e31ecf28649353987775e3583062c752da0077\", size = 146309, upload-time = \"2025-08-26T17:46:10.576Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/cd/1d/a473c158e380ef6f32753b5f39a69028b25ec5be331c2049a2201bde2e19/orjson-3.11.3-cp314-cp314-musllinux_1_2_x86_64.whl\", hash = \"sha256:a0169ebd1cbd94b26c7a7ad282cf5c2744fce054133f959e02eb5265deae1872\", size = 135424, upload-time = \"2025-08-26T17:46:12.386Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/da/09/17d9d2b60592890ff7382e591aa1d9afb202a266b180c3d4049b1ec70e4a/orjson-3.11.3-cp314-cp314-win32.whl\", hash = \"sha256:0c6d7328c200c349e3a4c6d8c83e0a5ad029bdc2d417f234152bf34842d0fc8d\", size = 136266, upload-time = \"2025-08-26T17:46:13.853Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/15/58/358f6846410a6b4958b74734727e582ed971e13d335d6c7ce3e47730493e/orjson-3.11.3-cp314-cp314-win_amd64.whl\", hash = \"sha256:317bbe2c069bbc757b1a2e4105b64aacd3bc78279b66a6b9e51e846e4809f804\", size = 131351, upload-time = \"2025-08-26T17:46:15.27Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/28/01/d6b274a0635be0468d4dbd9cafe80c47105937a0d42434e805e67cd2ed8b/orjson-3.11.3-cp314-cp314-win_arm64.whl\", hash = \"sha256:e8f6a7a27d7b7bec81bd5924163e9af03d49bbb63013f107b48eb5d16db711bc\", size = 125985, upload-time = \"2025-08-26T17:46:16.67Z\" },\n+]\n+\n+[[package]]\n+name = \"ormsgpack\"\n+version = \"1.10.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/92/36/44eed5ef8ce93cded76a576780bab16425ce7876f10d3e2e6265e46c21ea/ormsgpack-1.10.0.tar.gz\", hash = \"sha256:7f7a27efd67ef22d7182ec3b7fa7e9d147c3ad9be2a24656b23c989077e08b16\", size = 58629, upload-time = \"2025-05-24T19:07:53.944Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/61/f8/ec5f4e03268d0097545efaab2893aa63f171cf2959cb0ea678a5690e16a1/ormsgpack-1.10.0-cp313-cp313-macosx_10_12_x86_64.macosx_11_0_arm64.macosx_10_12_universal2.whl\", hash = \"sha256:8d816d45175a878993b7372bd5408e0f3ec5a40f48e2d5b9d8f1cc5d31b61f1f\", size = 376806, upload-time = \"2025-05-24T19:07:29.555Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c1/19/b3c53284aad1e90d4d7ed8c881a373d218e16675b8b38e3569d5b40cc9b8/ormsgpack-1.10.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a90345ccb058de0f35262893751c603b6376b05f02be2b6f6b7e05d9dd6d5643\", size = 204433, upload-time = \"2025-05-24T19:07:30.977Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/09/0b/845c258f59df974a20a536c06cace593698491defdd3d026a8a5f9b6e745/ormsgpack-1.10.0-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:144b5e88f1999433e54db9d637bae6fe21e935888be4e3ac3daecd8260bd454e\", size = 215549, upload-time = \"2025-05-24T19:07:32.345Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/61/56/57fce8fb34ca6c9543c026ebebf08344c64dbb7b6643d6ddd5355d37e724/ormsgpack-1.10.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2190b352509d012915921cca76267db136cd026ddee42f1b0d9624613cc7058c\", size = 216747, upload-time = \"2025-05-24T19:07:34.075Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b8/3f/655b5f6a2475c8d209f5348cfbaaf73ce26237b92d79ef2ad439407dd0fa/ormsgpack-1.10.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:86fd9c1737eaba43d3bb2730add9c9e8b5fbed85282433705dd1b1e88ea7e6fb\", size = 384785, upload-time = \"2025-05-24T19:07:35.83Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/4b/94/687a0ad8afd17e4bce1892145d6a1111e58987ddb176810d02a1f3f18686/ormsgpack-1.10.0-cp313-cp313-musllinux_1_2_armv7l.whl\", hash = \"sha256:33afe143a7b61ad21bb60109a86bb4e87fec70ef35db76b89c65b17e32da7935\", size = 479076, upload-time = \"2025-05-24T19:07:37.533Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c8/34/68925232e81e0e062a2f0ac678f62aa3b6f7009d6a759e19324dbbaebae7/ormsgpack-1.10.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:f23d45080846a7b90feabec0d330a9cc1863dc956728412e4f7986c80ab3a668\", size = 390446, upload-time = \"2025-05-24T19:07:39.469Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/12/ad/f4e1a36a6d1714afb7ffb74b3ababdcb96529cf4e7a216f9f7c8eda837b6/ormsgpack-1.10.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:534d18acb805c75e5fba09598bf40abe1851c853247e61dda0c01f772234da69\", size = 121399, upload-time = \"2025-05-24T19:07:40.854Z\" },\n+]\n+\n+[[package]]\n+name = \"packaging\"\n+version = \"25.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/a1/d4/1fc4078c65507b51b96ca8f8c3ba19e6a61c8253c72794544580a7b6c24d/packaging-25.0.tar.gz\", hash = \"sha256:d443872c98d677bf60f6a1f2f8c1cb748e8fe762d2bf9d3148b5599295b0fc4f\", size = 165727, upload-time = \"2025-04-19T11:48:59.673Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/20/12/38679034af332785aac8774540895e234f4d07f7545804097de4b666afd8/packaging-25.0-py3-none-any.whl\", hash = \"sha256:29572ef2b1f17581046b3a2227d5c611fb25ec70ca1ba8554b24b0e69331a484\", size = 66469, upload-time = \"2025-04-19T11:48:57.875Z\" },\n+]\n+\n+[[package]]\n+name = \"pydantic\"\n+version = \"2.11.7\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"annotated-types\" },\n+    { name = \"pydantic-core\" },\n+    { name = \"typing-extensions\" },\n+    { name = \"typing-inspection\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/00/dd/4325abf92c39ba8623b5af936ddb36ffcfe0beae70405d456ab1fb2f5b8c/pydantic-2.11.7.tar.gz\", hash = \"sha256:d989c3c6cb79469287b1569f7447a17848c998458d49ebe294e975b9baf0f0db\", size = 788350, upload-time = \"2025-06-14T08:33:17.137Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/6a/c0/ec2b1c8712ca690e5d61979dee872603e92b8a32f94cc1b72d53beab008a/pydantic-2.11.7-py3-none-any.whl\", hash = \"sha256:dde5df002701f6de26248661f6835bbe296a47bf73990135c7d07ce741b9623b\", size = 444782, upload-time = \"2025-06-14T08:33:14.905Z\" },\n+]\n+\n+[[package]]\n+name = \"pydantic-core\"\n+version = \"2.33.2\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"typing-extensions\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/ad/88/5f2260bdfae97aabf98f1778d43f69574390ad787afb646292a638c923d4/pydantic_core-2.33.2.tar.gz\", hash = \"sha256:7cb8bc3605c29176e1b105350d2e6474142d7c1bd1d9327c4a9bdb46bf827acc\", size = 435195, upload-time = \"2025-04-23T18:33:52.104Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/46/8c/99040727b41f56616573a28771b1bfa08a3d3fe74d3d513f01251f79f172/pydantic_core-2.33.2-cp313-cp313-macosx_10_12_x86_64.whl\", hash = \"sha256:1082dd3e2d7109ad8b7da48e1d4710c8d06c253cbc4a27c1cff4fbcaa97a9e3f\", size = 2015688, upload-time = \"2025-04-23T18:31:53.175Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3a/cc/5999d1eb705a6cefc31f0b4a90e9f7fc400539b1a1030529700cc1b51838/pydantic_core-2.33.2-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:f517ca031dfc037a9c07e748cefd8d96235088b83b4f4ba8939105d20fa1dcd6\", size = 1844808, upload-time = \"2025-04-23T18:31:54.79Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/6f/5e/a0a7b8885c98889a18b6e376f344da1ef323d270b44edf8174d6bce4d622/pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0a9f2c9dd19656823cb8250b0724ee9c60a82f3cdf68a080979d13092a3b0fef\", size = 1885580, upload-time = \"2025-04-23T18:31:57.393Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3b/2a/953581f343c7d11a304581156618c3f592435523dd9d79865903272c256a/pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:2b0a451c263b01acebe51895bfb0e1cc842a5c666efe06cdf13846c7418caa9a\", size = 1973859, upload-time = \"2025-04-23T18:31:59.065Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e6/55/f1a813904771c03a3f97f676c62cca0c0a4138654107c1b61f19c644868b/pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1ea40a64d23faa25e62a70ad163571c0b342b8bf66d5fa612ac0dec4f069d916\", size = 2120810, upload-time = \"2025-04-23T18:32:00.78Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/aa/c3/053389835a996e18853ba107a63caae0b9deb4a276c6b472931ea9ae6e48/pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:0fb2d542b4d66f9470e8065c5469ec676978d625a8b7a363f07d9a501a9cb36a\", size = 2676498, upload-time = \"2025-04-23T18:32:02.418Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/eb/3c/f4abd740877a35abade05e437245b192f9d0ffb48bbbbd708df33d3cda37/pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9fdac5d6ffa1b5a83bca06ffe7583f5576555e6c8b3a91fbd25ea7780f825f7d\", size = 2000611, upload-time = \"2025-04-23T18:32:04.152Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/59/a7/63ef2fed1837d1121a894d0ce88439fe3e3b3e48c7543b2a4479eb99c2bd/pydantic_core-2.33.2-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:04a1a413977ab517154eebb2d326da71638271477d6ad87a769102f7c2488c56\", size = 2107924, upload-time = \"2025-04-23T18:32:06.129Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/04/8f/2551964ef045669801675f1cfc3b0d74147f4901c3ffa42be2ddb1f0efc4/pydantic_core-2.33.2-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:c8e7af2f4e0194c22b5b37205bfb293d166a7344a5b0d0eaccebc376546d77d5\", size = 2063196, upload-time = \"2025-04-23T18:32:08.178Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/26/bd/d9602777e77fc6dbb0c7db9ad356e9a985825547dce5ad1d30ee04903918/pydantic_core-2.33.2-cp313-cp313-musllinux_1_1_armv7l.whl\", hash = \"sha256:5c92edd15cd58b3c2d34873597a1e20f13094f59cf88068adb18947df5455b4e\", size = 2236389, upload-time = \"2025-04-23T18:32:10.242Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/42/db/0e950daa7e2230423ab342ae918a794964b053bec24ba8af013fc7c94846/pydantic_core-2.33.2-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:65132b7b4a1c0beded5e057324b7e16e10910c106d43675d9bd87d4f38dde162\", size = 2239223, upload-time = \"2025-04-23T18:32:12.382Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/58/4d/4f937099c545a8a17eb52cb67fe0447fd9a373b348ccfa9a87f141eeb00f/pydantic_core-2.33.2-cp313-cp313-win32.whl\", hash = \"sha256:52fb90784e0a242bb96ec53f42196a17278855b0f31ac7c3cc6f5c1ec4811849\", size = 1900473, upload-time = \"2025-04-23T18:32:14.034Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a0/75/4a0a9bac998d78d889def5e4ef2b065acba8cae8c93696906c3a91f310ca/pydantic_core-2.33.2-cp313-cp313-win_amd64.whl\", hash = \"sha256:c083a3bdd5a93dfe480f1125926afcdbf2917ae714bdb80b36d34318b2bec5d9\", size = 1955269, upload-time = \"2025-04-23T18:32:15.783Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/f9/86/1beda0576969592f1497b4ce8e7bc8cbdf614c352426271b1b10d5f0aa64/pydantic_core-2.33.2-cp313-cp313-win_arm64.whl\", hash = \"sha256:e80b087132752f6b3d714f041ccf74403799d3b23a72722ea2e6ba2e892555b9\", size = 1893921, upload-time = \"2025-04-23T18:32:18.473Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a4/7d/e09391c2eebeab681df2b74bfe6c43422fffede8dc74187b2b0bf6fd7571/pydantic_core-2.33.2-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:61c18fba8e5e9db3ab908620af374db0ac1baa69f0f32df4f61ae23f15e586ac\", size = 1806162, upload-time = \"2025-04-23T18:32:20.188Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/f1/3d/847b6b1fed9f8ed3bb95a9ad04fbd0b212e832d4f0f50ff4d9ee5a9f15cf/pydantic_core-2.33.2-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:95237e53bb015f67b63c91af7518a62a8660376a6a0db19b89acc77a4d6199f5\", size = 1981560, upload-time = \"2025-04-23T18:32:22.354Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/6f/9a/e73262f6c6656262b5fdd723ad90f518f579b7bc8622e43a942eec53c938/pydantic_core-2.33.2-cp313-cp313t-win_amd64.whl\", hash = \"sha256:c2fc0a768ef76c15ab9238afa6da7f69895bb5d1ee83aeea2e3509af4472d0b9\", size = 1935777, upload-time = \"2025-04-23T18:32:25.088Z\" },\n+]\n+\n+[[package]]\n+name = \"pydantic-settings\"\n+version = \"2.10.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"pydantic\" },\n+    { name = \"python-dotenv\" },\n+    { name = \"typing-inspection\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/68/85/1ea668bbab3c50071ca613c6ab30047fb36ab0da1b92fa8f17bbc38fd36c/pydantic_settings-2.10.1.tar.gz\", hash = \"sha256:06f0062169818d0f5524420a360d632d5857b83cffd4d42fe29597807a1614ee\", size = 172583, upload-time = \"2025-06-24T13:26:46.841Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/58/f0/427018098906416f580e3cf1366d3b1abfb408a0652e9f31600c24a1903c/pydantic_settings-2.10.1-py3-none-any.whl\", hash = \"sha256:a60952460b99cf661dc25c29c0ef171721f98bfcb52ef8d9ea4c943d7c8cc796\", size = 45235, upload-time = \"2025-06-24T13:26:45.485Z\" },\n+]\n+\n+[[package]]\n+name = \"python-dotenv\"\n+version = \"1.1.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/f6/b0/4bc07ccd3572a2f9df7e6782f52b0c6c90dcbb803ac4a167702d7d0dfe1e/python_dotenv-1.1.1.tar.gz\", hash = \"sha256:a8a6399716257f45be6a007360200409fce5cda2661e3dec71d23dc15f6189ab\", size = 41978, upload-time = \"2025-06-24T04:21:07.341Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/5f/ed/539768cf28c661b5b068d66d96a2f155c4971a5d55684a514c1a0e0dec2f/python_dotenv-1.1.1-py3-none-any.whl\", hash = \"sha256:31f23644fe2602f88ff55e1f5c79ba497e01224ee7737937930c448e4d0e24dc\", size = 20556, upload-time = \"2025-06-24T04:21:06.073Z\" },\n+]\n+\n+[[package]]\n+name = \"python-multipart\"\n+version = \"0.0.20\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/f3/87/f44d7c9f274c7ee665a29b885ec97089ec5dc034c7f3fafa03da9e39a09e/python_multipart-0.0.20.tar.gz\", hash = \"sha256:8dd0cab45b8e23064ae09147625994d090fa46f5b0d1e13af944c331a7fa9d13\", size = 37158, upload-time = \"2024-12-16T19:45:46.972Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/45/58/38b5afbc1a800eeea951b9285d3912613f2603bdf897a4ab0f4bd7f405fc/python_multipart-0.0.20-py3-none-any.whl\", hash = \"sha256:8a62d3a8335e06589fe01f2a3e178cdcc632f3fbe0d492ad9ee0ec35aab1f104\", size = 24546, upload-time = \"2024-12-16T19:45:44.423Z\" },\n+]\n+\n+[[package]]\n+name = \"pywin32\"\n+version = \"311\"\n+source = { registry = \"https://pypi.org/simple\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/a5/be/3fd5de0979fcb3994bfee0d65ed8ca9506a8a1260651b86174f6a86f52b3/pywin32-311-cp313-cp313-win32.whl\", hash = \"sha256:f95ba5a847cba10dd8c4d8fefa9f2a6cf283b8b88ed6178fa8a6c1ab16054d0d\", size = 8705700, upload-time = \"2025-07-14T20:13:26.471Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e3/28/e0a1909523c6890208295a29e05c2adb2126364e289826c0a8bc7297bd5c/pywin32-311-cp313-cp313-win_amd64.whl\", hash = \"sha256:718a38f7e5b058e76aee1c56ddd06908116d35147e133427e59a3983f703a20d\", size = 9494700, upload-time = \"2025-07-14T20:13:28.243Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/04/bf/90339ac0f55726dce7d794e6d79a18a91265bdf3aa70b6b9ca52f35e022a/pywin32-311-cp313-cp313-win_arm64.whl\", hash = \"sha256:7b4075d959648406202d92a2310cb990fea19b535c7f4a78d3f5e10b926eeb8a\", size = 8709318, upload-time = \"2025-07-14T20:13:30.348Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c9/31/097f2e132c4f16d99a22bfb777e0fd88bd8e1c634304e102f313af69ace5/pywin32-311-cp314-cp314-win32.whl\", hash = \"sha256:b7a2c10b93f8986666d0c803ee19b5990885872a7de910fc460f9b0c2fbf92ee\", size = 8840714, upload-time = \"2025-07-14T20:13:32.449Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/90/4b/07c77d8ba0e01349358082713400435347df8426208171ce297da32c313d/pywin32-311-cp314-cp314-win_amd64.whl\", hash = \"sha256:3aca44c046bd2ed8c90de9cb8427f581c479e594e99b5c0bb19b29c10fd6cb87\", size = 9656800, upload-time = \"2025-07-14T20:13:34.312Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c0/d2/21af5c535501a7233e734b8af901574572da66fcc254cb35d0609c9080dd/pywin32-311-cp314-cp314-win_arm64.whl\", hash = \"sha256:a508e2d9025764a8270f93111a970e1d0fbfc33f4153b388bb649b7eec4f9b42\", size = 8932540, upload-time = \"2025-07-14T20:13:36.379Z\" },\n+]\n+\n+[[package]]\n+name = \"pyyaml\"\n+version = \"6.0.2\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/54/ed/79a089b6be93607fa5cdaedf301d7dfb23af5f25c398d5ead2525b063e17/pyyaml-6.0.2.tar.gz\", hash = \"sha256:d584d9ec91ad65861cc08d42e834324ef890a082e591037abe114850ff7bbc3e\", size = 130631, upload-time = \"2024-08-06T20:33:50.674Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/ef/e3/3af305b830494fa85d95f6d95ef7fa73f2ee1cc8ef5b495c7c3269fb835f/PyYAML-6.0.2-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:efdca5630322a10774e8e98e1af481aad470dd62c3170801852d752aa7a783ba\", size = 181309, upload-time = \"2024-08-06T20:32:43.4Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/45/9f/3b1c20a0b7a3200524eb0076cc027a970d320bd3a6592873c85c92a08731/PyYAML-6.0.2-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:50187695423ffe49e2deacb8cd10510bc361faac997de9efef88badc3bb9e2d1\", size = 171679, upload-time = \"2024-08-06T20:32:44.801Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/7c/9a/337322f27005c33bcb656c655fa78325b730324c78620e8328ae28b64d0c/PyYAML-6.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0ffe8360bab4910ef1b9e87fb812d8bc0a308b0d0eef8c8f44e0254ab3b07133\", size = 733428, upload-time = \"2024-08-06T20:32:46.432Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a3/69/864fbe19e6c18ea3cc196cbe5d392175b4cf3d5d0ac1403ec3f2d237ebb5/PyYAML-6.0.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:17e311b6c678207928d649faa7cb0d7b4c26a0ba73d41e99c4fff6b6c3276484\", size = 763361, upload-time = \"2024-08-06T20:32:51.188Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/04/24/b7721e4845c2f162d26f50521b825fb061bc0a5afcf9a386840f23ea19fa/PyYAML-6.0.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:70b189594dbe54f75ab3a1acec5f1e3faa7e8cf2f1e08d9b561cb41b845f69d5\", size = 759523, upload-time = \"2024-08-06T20:32:53.019Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/2b/b2/e3234f59ba06559c6ff63c4e10baea10e5e7df868092bf9ab40e5b9c56b6/PyYAML-6.0.2-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:41e4e3953a79407c794916fa277a82531dd93aad34e29c2a514c2c0c5fe971cc\", size = 726660, upload-time = \"2024-08-06T20:32:54.708Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fe/0f/25911a9f080464c59fab9027482f822b86bf0608957a5fcc6eaac85aa515/PyYAML-6.0.2-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:68ccc6023a3400877818152ad9a1033e3db8625d899c72eacb5a668902e4d652\", size = 751597, upload-time = \"2024-08-06T20:32:56.985Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/14/0d/e2c3b43bbce3cf6bd97c840b46088a3031085179e596d4929729d8d68270/PyYAML-6.0.2-cp313-cp313-win32.whl\", hash = \"sha256:bc2fa7c6b47d6bc618dd7fb02ef6fdedb1090ec036abab80d4681424b84c1183\", size = 140527, upload-time = \"2024-08-06T20:33:03.001Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fa/de/02b54f42487e3d3c6efb3f89428677074ca7bf43aae402517bc7cca949f3/PyYAML-6.0.2-cp313-cp313-win_amd64.whl\", hash = \"sha256:8388ee1976c416731879ac16da0aff3f63b286ffdd57cdeb95f3f2e085687563\", size = 156446, upload-time = \"2024-08-06T20:33:04.33Z\" },\n+]\n+\n+[[package]]\n+name = \"referencing\"\n+version = \"0.36.2\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"attrs\" },\n+    { name = \"rpds-py\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/2f/db/98b5c277be99dd18bfd91dd04e1b759cad18d1a338188c936e92f921c7e2/referencing-0.36.2.tar.gz\", hash = \"sha256:df2e89862cd09deabbdba16944cc3f10feb6b3e6f18e902f7cc25609a34775aa\", size = 74744, upload-time = \"2025-01-25T08:48:16.138Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/c1/b1/3baf80dc6d2b7bc27a95a67752d0208e410351e3feb4eb78de5f77454d8d/referencing-0.36.2-py3-none-any.whl\", hash = \"sha256:e8699adbbf8b5c7de96d8ffa0eb5c158b3beafce084968e2ea8bb08c6794dcd0\", size = 26775, upload-time = \"2025-01-25T08:48:14.241Z\" },\n+]\n+\n+[[package]]\n+name = \"regex\"\n+version = \"2025.9.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/b2/5a/4c63457fbcaf19d138d72b2e9b39405954f98c0349b31c601bfcb151582c/regex-2025.9.1.tar.gz\", hash = \"sha256:88ac07b38d20b54d79e704e38aa3bd2c0f8027432164226bdee201a1c0c9c9ff\", size = 400852, upload-time = \"2025-09-01T22:10:10.479Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/98/25/b2959ce90c6138c5142fe5264ee1f9b71a0c502ca4c7959302a749407c79/regex-2025.9.1-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:bc6834727d1b98d710a63e6c823edf6ffbf5792eba35d3fa119531349d4142ef\", size = 485932, upload-time = \"2025-09-01T22:08:57.913Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/49/2e/6507a2a85f3f2be6643438b7bd976e67ad73223692d6988eb1ff444106d3/regex-2025.9.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:c3dc05b6d579875719bccc5f3037b4dc80433d64e94681a0061845bd8863c025\", size = 289568, upload-time = \"2025-09-01T22:08:59.258Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c7/d8/de4a4b57215d99868f1640e062a7907e185ec7476b4b689e2345487c1ff4/regex-2025.9.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:22213527df4c985ec4a729b055a8306272d41d2f45908d7bacb79be0fa7a75ad\", size = 286984, upload-time = \"2025-09-01T22:09:00.835Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/03/15/e8cb403403a57ed316e80661db0e54d7aa2efcd85cb6156f33cc18746922/regex-2025.9.1-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:8e3f6e3c5a5a1adc3f7ea1b5aec89abfc2f4fbfba55dafb4343cd1d084f715b2\", size = 797514, upload-time = \"2025-09-01T22:09:02.538Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e4/26/2446f2b9585fed61faaa7e2bbce3aca7dd8df6554c32addee4c4caecf24a/regex-2025.9.1-cp313-cp313-manylinux2014_ppc64le.manylinux_2_17_ppc64le.manylinux_2_28_ppc64le.whl\", hash = \"sha256:bcb89c02a0d6c2bec9b0bb2d8c78782699afe8434493bfa6b4021cc51503f249\", size = 862586, upload-time = \"2025-09-01T22:09:04.322Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fd/b8/82ffbe9c0992c31bbe6ae1c4b4e21269a5df2559102b90543c9b56724c3c/regex-2025.9.1-cp313-cp313-manylinux2014_s390x.manylinux_2_17_s390x.manylinux_2_28_s390x.whl\", hash = \"sha256:b0e2f95413eb0c651cd1516a670036315b91b71767af83bc8525350d4375ccba\", size = 910815, upload-time = \"2025-09-01T22:09:05.978Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/2f/d8/7303ea38911759c1ee30cc5bc623ee85d3196b733c51fd6703c34290a8d9/regex-2025.9.1-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:09a41dc039e1c97d3c2ed3e26523f748e58c4de3ea7a31f95e1cf9ff973fff5a\", size = 802042, upload-time = \"2025-09-01T22:09:07.865Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fc/0e/6ad51a55ed4b5af512bb3299a05d33309bda1c1d1e1808fa869a0bed31bc/regex-2025.9.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:4f0b4258b161094f66857a26ee938d3fe7b8a5063861e44571215c44fbf0e5df\", size = 786764, upload-time = \"2025-09-01T22:09:09.362Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8d/d5/394e3ffae6baa5a9217bbd14d96e0e5da47bb069d0dbb8278e2681a2b938/regex-2025.9.1-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:bf70e18ac390e6977ea7e56f921768002cb0fa359c4199606c7219854ae332e0\", size = 856557, upload-time = \"2025-09-01T22:09:11.129Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/cd/80/b288d3910c41194ad081b9fb4b371b76b0bbfdce93e7709fc98df27b37dc/regex-2025.9.1-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:b84036511e1d2bb0a4ff1aec26951caa2dea8772b223c9e8a19ed8885b32dbac\", size = 849108, upload-time = \"2025-09-01T22:09:12.877Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d1/cd/5ec76bf626d0d5abdc277b7a1734696f5f3d14fbb4a3e2540665bc305d85/regex-2025.9.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:c2e05dcdfe224047f2a59e70408274c325d019aad96227ab959403ba7d58d2d7\", size = 788201, upload-time = \"2025-09-01T22:09:14.561Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b5/36/674672f3fdead107565a2499f3007788b878188acec6d42bc141c5366c2c/regex-2025.9.1-cp313-cp313-win32.whl\", hash = \"sha256:3b9a62107a7441b81ca98261808fed30ae36ba06c8b7ee435308806bd53c1ed8\", size = 264508, upload-time = \"2025-09-01T22:09:16.193Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/83/ad/931134539515eb64ce36c24457a98b83c1b2e2d45adf3254b94df3735a76/regex-2025.9.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:b38afecc10c177eb34cfae68d669d5161880849ba70c05cbfbe409f08cc939d7\", size = 275469, upload-time = \"2025-09-01T22:09:17.462Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/24/8c/96d34e61c0e4e9248836bf86d69cb224fd222f270fa9045b24e218b65604/regex-2025.9.1-cp313-cp313-win_arm64.whl\", hash = \"sha256:ec329890ad5e7ed9fc292858554d28d58d56bf62cf964faf0aa57964b21155a0\", size = 268586, upload-time = \"2025-09-01T22:09:18.948Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/21/b1/453cbea5323b049181ec6344a803777914074b9726c9c5dc76749966d12d/regex-2025.9.1-cp314-cp314-macosx_10_13_universal2.whl\", hash = \"sha256:72fb7a016467d364546f22b5ae86c45680a4e0de6b2a6f67441d22172ff641f1\", size = 486111, upload-time = \"2025-09-01T22:09:20.734Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/f6/0e/92577f197bd2f7652c5e2857f399936c1876978474ecc5b068c6d8a79c86/regex-2025.9.1-cp314-cp314-macosx_10_13_x86_64.whl\", hash = \"sha256:c9527fa74eba53f98ad86be2ba003b3ebe97e94b6eb2b916b31b5f055622ef03\", size = 289520, upload-time = \"2025-09-01T22:09:22.249Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/af/c6/b472398116cca7ea5a6c4d5ccd0fc543f7fd2492cb0c48d2852a11972f73/regex-2025.9.1-cp314-cp314-macosx_11_0_arm64.whl\", hash = \"sha256:c905d925d194c83a63f92422af7544ec188301451b292c8b487f0543726107ca\", size = 287215, upload-time = \"2025-09-01T22:09:23.657Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/cf/11/f12ecb0cf9ca792a32bb92f758589a84149017467a544f2f6bfb45c0356d/regex-2025.9.1-cp314-cp314-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:74df7c74a63adcad314426b1f4ea6054a5ab25d05b0244f0c07ff9ce640fa597\", size = 797855, upload-time = \"2025-09-01T22:09:25.197Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/46/88/bbb848f719a540fb5997e71310f16f0b33a92c5d4b4d72d4311487fff2a3/regex-2025.9.1-cp314-cp314-manylinux2014_ppc64le.manylinux_2_17_ppc64le.manylinux_2_28_ppc64le.whl\", hash = \"sha256:4f6e935e98ea48c7a2e8be44494de337b57a204470e7f9c9c42f912c414cd6f5\", size = 863363, upload-time = \"2025-09-01T22:09:26.705Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/54/a9/2321eb3e2838f575a78d48e03c1e83ea61bd08b74b7ebbdeca8abc50fc25/regex-2025.9.1-cp314-cp314-manylinux2014_s390x.manylinux_2_17_s390x.manylinux_2_28_s390x.whl\", hash = \"sha256:4a62d033cd9ebefc7c5e466731a508dfabee827d80b13f455de68a50d3c2543d\", size = 910202, upload-time = \"2025-09-01T22:09:28.906Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/33/07/d1d70835d7d11b7e126181f316f7213c4572ecf5c5c97bdbb969fb1f38a2/regex-2025.9.1-cp314-cp314-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:ef971ebf2b93bdc88d8337238be4dfb851cc97ed6808eb04870ef67589415171\", size = 801808, upload-time = \"2025-09-01T22:09:30.733Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/13/d1/29e4d1bed514ef2bf3a4ead3cb8bb88ca8af94130239a4e68aa765c35b1c/regex-2025.9.1-cp314-cp314-musllinux_1_2_aarch64.whl\", hash = \"sha256:d936a1db208bdca0eca1f2bb2c1ba1d8370b226785c1e6db76e32a228ffd0ad5\", size = 786824, upload-time = \"2025-09-01T22:09:32.61Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/33/27/20d8ccb1bee460faaa851e6e7cc4cfe852a42b70caa1dca22721ba19f02f/regex-2025.9.1-cp314-cp314-musllinux_1_2_ppc64le.whl\", hash = \"sha256:7e786d9e4469698fc63815b8de08a89165a0aa851720eb99f5e0ea9d51dd2b6a\", size = 857406, upload-time = \"2025-09-01T22:09:34.117Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/74/fe/60c6132262dc36430d51e0c46c49927d113d3a38c1aba6a26c7744c84cf3/regex-2025.9.1-cp314-cp314-musllinux_1_2_s390x.whl\", hash = \"sha256:6b81d7dbc5466ad2c57ce3a0ddb717858fe1a29535c8866f8514d785fdb9fc5b\", size = 848593, upload-time = \"2025-09-01T22:09:35.598Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/cc/ae/2d4ff915622fabbef1af28387bf71e7f2f4944a348b8460d061e85e29bf0/regex-2025.9.1-cp314-cp314-musllinux_1_2_x86_64.whl\", hash = \"sha256:cd4890e184a6feb0ef195338a6ce68906a8903a0f2eb7e0ab727dbc0a3156273\", size = 787951, upload-time = \"2025-09-01T22:09:37.139Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/85/37/dc127703a9e715a284cc2f7dbdd8a9776fd813c85c126eddbcbdd1ca5fec/regex-2025.9.1-cp314-cp314-win32.whl\", hash = \"sha256:34679a86230e46164c9e0396b56cab13c0505972343880b9e705083cc5b8ec86\", size = 269833, upload-time = \"2025-09-01T22:09:39.245Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/83/bf/4bed4d3d0570e16771defd5f8f15f7ea2311edcbe91077436d6908956c4a/regex-2025.9.1-cp314-cp314-win_amd64.whl\", hash = \"sha256:a1196e530a6bfa5f4bde029ac5b0295a6ecfaaffbfffede4bbaf4061d9455b70\", size = 278742, upload-time = \"2025-09-01T22:09:40.651Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/cf/3e/7d7ac6fd085023312421e0d69dfabdfb28e116e513fadbe9afe710c01893/regex-2025.9.1-cp314-cp314-win_arm64.whl\", hash = \"sha256:f46d525934871ea772930e997d577d48c6983e50f206ff7b66d4ac5f8941e993\", size = 271860, upload-time = \"2025-09-01T22:09:42.413Z\" },\n+]\n+\n+[[package]]\n+name = \"requests\"\n+version = \"2.32.5\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"certifi\" },\n+    { name = \"charset-normalizer\" },\n+    { name = \"idna\" },\n+    { name = \"urllib3\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/c9/74/b3ff8e6c8446842c3f5c837e9c3dfcfe2018ea6ecef224c710c85ef728f4/requests-2.32.5.tar.gz\", hash = \"sha256:dbba0bac56e100853db0ea71b82b4dfd5fe2bf6d3754a8893c3af500cec7d7cf\", size = 134517, upload-time = \"2025-08-18T20:46:02.573Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/1e/db/4254e3eabe8020b458f1a747140d32277ec7a271daf1d235b70dc0b4e6e3/requests-2.32.5-py3-none-any.whl\", hash = \"sha256:2462f94637a34fd532264295e186976db0f5d453d1cdd31473c85a6a161affb6\", size = 64738, upload-time = \"2025-08-18T20:46:00.542Z\" },\n+]\n+\n+[[package]]\n+name = \"requests-toolbelt\"\n+version = \"1.0.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"requests\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/f3/61/d7545dafb7ac2230c70d38d31cbfe4cc64f7144dc41f6e4e4b78ecd9f5bb/requests-toolbelt-1.0.0.tar.gz\", hash = \"sha256:7681a0a3d047012b5bdc0ee37d7f8f07ebe76ab08caeccfc3921ce23c88d5bc6\", size = 206888, upload-time = \"2023-05-01T04:11:33.229Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/3f/51/d4db610ef29373b879047326cbf6fa98b6c1969d6f6dc423279de2b1be2c/requests_toolbelt-1.0.0-py2.py3-none-any.whl\", hash = \"sha256:cccfdd665f0a24fcf4726e690f65639d272bb0637b9b92dfd91a5568ccf6bd06\", size = 54481, upload-time = \"2023-05-01T04:11:28.427Z\" },\n+]\n+\n+[[package]]\n+name = \"rpds-py\"\n+version = \"0.27.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/e9/dd/2c0cbe774744272b0ae725f44032c77bdcab6e8bcf544bffa3b6e70c8dba/rpds_py-0.27.1.tar.gz\", hash = \"sha256:26a1c73171d10b7acccbded82bf6a586ab8203601e565badc74bbbf8bc5a10f8\", size = 27479, upload-time = \"2025-08-27T12:16:36.024Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/cc/77/610aeee8d41e39080c7e14afa5387138e3c9fa9756ab893d09d99e7d8e98/rpds_py-0.27.1-cp313-cp313-macosx_10_12_x86_64.whl\", hash = \"sha256:e4b9fcfbc021633863a37e92571d6f91851fa656f0180246e84cbd8b3f6b329b\", size = 361741, upload-time = \"2025-08-27T12:13:31.039Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3a/fc/c43765f201c6a1c60be2043cbdb664013def52460a4c7adace89d6682bf4/rpds_py-0.27.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:1441811a96eadca93c517d08df75de45e5ffe68aa3089924f963c782c4b898cf\", size = 345574, upload-time = \"2025-08-27T12:13:32.902Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/20/42/ee2b2ca114294cd9847d0ef9c26d2b0851b2e7e00bf14cc4c0b581df0fc3/rpds_py-0.27.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:55266dafa22e672f5a4f65019015f90336ed31c6383bd53f5e7826d21a0e0b83\", size = 385051, upload-time = \"2025-08-27T12:13:34.228Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fd/e8/1e430fe311e4799e02e2d1af7c765f024e95e17d651612425b226705f910/rpds_py-0.27.1-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:d78827d7ac08627ea2c8e02c9e5b41180ea5ea1f747e9db0915e3adf36b62dcf\", size = 398395, upload-time = \"2025-08-27T12:13:36.132Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/82/95/9dc227d441ff2670651c27a739acb2535ccaf8b351a88d78c088965e5996/rpds_py-0.27.1-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ae92443798a40a92dc5f0b01d8a7c93adde0c4dc965310a29ae7c64d72b9fad2\", size = 524334, upload-time = \"2025-08-27T12:13:37.562Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/87/01/a670c232f401d9ad461d9a332aa4080cd3cb1d1df18213dbd0d2a6a7ab51/rpds_py-0.27.1-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:c46c9dd2403b66a2a3b9720ec4b74d4ab49d4fabf9f03dfdce2d42af913fe8d0\", size = 407691, upload-time = \"2025-08-27T12:13:38.94Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/03/36/0a14aebbaa26fe7fab4780c76f2239e76cc95a0090bdb25e31d95c492fcd/rpds_py-0.27.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2efe4eb1d01b7f5f1939f4ef30ecea6c6b3521eec451fb93191bf84b2a522418\", size = 386868, upload-time = \"2025-08-27T12:13:40.192Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3b/03/8c897fb8b5347ff6c1cc31239b9611c5bf79d78c984430887a353e1409a1/rpds_py-0.27.1-cp313-cp313-manylinux_2_31_riscv64.whl\", hash = \"sha256:15d3b4d83582d10c601f481eca29c3f138d44c92187d197aff663a269197c02d\", size = 405469, upload-time = \"2025-08-27T12:13:41.496Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/da/07/88c60edc2df74850d496d78a1fdcdc7b54360a7f610a4d50008309d41b94/rpds_py-0.27.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:4ed2e16abbc982a169d30d1a420274a709949e2cbdef119fe2ec9d870b42f274\", size = 422125, upload-time = \"2025-08-27T12:13:42.802Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/6b/86/5f4c707603e41b05f191a749984f390dabcbc467cf833769b47bf14ba04f/rpds_py-0.27.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:a75f305c9b013289121ec0f1181931975df78738cdf650093e6b86d74aa7d8dd\", size = 562341, upload-time = \"2025-08-27T12:13:44.472Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b2/92/3c0cb2492094e3cd9baf9e49bbb7befeceb584ea0c1a8b5939dca4da12e5/rpds_py-0.27.1-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:67ce7620704745881a3d4b0ada80ab4d99df390838839921f99e63c474f82cf2\", size = 592511, upload-time = \"2025-08-27T12:13:45.898Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/10/bb/82e64fbb0047c46a168faa28d0d45a7851cd0582f850b966811d30f67ad8/rpds_py-0.27.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:9d992ac10eb86d9b6f369647b6a3f412fc0075cfd5d799530e84d335e440a002\", size = 557736, upload-time = \"2025-08-27T12:13:47.408Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/00/95/3c863973d409210da7fb41958172c6b7dbe7fc34e04d3cc1f10bb85e979f/rpds_py-0.27.1-cp313-cp313-win32.whl\", hash = \"sha256:4f75e4bd8ab8db624e02c8e2fc4063021b58becdbe6df793a8111d9343aec1e3\", size = 221462, upload-time = \"2025-08-27T12:13:48.742Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ce/2c/5867b14a81dc217b56d95a9f2a40fdbc56a1ab0181b80132beeecbd4b2d6/rpds_py-0.27.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:f9025faafc62ed0b75a53e541895ca272815bec18abe2249ff6501c8f2e12b83\", size = 232034, upload-time = \"2025-08-27T12:13:50.11Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c7/78/3958f3f018c01923823f1e47f1cc338e398814b92d83cd278364446fac66/rpds_py-0.27.1-cp313-cp313-win_arm64.whl\", hash = \"sha256:ed10dc32829e7d222b7d3b93136d25a406ba9788f6a7ebf6809092da1f4d279d\", size = 222392, upload-time = \"2025-08-27T12:13:52.587Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/01/76/1cdf1f91aed5c3a7bf2eba1f1c4e4d6f57832d73003919a20118870ea659/rpds_py-0.27.1-cp313-cp313t-macosx_10_12_x86_64.whl\", hash = \"sha256:92022bbbad0d4426e616815b16bc4127f83c9a74940e1ccf3cfe0b387aba0228\", size = 358355, upload-time = \"2025-08-27T12:13:54.012Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c3/6f/bf142541229374287604caf3bb2a4ae17f0a580798fd72d3b009b532db4e/rpds_py-0.27.1-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:47162fdab9407ec3f160805ac3e154df042e577dd53341745fc7fb3f625e6d92\", size = 342138, upload-time = \"2025-08-27T12:13:55.791Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1a/77/355b1c041d6be40886c44ff5e798b4e2769e497b790f0f7fd1e78d17e9a8/rpds_py-0.27.1-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:fb89bec23fddc489e5d78b550a7b773557c9ab58b7946154a10a6f7a214a48b2\", size = 380247, upload-time = \"2025-08-27T12:13:57.683Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d6/a4/d9cef5c3946ea271ce2243c51481971cd6e34f21925af2783dd17b26e815/rpds_py-0.27.1-cp313-cp313t-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:e48af21883ded2b3e9eb48cb7880ad8598b31ab752ff3be6457001d78f416723\", size = 390699, upload-time = \"2025-08-27T12:13:59.137Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3a/06/005106a7b8c6c1a7e91b73169e49870f4af5256119d34a361ae5240a0c1d/rpds_py-0.27.1-cp313-cp313t-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:6f5b7bd8e219ed50299e58551a410b64daafb5017d54bbe822e003856f06a802\", size = 521852, upload-time = \"2025-08-27T12:14:00.583Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e5/3e/50fb1dac0948e17a02eb05c24510a8fe12d5ce8561c6b7b7d1339ab7ab9c/rpds_py-0.27.1-cp313-cp313t-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:08f1e20bccf73b08d12d804d6e1c22ca5530e71659e6673bce31a6bb71c1e73f\", size = 402582, upload-time = \"2025-08-27T12:14:02.034Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/cb/b0/f4e224090dc5b0ec15f31a02d746ab24101dd430847c4d99123798661bfc/rpds_py-0.27.1-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0dc5dceeaefcc96dc192e3a80bbe1d6c410c469e97bdd47494a7d930987f18b2\", size = 384126, upload-time = \"2025-08-27T12:14:03.437Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/54/77/ac339d5f82b6afff1df8f0fe0d2145cc827992cb5f8eeb90fc9f31ef7a63/rpds_py-0.27.1-cp313-cp313t-manylinux_2_31_riscv64.whl\", hash = \"sha256:d76f9cc8665acdc0c9177043746775aa7babbf479b5520b78ae4002d889f5c21\", size = 399486, upload-time = \"2025-08-27T12:14:05.443Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d6/29/3e1c255eee6ac358c056a57d6d6869baa00a62fa32eea5ee0632039c50a3/rpds_py-0.27.1-cp313-cp313t-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:134fae0e36022edad8290a6661edf40c023562964efea0cc0ec7f5d392d2aaef\", size = 414832, upload-time = \"2025-08-27T12:14:06.902Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3f/db/6d498b844342deb3fa1d030598db93937a9964fcf5cb4da4feb5f17be34b/rpds_py-0.27.1-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:eb11a4f1b2b63337cfd3b4d110af778a59aae51c81d195768e353d8b52f88081\", size = 557249, upload-time = \"2025-08-27T12:14:08.37Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/60/f3/690dd38e2310b6f68858a331399b4d6dbb9132c3e8ef8b4333b96caf403d/rpds_py-0.27.1-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:13e608ac9f50a0ed4faec0e90ece76ae33b34c0e8656e3dceb9a7db994c692cd\", size = 587356, upload-time = \"2025-08-27T12:14:10.034Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/86/e3/84507781cccd0145f35b1dc32c72675200c5ce8d5b30f813e49424ef68fc/rpds_py-0.27.1-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:dd2135527aa40f061350c3f8f89da2644de26cd73e4de458e79606384f4f68e7\", size = 555300, upload-time = \"2025-08-27T12:14:11.783Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e5/ee/375469849e6b429b3516206b4580a79e9ef3eb12920ddbd4492b56eaacbe/rpds_py-0.27.1-cp313-cp313t-win32.whl\", hash = \"sha256:3020724ade63fe320a972e2ffd93b5623227e684315adce194941167fee02688\", size = 216714, upload-time = \"2025-08-27T12:14:13.629Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/21/87/3fc94e47c9bd0742660e84706c311a860dcae4374cf4a03c477e23ce605a/rpds_py-0.27.1-cp313-cp313t-win_amd64.whl\", hash = \"sha256:8ee50c3e41739886606388ba3ab3ee2aae9f35fb23f833091833255a31740797\", size = 228943, upload-time = \"2025-08-27T12:14:14.937Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/70/36/b6e6066520a07cf029d385de869729a895917b411e777ab1cde878100a1d/rpds_py-0.27.1-cp314-cp314-macosx_10_12_x86_64.whl\", hash = \"sha256:acb9aafccaae278f449d9c713b64a9e68662e7799dbd5859e2c6b3c67b56d334\", size = 362472, upload-time = \"2025-08-27T12:14:16.333Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/af/07/b4646032e0dcec0df9c73a3bd52f63bc6c5f9cda992f06bd0e73fe3fbebd/rpds_py-0.27.1-cp314-cp314-macosx_11_0_arm64.whl\", hash = \"sha256:b7fb801aa7f845ddf601c49630deeeccde7ce10065561d92729bfe81bd21fb33\", size = 345676, upload-time = \"2025-08-27T12:14:17.764Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b0/16/2f1003ee5d0af4bcb13c0cf894957984c32a6751ed7206db2aee7379a55e/rpds_py-0.27.1-cp314-cp314-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:fe0dd05afb46597b9a2e11c351e5e4283c741237e7f617ffb3252780cca9336a\", size = 385313, upload-time = \"2025-08-27T12:14:19.829Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/05/cd/7eb6dd7b232e7f2654d03fa07f1414d7dfc980e82ba71e40a7c46fd95484/rpds_py-0.27.1-cp314-cp314-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:b6dfb0e058adb12d8b1d1b25f686e94ffa65d9995a5157afe99743bf7369d62b\", size = 399080, upload-time = \"2025-08-27T12:14:21.531Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/20/51/5829afd5000ec1cb60f304711f02572d619040aa3ec033d8226817d1e571/rpds_py-0.27.1-cp314-cp314-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ed090ccd235f6fa8bb5861684567f0a83e04f52dfc2e5c05f2e4b1309fcf85e7\", size = 523868, upload-time = \"2025-08-27T12:14:23.485Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/05/2c/30eebca20d5db95720ab4d2faec1b5e4c1025c473f703738c371241476a2/rpds_py-0.27.1-cp314-cp314-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:bf876e79763eecf3e7356f157540d6a093cef395b65514f17a356f62af6cc136\", size = 408750, upload-time = \"2025-08-27T12:14:24.924Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/90/1a/cdb5083f043597c4d4276eae4e4c70c55ab5accec078da8611f24575a367/rpds_py-0.27.1-cp314-cp314-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:12ed005216a51b1d6e2b02a7bd31885fe317e45897de81d86dcce7d74618ffff\", size = 387688, upload-time = \"2025-08-27T12:14:27.537Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/7c/92/cf786a15320e173f945d205ab31585cc43969743bb1a48b6888f7a2b0a2d/rpds_py-0.27.1-cp314-cp314-manylinux_2_31_riscv64.whl\", hash = \"sha256:ee4308f409a40e50593c7e3bb8cbe0b4d4c66d1674a316324f0c2f5383b486f9\", size = 407225, upload-time = \"2025-08-27T12:14:28.981Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/33/5c/85ee16df5b65063ef26017bef33096557a4c83fbe56218ac7cd8c235f16d/rpds_py-0.27.1-cp314-cp314-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:0b08d152555acf1f455154d498ca855618c1378ec810646fcd7c76416ac6dc60\", size = 423361, upload-time = \"2025-08-27T12:14:30.469Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/4b/8e/1c2741307fcabd1a334ecf008e92c4f47bb6f848712cf15c923becfe82bb/rpds_py-0.27.1-cp314-cp314-musllinux_1_2_aarch64.whl\", hash = \"sha256:dce51c828941973a5684d458214d3a36fcd28da3e1875d659388f4f9f12cc33e\", size = 562493, upload-time = \"2025-08-27T12:14:31.987Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/04/03/5159321baae9b2222442a70c1f988cbbd66b9be0675dd3936461269be360/rpds_py-0.27.1-cp314-cp314-musllinux_1_2_i686.whl\", hash = \"sha256:c1476d6f29eb81aa4151c9a31219b03f1f798dc43d8af1250a870735516a1212\", size = 592623, upload-time = \"2025-08-27T12:14:33.543Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ff/39/c09fd1ad28b85bc1d4554a8710233c9f4cefd03d7717a1b8fbfd171d1167/rpds_py-0.27.1-cp314-cp314-musllinux_1_2_x86_64.whl\", hash = \"sha256:3ce0cac322b0d69b63c9cdb895ee1b65805ec9ffad37639f291dd79467bee675\", size = 558800, upload-time = \"2025-08-27T12:14:35.436Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c5/d6/99228e6bbcf4baa764b18258f519a9035131d91b538d4e0e294313462a98/rpds_py-0.27.1-cp314-cp314-win32.whl\", hash = \"sha256:dfbfac137d2a3d0725758cd141f878bf4329ba25e34979797c89474a89a8a3a3\", size = 221943, upload-time = \"2025-08-27T12:14:36.898Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/be/07/c802bc6b8e95be83b79bdf23d1aa61d68324cb1006e245d6c58e959e314d/rpds_py-0.27.1-cp314-cp314-win_amd64.whl\", hash = \"sha256:a6e57b0abfe7cc513450fcf529eb486b6e4d3f8aee83e92eb5f1ef848218d456\", size = 233739, upload-time = \"2025-08-27T12:14:38.386Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c8/89/3e1b1c16d4c2d547c5717377a8df99aee8099ff050f87c45cb4d5fa70891/rpds_py-0.27.1-cp314-cp314-win_arm64.whl\", hash = \"sha256:faf8d146f3d476abfee026c4ae3bdd9ca14236ae4e4c310cbd1cf75ba33d24a3\", size = 223120, upload-time = \"2025-08-27T12:14:39.82Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/62/7e/dc7931dc2fa4a6e46b2a4fa744a9fe5c548efd70e0ba74f40b39fa4a8c10/rpds_py-0.27.1-cp314-cp314t-macosx_10_12_x86_64.whl\", hash = \"sha256:ba81d2b56b6d4911ce735aad0a1d4495e808b8ee4dc58715998741a26874e7c2\", size = 358944, upload-time = \"2025-08-27T12:14:41.199Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e6/22/4af76ac4e9f336bfb1a5f240d18a33c6b2fcaadb7472ac7680576512b49a/rpds_py-0.27.1-cp314-cp314t-macosx_11_0_arm64.whl\", hash = \"sha256:84f7d509870098de0e864cad0102711c1e24e9b1a50ee713b65928adb22269e4\", size = 342283, upload-time = \"2025-08-27T12:14:42.699Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1c/15/2a7c619b3c2272ea9feb9ade67a45c40b3eeb500d503ad4c28c395dc51b4/rpds_py-0.27.1-cp314-cp314t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a9e960fc78fecd1100539f14132425e1d5fe44ecb9239f8f27f079962021523e\", size = 380320, upload-time = \"2025-08-27T12:14:44.157Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a2/7d/4c6d243ba4a3057e994bb5bedd01b5c963c12fe38dde707a52acdb3849e7/rpds_py-0.27.1-cp314-cp314t-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:62f85b665cedab1a503747617393573995dac4600ff51869d69ad2f39eb5e817\", size = 391760, upload-time = \"2025-08-27T12:14:45.845Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b4/71/b19401a909b83bcd67f90221330bc1ef11bc486fe4e04c24388d28a618ae/rpds_py-0.27.1-cp314-cp314t-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:fed467af29776f6556250c9ed85ea5a4dd121ab56a5f8b206e3e7a4c551e48ec\", size = 522476, upload-time = \"2025-08-27T12:14:47.364Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e4/44/1a3b9715c0455d2e2f0f6df5ee6d6f5afdc423d0773a8a682ed2b43c566c/rpds_py-0.27.1-cp314-cp314t-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f2729615f9d430af0ae6b36cf042cb55c0936408d543fb691e1a9e36648fd35a\", size = 403418, upload-time = \"2025-08-27T12:14:49.991Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1c/4b/fb6c4f14984eb56673bc868a66536f53417ddb13ed44b391998100a06a96/rpds_py-0.27.1-cp314-cp314t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1b207d881a9aef7ba753d69c123a35d96ca7cb808056998f6b9e8747321f03b8\", size = 384771, upload-time = \"2025-08-27T12:14:52.159Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c0/56/d5265d2d28b7420d7b4d4d85cad8ef891760f5135102e60d5c970b976e41/rpds_py-0.27.1-cp314-cp314t-manylinux_2_31_riscv64.whl\", hash = \"sha256:639fd5efec029f99b79ae47e5d7e00ad8a773da899b6309f6786ecaf22948c48\", size = 400022, upload-time = \"2025-08-27T12:14:53.859Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8f/e9/9f5fc70164a569bdd6ed9046486c3568d6926e3a49bdefeeccfb18655875/rpds_py-0.27.1-cp314-cp314t-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:fecc80cb2a90e28af8a9b366edacf33d7a91cbfe4c2c4544ea1246e949cfebeb\", size = 416787, upload-time = \"2025-08-27T12:14:55.673Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d4/64/56dd03430ba491db943a81dcdef115a985aac5f44f565cd39a00c766d45c/rpds_py-0.27.1-cp314-cp314t-musllinux_1_2_aarch64.whl\", hash = \"sha256:42a89282d711711d0a62d6f57d81aa43a1368686c45bc1c46b7f079d55692734\", size = 557538, upload-time = \"2025-08-27T12:14:57.245Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3f/36/92cc885a3129993b1d963a2a42ecf64e6a8e129d2c7cc980dbeba84e55fb/rpds_py-0.27.1-cp314-cp314t-musllinux_1_2_i686.whl\", hash = \"sha256:cf9931f14223de59551ab9d38ed18d92f14f055a5f78c1d8ad6493f735021bbb\", size = 588512, upload-time = \"2025-08-27T12:14:58.728Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/dd/10/6b283707780a81919f71625351182b4f98932ac89a09023cb61865136244/rpds_py-0.27.1-cp314-cp314t-musllinux_1_2_x86_64.whl\", hash = \"sha256:f39f58a27cc6e59f432b568ed8429c7e1641324fbe38131de852cd77b2d534b0\", size = 555813, upload-time = \"2025-08-27T12:15:00.334Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/04/2e/30b5ea18c01379da6272a92825dd7e53dc9d15c88a19e97932d35d430ef7/rpds_py-0.27.1-cp314-cp314t-win32.whl\", hash = \"sha256:d5fa0ee122dc09e23607a28e6d7b150da16c662e66409bbe85230e4c85bb528a\", size = 217385, upload-time = \"2025-08-27T12:15:01.937Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/32/7d/97119da51cb1dd3f2f3c0805f155a3aa4a95fa44fe7d78ae15e69edf4f34/rpds_py-0.27.1-cp314-cp314t-win_amd64.whl\", hash = \"sha256:6567d2bb951e21232c2f660c24cf3470bb96de56cdcb3f071a83feeaff8a2772\", size = 230097, upload-time = \"2025-08-27T12:15:03.961Z\" },\n+]\n+\n+[[package]]\n+name = \"sniffio\"\n+version = \"1.3.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/a2/87/a6771e1546d97e7e041b6ae58d80074f81b7d5121207425c964ddf5cfdbd/sniffio-1.3.1.tar.gz\", hash = \"sha256:f4324edc670a0f49750a81b895f35c3adb843cca46f0530f79fc1babb23789dc\", size = 20372, upload-time = \"2024-02-25T23:20:04.057Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/e9/44/75a9c9421471a6c4805dbf2356f7c181a29c1879239abab1ea2cc8f38b40/sniffio-1.3.1-py3-none-any.whl\", hash = \"sha256:2f6da418d1f1e0fddd844478f41680e794e6051915791a034ff65e5f100525a2\", size = 10235, upload-time = \"2024-02-25T23:20:01.196Z\" },\n+]\n+\n+[[package]]\n+name = \"sqlalchemy\"\n+version = \"2.0.43\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"greenlet\", marker = \"(python_full_version \u003c '3.14' and platform_machine == 'AMD64') or (python_full_version \u003c '3.14' and platform_machine == 'WIN32') or (python_full_version \u003c '3.14' and platform_machine == 'aarch64') or (python_full_version \u003c '3.14' and platform_machine == 'amd64') or (python_full_version \u003c '3.14' and platform_machine == 'ppc64le') or (python_full_version \u003c '3.14' and platform_machine == 'win32') or (python_full_version \u003c '3.14' and platform_machine == 'x86_64')\" },\n+    { name = \"typing-extensions\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/d7/bc/d59b5d97d27229b0e009bd9098cd81af71c2fa5549c580a0a67b9bed0496/sqlalchemy-2.0.43.tar.gz\", hash = \"sha256:788bfcef6787a7764169cfe9859fe425bf44559619e1d9f56f5bddf2ebf6f417\", size = 9762949, upload-time = \"2025-08-11T14:24:58.438Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/41/1c/a7260bd47a6fae7e03768bf66451437b36451143f36b285522b865987ced/sqlalchemy-2.0.43-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:e7c08f57f75a2bb62d7ee80a89686a5e5669f199235c6d1dac75cd59374091c3\", size = 2130598, upload-time = \"2025-08-11T15:51:15.903Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8e/84/8a337454e82388283830b3586ad7847aa9c76fdd4f1df09cdd1f94591873/sqlalchemy-2.0.43-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:14111d22c29efad445cd5021a70a8b42f7d9152d8ba7f73304c4d82460946aaa\", size = 2118415, upload-time = \"2025-08-11T15:51:17.256Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/cf/ff/22ab2328148492c4d71899d62a0e65370ea66c877aea017a244a35733685/sqlalchemy-2.0.43-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:21b27b56eb2f82653168cefe6cb8e970cdaf4f3a6cb2c5e3c3c1cf3158968ff9\", size = 3248707, upload-time = \"2025-08-11T15:52:38.444Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/dc/29/11ae2c2b981de60187f7cbc84277d9d21f101093d1b2e945c63774477aba/sqlalchemy-2.0.43-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9c5a9da957c56e43d72126a3f5845603da00e0293720b03bde0aacffcf2dc04f\", size = 3253602, upload-time = \"2025-08-11T15:56:37.348Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b8/61/987b6c23b12c56d2be451bc70900f67dd7d989d52b1ee64f239cf19aec69/sqlalchemy-2.0.43-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:5d79f9fdc9584ec83d1b3c75e9f4595c49017f5594fee1a2217117647225d738\", size = 3183248, upload-time = \"2025-08-11T15:52:39.865Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/86/85/29d216002d4593c2ce1c0ec2cec46dda77bfbcd221e24caa6e85eff53d89/sqlalchemy-2.0.43-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:9df7126fd9db49e3a5a3999442cc67e9ee8971f3cb9644250107d7296cb2a164\", size = 3219363, upload-time = \"2025-08-11T15:56:39.11Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b6/e4/bd78b01919c524f190b4905d47e7630bf4130b9f48fd971ae1c6225b6f6a/sqlalchemy-2.0.43-cp313-cp313-win32.whl\", hash = \"sha256:7f1ac7828857fcedb0361b48b9ac4821469f7694089d15550bbcf9ab22564a1d\", size = 2096718, upload-time = \"2025-08-11T15:55:05.349Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ac/a5/ca2f07a2a201f9497de1928f787926613db6307992fe5cda97624eb07c2f/sqlalchemy-2.0.43-cp313-cp313-win_amd64.whl\", hash = \"sha256:971ba928fcde01869361f504fcff3b7143b47d30de188b11c6357c0505824197\", size = 2123200, upload-time = \"2025-08-11T15:55:07.932Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b8/d9/13bdde6521f322861fab67473cec4b1cc8999f3871953531cf61945fad92/sqlalchemy-2.0.43-py3-none-any.whl\", hash = \"sha256:1681c21dd2ccee222c2fe0bef671d1aef7c504087c9c4e800371cfcc8ac966fc\", size = 1924759, upload-time = \"2025-08-11T15:39:53.024Z\" },\n+]\n+\n+[[package]]\n+name = \"sse-starlette\"\n+version = \"3.0.2\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"anyio\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/42/6f/22ed6e33f8a9e76ca0a412405f31abb844b779d52c5f96660766edcd737c/sse_starlette-3.0.2.tar.gz\", hash = \"sha256:ccd60b5765ebb3584d0de2d7a6e4f745672581de4f5005ab31c3a25d10b52b3a\", size = 20985, upload-time = \"2025-07-27T09:07:44.565Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/ef/10/c78f463b4ef22eef8491f218f692be838282cd65480f6e423d7730dfd1fb/sse_starlette-3.0.2-py3-none-any.whl\", hash = \"sha256:16b7cbfddbcd4eaca11f7b586f3b8a080f1afe952c15813455b162edea619e5a\", size = 11297, upload-time = \"2025-07-27T09:07:43.268Z\" },\n+]\n+\n+[[package]]\n+name = \"starlette\"\n+version = \"0.47.3\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"anyio\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/15/b9/cc3017f9a9c9b6e27c5106cc10cc7904653c3eec0729793aec10479dd669/starlette-0.47.3.tar.gz\", hash = \"sha256:6bc94f839cc176c4858894f1f8908f0ab79dfec1a6b8402f6da9be26ebea52e9\", size = 2584144, upload-time = \"2025-08-24T13:36:42.122Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/ce/fd/901cfa59aaa5b30a99e16876f11abe38b59a1a2c51ffb3d7142bb6089069/starlette-0.47.3-py3-none-any.whl\", hash = \"sha256:89c0778ca62a76b826101e7c709e70680a1699ca7da6b44d38eb0a7e61fe4b51\", size = 72991, upload-time = \"2025-08-24T13:36:40.887Z\" },\n+]\n+\n+[[package]]\n+name = \"tavily-python\"\n+version = \"0.7.11\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"httpx\" },\n+    { name = \"requests\" },\n+    { name = \"tiktoken\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/bb/a4/2b816cbb287c6417e7997195a2b8ce32200ea2acc7099fba1ddf37d0d051/tavily_python-0.7.11.tar.gz\", hash = \"sha256:58c3ab71bb62820ade5498acc17bc372f436e88151389912672add6bf6d31aed\", size = 19278, upload-time = \"2025-08-18T23:56:57.899Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/85/53/371a39e17f02e3df8ab3493c77453b0f8f0d2783bd23d6e0fc879d211217/tavily_python-0.7.11-py3-none-any.whl\", hash = \"sha256:50559d8b605b6854fd85b1b785c603851b86eb4d0e9fd29154f81b54b734dd6e\", size = 15826, upload-time = \"2025-08-18T23:56:52.203Z\" },\n+]\n+\n+[[package]]\n+name = \"tenacity\"\n+version = \"9.1.2\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/0a/d4/2b0cd0fe285e14b36db076e78c93766ff1d529d70408bd1d2a5a84f1d929/tenacity-9.1.2.tar.gz\", hash = \"sha256:1169d376c297e7de388d18b4481760d478b0e99a777cad3a9c86e556f4b697cb\", size = 48036, upload-time = \"2025-04-02T08:25:09.966Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/e5/30/643397144bfbfec6f6ef821f36f33e57d35946c44a2352d3c9f0ae847619/tenacity-9.1.2-py3-none-any.whl\", hash = \"sha256:f77bf36710d8b73a50b2dd155c97b870017ad21afe6ab300326b0371b3b05138\", size = 28248, upload-time = \"2025-04-02T08:25:07.678Z\" },\n+]\n+\n+[[package]]\n+name = \"threat-detect\"\n+version = \"0.1.0\"\n+source = { virtual = \".\" }\n+dependencies = [\n+    { name = \"fastapi\" },\n+    { name = \"langchain\" },\n+    { name = \"langchain-core\" },\n+    { name = \"langchain-groq\" },\n+    { name = \"langchain-mcp-adapters\" },\n+    { name = \"langchain-openai\" },\n+    { name = \"langgraph\" },\n+    { name = \"nest-asyncio\" },\n+    { name = \"pydantic\" },\n+    { name = \"python-dotenv\" },\n+    { name = \"requests\" },\n+    { name = \"tavily-python\" },\n+    { name = \"typing-extensions\" },\n+    { name = \"uvicorn\", extra = [\"standard\"] },\n+]\n+\n+[package.metadata]\n+requires-dist = [\n+    { name = \"fastapi\", specifier = \"\u003e=0.116.1\" },\n+    { name = \"langchain\", specifier = \"\u003e=0.3.27\" },\n+    { name = \"langchain-core\", specifier = \"\u003e=0.3.75\" },\n+    { name = \"langchain-groq\", specifier = \"\u003e=0.3.7\" },\n+    { name = \"langchain-mcp-adapters\", specifier = \"\u003e=0.1.9\" },\n+    { name = \"langchain-openai\", specifier = \"\u003e=0.3.32\" },\n+    { name = \"langgraph\", specifier = \"\u003e=0.6.6\" },\n+    { name = \"nest-asyncio\", specifier = \"\u003e=1.6.0\" },\n+    { name = \"pydantic\", specifier = \"\u003e=2.11.7\" },\n+    { name = \"python-dotenv\", specifier = \"\u003e=1.1.1\" },\n+    { name = \"requests\", specifier = \"\u003e=2.32.5\" },\n+    { name = \"tavily-python\", specifier = \"\u003e=0.7.11\" },\n+    { name = \"typing-extensions\", specifier = \"\u003e=4.15.0\" },\n+    { name = \"uvicorn\", extras = [\"standard\"], specifier = \"\u003e=0.35.0\" },\n+]\n+\n+[[package]]\n+name = \"tiktoken\"\n+version = \"0.11.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"regex\" },\n+    { name = \"requests\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/a7/86/ad0155a37c4f310935d5ac0b1ccf9bdb635dcb906e0a9a26b616dd55825a/tiktoken-0.11.0.tar.gz\", hash = \"sha256:3c518641aee1c52247c2b97e74d8d07d780092af79d5911a6ab5e79359d9b06a\", size = 37648, upload-time = \"2025-08-08T23:58:08.495Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/cc/cd/a9034bcee638716d9310443818d73c6387a6a96db93cbcb0819b77f5b206/tiktoken-0.11.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:a5f3f25ffb152ee7fec78e90a5e5ea5b03b4ea240beed03305615847f7a6ace2\", size = 1055339, upload-time = \"2025-08-08T23:57:51.802Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/f1/91/9922b345f611b4e92581f234e64e9661e1c524875c8eadd513c4b2088472/tiktoken-0.11.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:7dc6e9ad16a2a75b4c4be7208055a1f707c9510541d94d9cc31f7fbdc8db41d8\", size = 997080, upload-time = \"2025-08-08T23:57:53.442Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d0/9d/49cd047c71336bc4b4af460ac213ec1c457da67712bde59b892e84f1859f/tiktoken-0.11.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5a0517634d67a8a48fd4a4ad73930c3022629a85a217d256a6e9b8b47439d1e4\", size = 1128501, upload-time = \"2025-08-08T23:57:54.808Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/52/d5/a0dcdb40dd2ea357e83cb36258967f0ae96f5dd40c722d6e382ceee6bba9/tiktoken-0.11.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7fb4effe60574675118b73c6fbfd3b5868e5d7a1f570d6cc0d18724b09ecf318\", size = 1182743, upload-time = \"2025-08-08T23:57:56.307Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3b/17/a0fc51aefb66b7b5261ca1314afa83df0106b033f783f9a7bcbe8e741494/tiktoken-0.11.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:94f984c9831fd32688aef4348803b0905d4ae9c432303087bae370dc1381a2b8\", size = 1244057, upload-time = \"2025-08-08T23:57:57.628Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/50/79/bcf350609f3a10f09fe4fc207f132085e497fdd3612f3925ab24d86a0ca0/tiktoken-0.11.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:2177ffda31dec4023356a441793fed82f7af5291120751dee4d696414f54db0c\", size = 883901, upload-time = \"2025-08-08T23:57:59.359Z\" },\n+]\n+\n+[[package]]\n+name = \"tqdm\"\n+version = \"4.67.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"colorama\", marker = \"sys_platform == 'win32'\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/a8/4b/29b4ef32e036bb34e4ab51796dd745cdba7ed47ad142a9f4a1eb8e0c744d/tqdm-4.67.1.tar.gz\", hash = \"sha256:f8aef9c52c08c13a65f30ea34f4e5aac3fd1a34959879d7e59e63027286627f2\", size = 169737, upload-time = \"2024-11-24T20:12:22.481Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/d0/30/dc54f88dd4a2b5dc8a0279bdd7270e735851848b762aeb1c1184ed1f6b14/tqdm-4.67.1-py3-none-any.whl\", hash = \"sha256:26445eca388f82e72884e0d580d5464cd801a3ea01e63e5601bdff9ba6a48de2\", size = 78540, upload-time = \"2024-11-24T20:12:19.698Z\" },\n+]\n+\n+[[package]]\n+name = \"typing-extensions\"\n+version = \"4.15.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/72/94/1a15dd82efb362ac84269196e94cf00f187f7ed21c242792a923cdb1c61f/typing_extensions-4.15.0.tar.gz\", hash = \"sha256:0cea48d173cc12fa28ecabc3b837ea3cf6f38c6d1136f85cbaaf598984861466\", size = 109391, upload-time = \"2025-08-25T13:49:26.313Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/18/67/36e9267722cc04a6b9f15c7f3441c2363321a3ea07da7ae0c0707beb2a9c/typing_extensions-4.15.0-py3-none-any.whl\", hash = \"sha256:f0fa19c6845758ab08074a0cfa8b7aecb71c999ca73d62883bc25cc018c4e548\", size = 44614, upload-time = \"2025-08-25T13:49:24.86Z\" },\n+]\n+\n+[[package]]\n+name = \"typing-inspection\"\n+version = \"0.4.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"typing-extensions\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/f8/b1/0c11f5058406b3af7609f121aaa6b609744687f1d158b3c3a5bf4cc94238/typing_inspection-0.4.1.tar.gz\", hash = \"sha256:6ae134cc0203c33377d43188d4064e9b357dba58cff3185f22924610e70a9d28\", size = 75726, upload-time = \"2025-05-21T18:55:23.885Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/17/69/cd203477f944c353c31bade965f880aa1061fd6bf05ded0726ca845b6ff7/typing_inspection-0.4.1-py3-none-any.whl\", hash = \"sha256:389055682238f53b04f7badcb49b989835495a96700ced5dab2d8feae4b26f51\", size = 14552, upload-time = \"2025-05-21T18:55:22.152Z\" },\n+]\n+\n+[[package]]\n+name = \"urllib3\"\n+version = \"2.5.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/15/22/9ee70a2574a4f4599c47dd506532914ce044817c7752a79b6a51286319bc/urllib3-2.5.0.tar.gz\", hash = \"sha256:3fc47733c7e419d4bc3f6b3dc2b4f890bb743906a30d56ba4a5bfa4bbff92760\", size = 393185, upload-time = \"2025-06-18T14:07:41.644Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/a7/c2/fe1e52489ae3122415c51f387e221dd0773709bad6c6cdaa599e8a2c5185/urllib3-2.5.0-py3-none-any.whl\", hash = \"sha256:e6b01673c0fa6a13e374b50871808eb3bf7046c4b125b216f6bf1cc604cff0dc\", size = 129795, upload-time = \"2025-06-18T14:07:40.39Z\" },\n+]\n+\n+[[package]]\n+name = \"uvicorn\"\n+version = \"0.35.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"click\" },\n+    { name = \"h11\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/5e/42/e0e305207bb88c6b8d3061399c6a961ffe5fbb7e2aa63c9234df7259e9cd/uvicorn-0.35.0.tar.gz\", hash = \"sha256:bc662f087f7cf2ce11a1d7fd70b90c9f98ef2e2831556dd078d131b96cc94a01\", size = 78473, upload-time = \"2025-06-28T16:15:46.058Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/d2/e2/dc81b1bd1dcfe91735810265e9d26bc8ec5da45b4c0f6237e286819194c3/uvicorn-0.35.0-py3-none-any.whl\", hash = \"sha256:197535216b25ff9b785e29a0b79199f55222193d47f820816e7da751e9bc8d4a\", size = 66406, upload-time = \"2025-06-28T16:15:44.816Z\" },\n+]\n+\n+[package.optional-dependencies]\n+standard = [\n+    { name = \"colorama\", marker = \"sys_platform == 'win32'\" },\n+    { name = \"httptools\" },\n+    { name = \"python-dotenv\" },\n+    { name = \"pyyaml\" },\n+    { name = \"uvloop\", marker = \"platform_python_implementation != 'PyPy' and sys_platform != 'cygwin' and sys_platform != 'win32'\" },\n+    { name = \"watchfiles\" },\n+    { name = \"websockets\" },\n+]\n+\n+[[package]]\n+name = \"uvloop\"\n+version = \"0.21.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/af/c0/854216d09d33c543f12a44b393c402e89a920b1a0a7dc634c42de91b9cf6/uvloop-0.21.0.tar.gz\", hash = \"sha256:3bf12b0fda68447806a7ad847bfa591613177275d35b6724b1ee573faa3704e3\", size = 2492741, upload-time = \"2024-10-14T23:38:35.489Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/3f/8d/2cbef610ca21539f0f36e2b34da49302029e7c9f09acef0b1c3b5839412b/uvloop-0.21.0-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:bfd55dfcc2a512316e65f16e503e9e450cab148ef11df4e4e679b5e8253a5281\", size = 1468123, upload-time = \"2024-10-14T23:38:00.688Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/93/0d/b0038d5a469f94ed8f2b2fce2434a18396d8fbfb5da85a0a9781ebbdec14/uvloop-0.21.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:787ae31ad8a2856fc4e7c095341cccc7209bd657d0e71ad0dc2ea83c4a6fa8af\", size = 819325, upload-time = \"2024-10-14T23:38:02.309Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/50/94/0a687f39e78c4c1e02e3272c6b2ccdb4e0085fda3b8352fecd0410ccf915/uvloop-0.21.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5ee4d4ef48036ff6e5cfffb09dd192c7a5027153948d85b8da7ff705065bacc6\", size = 4582806, upload-time = \"2024-10-14T23:38:04.711Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d2/19/f5b78616566ea68edd42aacaf645adbf71fbd83fc52281fba555dc27e3f1/uvloop-0.21.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f3df876acd7ec037a3d005b3ab85a7e4110422e4d9c1571d4fc89b0fc41b6816\", size = 4701068, upload-time = \"2024-10-14T23:38:06.385Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/47/57/66f061ee118f413cd22a656de622925097170b9380b30091b78ea0c6ea75/uvloop-0.21.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:bd53ecc9a0f3d87ab847503c2e1552b690362e005ab54e8a48ba97da3924c0dc\", size = 4454428, upload-time = \"2024-10-14T23:38:08.416Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/63/9a/0962b05b308494e3202d3f794a6e85abe471fe3cafdbcf95c2e8c713aabd/uvloop-0.21.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:a5c39f217ab3c663dc699c04cbd50c13813e31d917642d459fdcec07555cc553\", size = 4660018, upload-time = \"2024-10-14T23:38:10.888Z\" },\n+]\n+\n+[[package]]\n+name = \"watchfiles\"\n+version = \"1.1.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"anyio\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/2a/9a/d451fcc97d029f5812e898fd30a53fd8c15c7bbd058fd75cfc6beb9bd761/watchfiles-1.1.0.tar.gz\", hash = \"sha256:693ed7ec72cbfcee399e92c895362b6e66d63dac6b91e2c11ae03d10d503e575\", size = 94406, upload-time = \"2025-06-15T19:06:59.42Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/d3/42/fae874df96595556a9089ade83be34a2e04f0f11eb53a8dbf8a8a5e562b4/watchfiles-1.1.0-cp313-cp313-macosx_10_12_x86_64.whl\", hash = \"sha256:5007f860c7f1f8df471e4e04aaa8c43673429047d63205d1630880f7637bca30\", size = 402004, upload-time = \"2025-06-15T19:05:38.499Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fa/55/a77e533e59c3003d9803c09c44c3651224067cbe7fb5d574ddbaa31e11ca/watchfiles-1.1.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:20ecc8abbd957046f1fe9562757903f5eaf57c3bce70929fda6c7711bb58074a\", size = 393671, upload-time = \"2025-06-15T19:05:39.52Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/05/68/b0afb3f79c8e832e6571022611adbdc36e35a44e14f129ba09709aa4bb7a/watchfiles-1.1.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f2f0498b7d2a3c072766dba3274fe22a183dbea1f99d188f1c6c72209a1063dc\", size = 449772, upload-time = \"2025-06-15T19:05:40.897Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ff/05/46dd1f6879bc40e1e74c6c39a1b9ab9e790bf1f5a2fe6c08b463d9a807f4/watchfiles-1.1.0-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:239736577e848678e13b201bba14e89718f5c2133dfd6b1f7846fa1b58a8532b\", size = 456789, upload-time = \"2025-06-15T19:05:42.045Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8b/ca/0eeb2c06227ca7f12e50a47a3679df0cd1ba487ea19cf844a905920f8e95/watchfiles-1.1.0-cp313-cp313-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:eff4b8d89f444f7e49136dc695599a591ff769300734446c0a86cba2eb2f9895\", size = 482551, upload-time = \"2025-06-15T19:05:43.781Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/31/47/2cecbd8694095647406645f822781008cc524320466ea393f55fe70eed3b/watchfiles-1.1.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:12b0a02a91762c08f7264e2e79542f76870c3040bbc847fb67410ab81474932a\", size = 597420, upload-time = \"2025-06-15T19:05:45.244Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d9/7e/82abc4240e0806846548559d70f0b1a6dfdca75c1b4f9fa62b504ae9b083/watchfiles-1.1.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:29e7bc2eee15cbb339c68445959108803dc14ee0c7b4eea556400131a8de462b\", size = 477950, upload-time = \"2025-06-15T19:05:46.332Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/25/0d/4d564798a49bf5482a4fa9416dea6b6c0733a3b5700cb8a5a503c4b15853/watchfiles-1.1.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d9481174d3ed982e269c090f780122fb59cee6c3796f74efe74e70f7780ed94c\", size = 451706, upload-time = \"2025-06-15T19:05:47.459Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/81/b5/5516cf46b033192d544102ea07c65b6f770f10ed1d0a6d388f5d3874f6e4/watchfiles-1.1.0-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:80f811146831c8c86ab17b640801c25dc0a88c630e855e2bef3568f30434d52b\", size = 625814, upload-time = \"2025-06-15T19:05:48.654Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/0c/dd/7c1331f902f30669ac3e754680b6edb9a0dd06dea5438e61128111fadd2c/watchfiles-1.1.0-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:60022527e71d1d1fda67a33150ee42869042bce3d0fcc9cc49be009a9cded3fb\", size = 622820, upload-time = \"2025-06-15T19:05:50.088Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1b/14/36d7a8e27cd128d7b1009e7715a7c02f6c131be9d4ce1e5c3b73d0e342d8/watchfiles-1.1.0-cp313-cp313-win32.whl\", hash = \"sha256:32d6d4e583593cb8576e129879ea0991660b935177c0f93c6681359b3654bfa9\", size = 279194, upload-time = \"2025-06-15T19:05:51.186Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/25/41/2dd88054b849aa546dbeef5696019c58f8e0774f4d1c42123273304cdb2e/watchfiles-1.1.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:f21af781a4a6fbad54f03c598ab620e3a77032c5878f3d780448421a6e1818c7\", size = 292349, upload-time = \"2025-06-15T19:05:52.201Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c8/cf/421d659de88285eb13941cf11a81f875c176f76a6d99342599be88e08d03/watchfiles-1.1.0-cp313-cp313-win_arm64.whl\", hash = \"sha256:5366164391873ed76bfdf618818c82084c9db7fac82b64a20c44d335eec9ced5\", size = 283836, upload-time = \"2025-06-15T19:05:53.265Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/45/10/6faf6858d527e3599cc50ec9fcae73590fbddc1420bd4fdccfebffeedbc6/watchfiles-1.1.0-cp313-cp313t-macosx_10_12_x86_64.whl\", hash = \"sha256:17ab167cca6339c2b830b744eaf10803d2a5b6683be4d79d8475d88b4a8a4be1\", size = 400343, upload-time = \"2025-06-15T19:05:54.252Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/03/20/5cb7d3966f5e8c718006d0e97dfe379a82f16fecd3caa7810f634412047a/watchfiles-1.1.0-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:328dbc9bff7205c215a7807da7c18dce37da7da718e798356212d22696404339\", size = 392916, upload-time = \"2025-06-15T19:05:55.264Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8c/07/d8f1176328fa9e9581b6f120b017e286d2a2d22ae3f554efd9515c8e1b49/watchfiles-1.1.0-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f7208ab6e009c627b7557ce55c465c98967e8caa8b11833531fdf95799372633\", size = 449582, upload-time = \"2025-06-15T19:05:56.317Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/66/e8/80a14a453cf6038e81d072a86c05276692a1826471fef91df7537dba8b46/watchfiles-1.1.0-cp313-cp313t-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:a8f6f72974a19efead54195bc9bed4d850fc047bb7aa971268fd9a8387c89011\", size = 456752, upload-time = \"2025-06-15T19:05:57.359Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/5a/25/0853b3fe0e3c2f5af9ea60eb2e781eade939760239a72c2d38fc4cc335f6/watchfiles-1.1.0-cp313-cp313t-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d181ef50923c29cf0450c3cd47e2f0557b62218c50b2ab8ce2ecaa02bd97e670\", size = 481436, upload-time = \"2025-06-15T19:05:58.447Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fe/9e/4af0056c258b861fbb29dcb36258de1e2b857be4a9509e6298abcf31e5c9/watchfiles-1.1.0-cp313-cp313t-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:adb4167043d3a78280d5d05ce0ba22055c266cf8655ce942f2fb881262ff3cdf\", size = 596016, upload-time = \"2025-06-15T19:05:59.59Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c5/fa/95d604b58aa375e781daf350897aaaa089cff59d84147e9ccff2447c8294/watchfiles-1.1.0-cp313-cp313t-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:8c5701dc474b041e2934a26d31d39f90fac8a3dee2322b39f7729867f932b1d4\", size = 476727, upload-time = \"2025-06-15T19:06:01.086Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/65/95/fe479b2664f19be4cf5ceeb21be05afd491d95f142e72d26a42f41b7c4f8/watchfiles-1.1.0-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b067915e3c3936966a8607f6fe5487df0c9c4afb85226613b520890049deea20\", size = 451864, upload-time = \"2025-06-15T19:06:02.144Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d3/8a/3c4af14b93a15ce55901cd7a92e1a4701910f1768c78fb30f61d2b79785b/watchfiles-1.1.0-cp313-cp313t-musllinux_1_1_aarch64.whl\", hash = \"sha256:9c733cda03b6d636b4219625a4acb5c6ffb10803338e437fb614fef9516825ef\", size = 625626, upload-time = \"2025-06-15T19:06:03.578Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/da/f5/cf6aa047d4d9e128f4b7cde615236a915673775ef171ff85971d698f3c2c/watchfiles-1.1.0-cp313-cp313t-musllinux_1_1_x86_64.whl\", hash = \"sha256:cc08ef8b90d78bfac66f0def80240b0197008e4852c9f285907377b2947ffdcb\", size = 622744, upload-time = \"2025-06-15T19:06:05.066Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/2c/00/70f75c47f05dea6fd30df90f047765f6fc2d6eb8b5a3921379b0b04defa2/watchfiles-1.1.0-cp314-cp314-macosx_10_12_x86_64.whl\", hash = \"sha256:9974d2f7dc561cce3bb88dfa8eb309dab64c729de85fba32e98d75cf24b66297\", size = 402114, upload-time = \"2025-06-15T19:06:06.186Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/53/03/acd69c48db4a1ed1de26b349d94077cca2238ff98fd64393f3e97484cae6/watchfiles-1.1.0-cp314-cp314-macosx_11_0_arm64.whl\", hash = \"sha256:c68e9f1fcb4d43798ad8814c4c1b61547b014b667216cb754e606bfade587018\", size = 393879, upload-time = \"2025-06-15T19:06:07.369Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/2f/c8/a9a2a6f9c8baa4eceae5887fecd421e1b7ce86802bcfc8b6a942e2add834/watchfiles-1.1.0-cp314-cp314-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:95ab1594377effac17110e1352989bdd7bdfca9ff0e5eeccd8c69c5389b826d0\", size = 450026, upload-time = \"2025-06-15T19:06:08.476Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fe/51/d572260d98388e6e2b967425c985e07d47ee6f62e6455cefb46a6e06eda5/watchfiles-1.1.0-cp314-cp314-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:fba9b62da882c1be1280a7584ec4515d0a6006a94d6e5819730ec2eab60ffe12\", size = 457917, upload-time = \"2025-06-15T19:06:09.988Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c6/2d/4258e52917bf9f12909b6ec314ff9636276f3542f9d3807d143f27309104/watchfiles-1.1.0-cp314-cp314-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:3434e401f3ce0ed6b42569128b3d1e3af773d7ec18751b918b89cd49c14eaafb\", size = 483602, upload-time = \"2025-06-15T19:06:11.088Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/84/99/bee17a5f341a4345fe7b7972a475809af9e528deba056f8963d61ea49f75/watchfiles-1.1.0-cp314-cp314-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:fa257a4d0d21fcbca5b5fcba9dca5a78011cb93c0323fb8855c6d2dfbc76eb77\", size = 596758, upload-time = \"2025-06-15T19:06:12.197Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/40/76/e4bec1d59b25b89d2b0716b41b461ed655a9a53c60dc78ad5771fda5b3e6/watchfiles-1.1.0-cp314-cp314-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:7fd1b3879a578a8ec2076c7961076df540b9af317123f84569f5a9ddee64ce92\", size = 477601, upload-time = \"2025-06-15T19:06:13.391Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1f/fa/a514292956f4a9ce3c567ec0c13cce427c158e9f272062685a8a727d08fc/watchfiles-1.1.0-cp314-cp314-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:62cc7a30eeb0e20ecc5f4bd113cd69dcdb745a07c68c0370cea919f373f65d9e\", size = 451936, upload-time = \"2025-06-15T19:06:14.656Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/32/5d/c3bf927ec3bbeb4566984eba8dd7a8eb69569400f5509904545576741f88/watchfiles-1.1.0-cp314-cp314-musllinux_1_1_aarch64.whl\", hash = \"sha256:891c69e027748b4a73847335d208e374ce54ca3c335907d381fde4e41661b13b\", size = 626243, upload-time = \"2025-06-15T19:06:16.232Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e6/65/6e12c042f1a68c556802a84d54bb06d35577c81e29fba14019562479159c/watchfiles-1.1.0-cp314-cp314-musllinux_1_1_x86_64.whl\", hash = \"sha256:12fe8eaffaf0faa7906895b4f8bb88264035b3f0243275e0bf24af0436b27259\", size = 623073, upload-time = \"2025-06-15T19:06:17.457Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/89/ab/7f79d9bf57329e7cbb0a6fd4c7bd7d0cee1e4a8ef0041459f5409da3506c/watchfiles-1.1.0-cp314-cp314t-macosx_10_12_x86_64.whl\", hash = \"sha256:bfe3c517c283e484843cb2e357dd57ba009cff351edf45fb455b5fbd1f45b15f\", size = 400872, upload-time = \"2025-06-15T19:06:18.57Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/df/d5/3f7bf9912798e9e6c516094db6b8932df53b223660c781ee37607030b6d3/watchfiles-1.1.0-cp314-cp314t-macosx_11_0_arm64.whl\", hash = \"sha256:a9ccbf1f129480ed3044f540c0fdbc4ee556f7175e5ab40fe077ff6baf286d4e\", size = 392877, upload-time = \"2025-06-15T19:06:19.55Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/0d/c5/54ec7601a2798604e01c75294770dbee8150e81c6e471445d7601610b495/watchfiles-1.1.0-cp314-cp314t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ba0e3255b0396cac3cc7bbace76404dd72b5438bf0d8e7cefa2f79a7f3649caa\", size = 449645, upload-time = \"2025-06-15T19:06:20.66Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/0a/04/c2f44afc3b2fce21ca0b7802cbd37ed90a29874f96069ed30a36dfe57c2b/watchfiles-1.1.0-cp314-cp314t-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:4281cd9fce9fc0a9dbf0fc1217f39bf9cf2b4d315d9626ef1d4e87b84699e7e8\", size = 457424, upload-time = \"2025-06-15T19:06:21.712Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/9f/b0/eec32cb6c14d248095261a04f290636da3df3119d4040ef91a4a50b29fa5/watchfiles-1.1.0-cp314-cp314t-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:6d2404af8db1329f9a3c9b79ff63e0ae7131986446901582067d9304ae8aaf7f\", size = 481584, upload-time = \"2025-06-15T19:06:22.777Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d1/e2/ca4bb71c68a937d7145aa25709e4f5d68eb7698a25ce266e84b55d591bbd/watchfiles-1.1.0-cp314-cp314t-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e78b6ed8165996013165eeabd875c5dfc19d41b54f94b40e9fff0eb3193e5e8e\", size = 596675, upload-time = \"2025-06-15T19:06:24.226Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a1/dd/b0e4b7fb5acf783816bc950180a6cd7c6c1d2cf7e9372c0ea634e722712b/watchfiles-1.1.0-cp314-cp314t-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:249590eb75ccc117f488e2fabd1bfa33c580e24b96f00658ad88e38844a040bb\", size = 477363, upload-time = \"2025-06-15T19:06:25.42Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/69/c4/088825b75489cb5b6a761a4542645718893d395d8c530b38734f19da44d2/watchfiles-1.1.0-cp314-cp314t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d05686b5487cfa2e2c28ff1aa370ea3e6c5accfe6435944ddea1e10d93872147\", size = 452240, upload-time = \"2025-06-15T19:06:26.552Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/10/8c/22b074814970eeef43b7c44df98c3e9667c1f7bf5b83e0ff0201b0bd43f9/watchfiles-1.1.0-cp314-cp314t-musllinux_1_1_aarch64.whl\", hash = \"sha256:d0e10e6f8f6dc5762adee7dece33b722282e1f59aa6a55da5d493a97282fedd8\", size = 625607, upload-time = \"2025-06-15T19:06:27.606Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/32/fa/a4f5c2046385492b2273213ef815bf71a0d4c1943b784fb904e184e30201/watchfiles-1.1.0-cp314-cp314t-musllinux_1_1_x86_64.whl\", hash = \"sha256:af06c863f152005c7592df1d6a7009c836a247c9d8adb78fef8575a5a98699db\", size = 623315, upload-time = \"2025-06-15T19:06:29.076Z\" },\n+]\n+\n+[[package]]\n+name = \"websockets\"\n+version = \"15.0.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/21/e6/26d09fab466b7ca9c7737474c52be4f76a40301b08362eb2dbc19dcc16c1/websockets-15.0.1.tar.gz\", hash = \"sha256:82544de02076bafba038ce055ee6412d68da13ab47f0c60cab827346de828dee\", size = 177016, upload-time = \"2025-03-05T20:03:41.606Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/cb/9f/51f0cf64471a9d2b4d0fc6c534f323b664e7095640c34562f5182e5a7195/websockets-15.0.1-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:ee443ef070bb3b6ed74514f5efaa37a252af57c90eb33b956d35c8e9c10a1931\", size = 175440, upload-time = \"2025-03-05T20:02:36.695Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8a/05/aa116ec9943c718905997412c5989f7ed671bc0188ee2ba89520e8765d7b/websockets-15.0.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:5a939de6b7b4e18ca683218320fc67ea886038265fd1ed30173f5ce3f8e85675\", size = 173098, upload-time = \"2025-03-05T20:02:37.985Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ff/0b/33cef55ff24f2d92924923c99926dcce78e7bd922d649467f0eda8368923/websockets-15.0.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:746ee8dba912cd6fc889a8147168991d50ed70447bf18bcda7039f7d2e3d9151\", size = 173329, upload-time = \"2025-03-05T20:02:39.298Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/31/1d/063b25dcc01faa8fada1469bdf769de3768b7044eac9d41f734fd7b6ad6d/websockets-15.0.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:595b6c3969023ecf9041b2936ac3827e4623bfa3ccf007575f04c5a6aa318c22\", size = 183111, upload-time = \"2025-03-05T20:02:40.595Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/93/53/9a87ee494a51bf63e4ec9241c1ccc4f7c2f45fff85d5bde2ff74fcb68b9e/websockets-15.0.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:3c714d2fc58b5ca3e285461a4cc0c9a66bd0e24c5da9911e30158286c9b5be7f\", size = 182054, upload-time = \"2025-03-05T20:02:41.926Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ff/b2/83a6ddf56cdcbad4e3d841fcc55d6ba7d19aeb89c50f24dd7e859ec0805f/websockets-15.0.1-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0f3c1e2ab208db911594ae5b4f79addeb3501604a165019dd221c0bdcabe4db8\", size = 182496, upload-time = \"2025-03-05T20:02:43.304Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/98/41/e7038944ed0abf34c45aa4635ba28136f06052e08fc2168520bb8b25149f/websockets-15.0.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:229cf1d3ca6c1804400b0a9790dc66528e08a6a1feec0d5040e8b9eb14422375\", size = 182829, upload-time = \"2025-03-05T20:02:48.812Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e0/17/de15b6158680c7623c6ef0db361da965ab25d813ae54fcfeae2e5b9ef910/websockets-15.0.1-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:756c56e867a90fb00177d530dca4b097dd753cde348448a1012ed6c5131f8b7d\", size = 182217, upload-time = \"2025-03-05T20:02:50.14Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/33/2b/1f168cb6041853eef0362fb9554c3824367c5560cbdaad89ac40f8c2edfc/websockets-15.0.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:558d023b3df0bffe50a04e710bc87742de35060580a293c2a984299ed83bc4e4\", size = 182195, upload-time = \"2025-03-05T20:02:51.561Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/86/eb/20b6cdf273913d0ad05a6a14aed4b9a85591c18a987a3d47f20fa13dcc47/websockets-15.0.1-cp313-cp313-win32.whl\", hash = \"sha256:ba9e56e8ceeeedb2e080147ba85ffcd5cd0711b89576b83784d8605a7df455fa\", size = 176393, upload-time = \"2025-03-05T20:02:53.814Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1b/6c/c65773d6cab416a64d191d6ee8a8b1c68a09970ea6909d16965d26bfed1e/websockets-15.0.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:e09473f095a819042ecb2ab9465aee615bd9c2028e4ef7d933600a8401c79561\", size = 176837, upload-time = \"2025-03-05T20:02:55.237Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fa/a8/5b41e0da817d64113292ab1f8247140aac61cbf6cfd085d6a0fa77f4984f/websockets-15.0.1-py3-none-any.whl\", hash = \"sha256:f7a866fbc1e97b5c617ee4116daaa09b722101d4a3c170c787450ba409f9736f\", size = 169743, upload-time = \"2025-03-05T20:03:39.41Z\" },\n+]\n+\n+[[package]]\n+name = \"xxhash\"\n+version = \"3.5.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/00/5e/d6e5258d69df8b4ed8c83b6664f2b47d30d2dec551a29ad72a6c69eafd31/xxhash-3.5.0.tar.gz\", hash = \"sha256:84f2caddf951c9cbf8dc2e22a89d4ccf5d86391ac6418fe81e3c67d0cf60b45f\", size = 84241, upload-time = \"2024-08-17T09:20:38.972Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/c9/b8/e4b3ad92d249be5c83fa72916c9091b0965cb0faeff05d9a0a3870ae6bff/xxhash-3.5.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:37889a0d13b0b7d739cfc128b1c902f04e32de17b33d74b637ad42f1c55101f6\", size = 31795, upload-time = \"2024-08-17T09:18:46.813Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fc/d8/b3627a0aebfbfa4c12a41e22af3742cf08c8ea84f5cc3367b5de2d039cce/xxhash-3.5.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:97a662338797c660178e682f3bc180277b9569a59abfb5925e8620fba00b9fc5\", size = 30792, upload-time = \"2024-08-17T09:18:47.862Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c3/cc/762312960691da989c7cd0545cb120ba2a4148741c6ba458aa723c00a3f8/xxhash-3.5.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7f85e0108d51092bdda90672476c7d909c04ada6923c14ff9d913c4f7dc8a3bc\", size = 220950, upload-time = \"2024-08-17T09:18:49.06Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fe/e9/cc266f1042c3c13750e86a535496b58beb12bf8c50a915c336136f6168dc/xxhash-3.5.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:cd2fd827b0ba763ac919440042302315c564fdb797294d86e8cdd4578e3bc7f3\", size = 199980, upload-time = \"2024-08-17T09:18:50.445Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/bf/85/a836cd0dc5cc20376de26b346858d0ac9656f8f730998ca4324921a010b9/xxhash-3.5.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:82085c2abec437abebf457c1d12fccb30cc8b3774a0814872511f0f0562c768c\", size = 428324, upload-time = \"2024-08-17T09:18:51.988Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b4/0e/15c243775342ce840b9ba34aceace06a1148fa1630cd8ca269e3223987f5/xxhash-3.5.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:07fda5de378626e502b42b311b049848c2ef38784d0d67b6f30bb5008642f8eb\", size = 194370, upload-time = \"2024-08-17T09:18:54.164Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/87/a1/b028bb02636dfdc190da01951d0703b3d904301ed0ef6094d948983bef0e/xxhash-3.5.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c279f0d2b34ef15f922b77966640ade58b4ccdfef1c4d94b20f2a364617a493f\", size = 207911, upload-time = \"2024-08-17T09:18:55.509Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/80/d5/73c73b03fc0ac73dacf069fdf6036c9abad82de0a47549e9912c955ab449/xxhash-3.5.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:89e66ceed67b213dec5a773e2f7a9e8c58f64daeb38c7859d8815d2c89f39ad7\", size = 216352, upload-time = \"2024-08-17T09:18:57.073Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b6/2a/5043dba5ddbe35b4fe6ea0a111280ad9c3d4ba477dd0f2d1fe1129bda9d0/xxhash-3.5.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:bcd51708a633410737111e998ceb3b45d3dbc98c0931f743d9bb0a209033a326\", size = 203410, upload-time = \"2024-08-17T09:18:58.54Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a2/b2/9a8ded888b7b190aed75b484eb5c853ddd48aa2896e7b59bbfbce442f0a1/xxhash-3.5.0-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:3ff2c0a34eae7df88c868be53a8dd56fbdf592109e21d4bfa092a27b0bf4a7bf\", size = 210322, upload-time = \"2024-08-17T09:18:59.943Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/98/62/440083fafbc917bf3e4b67c2ade621920dd905517e85631c10aac955c1d2/xxhash-3.5.0-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:4e28503dccc7d32e0b9817aa0cbfc1f45f563b2c995b7a66c4c8a0d232e840c7\", size = 414725, upload-time = \"2024-08-17T09:19:01.332Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/75/db/009206f7076ad60a517e016bb0058381d96a007ce3f79fa91d3010f49cc2/xxhash-3.5.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:a6c50017518329ed65a9e4829154626f008916d36295b6a3ba336e2458824c8c\", size = 192070, upload-time = \"2024-08-17T09:19:03.007Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1f/6d/c61e0668943a034abc3a569cdc5aeae37d686d9da7e39cf2ed621d533e36/xxhash-3.5.0-cp313-cp313-win32.whl\", hash = \"sha256:53a068fe70301ec30d868ece566ac90d873e3bb059cf83c32e76012c889b8637\", size = 30172, upload-time = \"2024-08-17T09:19:04.355Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/96/14/8416dce965f35e3d24722cdf79361ae154fa23e2ab730e5323aa98d7919e/xxhash-3.5.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:80babcc30e7a1a484eab952d76a4f4673ff601f54d5142c26826502740e70b43\", size = 30041, upload-time = \"2024-08-17T09:19:05.435Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/27/ee/518b72faa2073f5aa8e3262408d284892cb79cf2754ba0c3a5870645ef73/xxhash-3.5.0-cp313-cp313-win_arm64.whl\", hash = \"sha256:4811336f1ce11cac89dcbd18f3a25c527c16311709a89313c3acaf771def2d4b\", size = 26801, upload-time = \"2024-08-17T09:19:06.547Z\" },\n+]\n+\n+[[package]]\n+name = \"zstandard\"\n+version = \"0.24.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/09/1b/c20b2ef1d987627765dcd5bf1dadb8ef6564f00a87972635099bb76b7a05/zstandard-0.24.0.tar.gz\", hash = \"sha256:fe3198b81c00032326342d973e526803f183f97aa9e9a98e3f897ebafe21178f\", size = 905681, upload-time = \"2025-08-17T18:36:36.352Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/ec/ef/db949de3bf81ed122b8ee4db6a8d147a136fe070e1015f5a60d8a3966748/zstandard-0.24.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:e4ebb000c0fe24a6d0f3534b6256844d9dbf042fdf003efe5cf40690cf4e0f3e\", size = 795700, upload-time = \"2025-08-17T18:22:50.851Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/99/56/fc04395d6f5eabd2fe6d86c0800d198969f3038385cb918bfbe94f2b0c62/zstandard-0.24.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:498f88f5109666c19531f0243a90d2fdd2252839cd6c8cc6e9213a3446670fa8\", size = 640343, upload-time = \"2025-08-17T18:22:51.999Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/9b/0f/0b0e0d55f2f051d5117a0d62f4f9a8741b3647440c0ee1806b7bd47ed5ae/zstandard-0.24.0-cp313-cp313-manylinux2010_i686.manylinux2014_i686.manylinux_2_12_i686.manylinux_2_17_i686.whl\", hash = \"sha256:0a9e95ceb180ccd12a8b3437bac7e8a8a089c9094e39522900a8917745542184\", size = 5342571, upload-time = \"2025-08-17T18:22:53.734Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/5d/43/d74e49f04fbd62d4b5d89aeb7a29d693fc637c60238f820cd5afe6ca8180/zstandard-0.24.0-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:bcf69e0bcddbf2adcfafc1a7e864edcc204dd8171756d3a8f3340f6f6cc87b7b\", size = 5062723, upload-time = \"2025-08-17T18:22:55.624Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8e/97/df14384d4d6a004388e6ed07ded02933b5c7e0833a9150c57d0abc9545b7/zstandard-0.24.0-cp313-cp313-manylinux2014_ppc64le.manylinux_2_17_ppc64le.whl\", hash = \"sha256:10e284748a7e7fbe2815ca62a9d6e84497d34cfdd0143fa9e8e208efa808d7c4\", size = 5393282, upload-time = \"2025-08-17T18:22:57.655Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/7e/09/8f5c520e59a4d41591b30b7568595eda6fd71c08701bb316d15b7ed0613a/zstandard-0.24.0-cp313-cp313-manylinux2014_s390x.manylinux_2_17_s390x.whl\", hash = \"sha256:1bda8a85e5b9d5e73af2e61b23609a8cc1598c1b3b2473969912979205a1ff25\", size = 5450895, upload-time = \"2025-08-17T18:22:59.749Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d9/3d/02aba892327a67ead8cba160ee835cfa1fc292a9dcb763639e30c07da58b/zstandard-0.24.0-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:1b14bc92af065d0534856bf1b30fc48753163ea673da98857ea4932be62079b1\", size = 5546353, upload-time = \"2025-08-17T18:23:01.457Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/6a/6e/96c52afcde44da6a5313a1f6c356349792079808f12d8b69a7d1d98ef353/zstandard-0.24.0-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:b4f20417a4f511c656762b001ec827500cbee54d1810253c6ca2df2c0a307a5f\", size = 5046404, upload-time = \"2025-08-17T18:23:03.418Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/da/b6/eefee6b92d341a7db7cd1b3885d42d30476a093720fb5c181e35b236d695/zstandard-0.24.0-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:337572a7340e1d92fd7fb5248c8300d0e91071002d92e0b8cabe8d9ae7b58159\", size = 5576095, upload-time = \"2025-08-17T18:23:05.331Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a3/29/743de3131f6239ba6611e17199581e6b5e0f03f268924d42468e29468ca0/zstandard-0.24.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:df4be1cf6e8f0f2bbe2a3eabfff163ef592c84a40e1a20a8d7db7f27cfe08fc2\", size = 4953448, upload-time = \"2025-08-17T18:23:07.225Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c9/11/bd36ef49fba82e307d69d93b5abbdcdc47d6a0bcbc7ffbbfe0ef74c2fec5/zstandard-0.24.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:6885ae4b33aee8835dbdb4249d3dfec09af55e705d74d9b660bfb9da51baaa8b\", size = 5267388, upload-time = \"2025-08-17T18:23:09.127Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c0/23/a4cfe1b871d3f1ce1f88f5c68d7e922e94be0043f3ae5ed58c11578d1e21/zstandard-0.24.0-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:663848a8bac4fdbba27feea2926049fdf7b55ec545d5b9aea096ef21e7f0b079\", size = 5433383, upload-time = \"2025-08-17T18:23:11.343Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/77/26/f3fb85f00e732cca617d4b9cd1ffa6484f613ea07fad872a8bdc3a0ce753/zstandard-0.24.0-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:05d27c953f2e0a3ecc8edbe91d6827736acc4c04d0479672e0400ccdb23d818c\", size = 5813988, upload-time = \"2025-08-17T18:23:13.194Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3d/8c/d7e3b424b73f3ce66e754595cbcb6d94ff49790c9ac37d50e40e8145cd44/zstandard-0.24.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:77b8b7b98893eaf47da03d262816f01f251c2aa059c063ed8a45c50eada123a5\", size = 5359756, upload-time = \"2025-08-17T18:23:15.021Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/90/6c/f1f0e11f1b295138f9da7e7ae22dcd9a1bb96a9544fa3b31507e431288f5/zstandard-0.24.0-cp313-cp313-win32.whl\", hash = \"sha256:cf7fbb4e54136e9a03c7ed7691843c4df6d2ecc854a2541f840665f4f2bb2edd\", size = 435957, upload-time = \"2025-08-17T18:23:18.835Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/9f/03/ab8b82ae5eb49eca4d3662705399c44442666cc1ce45f44f2d263bb1ae31/zstandard-0.24.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:d64899cc0f33a8f446f1e60bffc21fa88b99f0e8208750d9144ea717610a80ce\", size = 505171, upload-time = \"2025-08-17T18:23:16.44Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/db/12/89a2ecdea4bc73a934a30b66a7cfac5af352beac94d46cf289e103b65c34/zstandard-0.24.0-cp313-cp313-win_arm64.whl\", hash = \"sha256:57be3abb4313e0dd625596376bbb607f40059d801d51c1a1da94d7477e63b255\", size = 461596, upload-time = \"2025-08-17T18:23:17.603Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c9/56/f3d2c4d64aacee4aab89e788783636884786b6f8334c819f09bff1aa207b/zstandard-0.24.0-cp314-cp314-macosx_10_13_x86_64.whl\", hash = \"sha256:b7fa260dd2731afd0dfa47881c30239f422d00faee4b8b341d3e597cface1483\", size = 795747, upload-time = \"2025-08-17T18:23:19.968Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/32/2d/9d3e5f6627e4cb5e511803788be1feee2f0c3b94594591e92b81db324253/zstandard-0.24.0-cp314-cp314-macosx_11_0_arm64.whl\", hash = \"sha256:e05d66239d14a04b4717998b736a25494372b1b2409339b04bf42aa4663bf251\", size = 640475, upload-time = \"2025-08-17T18:23:21.5Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/be/5d/48e66abf8c146d95330e5385633a8cfdd556fa8bd14856fe721590cbab2b/zstandard-0.24.0-cp314-cp314-manylinux2010_i686.manylinux2014_i686.manylinux_2_12_i686.manylinux_2_17_i686.whl\", hash = \"sha256:622e1e04bd8a085994e02313ba06fbcf4f9ed9a488c6a77a8dbc0692abab6a38\", size = 5343866, upload-time = \"2025-08-17T18:23:23.351Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/95/6c/65fe7ba71220a551e082e4a52790487f1d6bb8dfc2156883e088f975ad6d/zstandard-0.24.0-cp314-cp314-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:55872e818598319f065e8192ebefecd6ac05f62a43f055ed71884b0a26218f41\", size = 5062719, upload-time = \"2025-08-17T18:23:25.192Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/cb/68/15ed0a813ff91be80cc2a610ac42e0fc8d29daa737de247bbf4bab9429a1/zstandard-0.24.0-cp314-cp314-manylinux2014_ppc64le.manylinux_2_17_ppc64le.whl\", hash = \"sha256:bb2446a55b3a0fd8aa02aa7194bd64740015464a2daaf160d2025204e1d7c282\", size = 5393090, upload-time = \"2025-08-17T18:23:27.145Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d4/89/e560427b74fa2da6a12b8f3af8ee29104fe2bb069a25e7d314c35eec7732/zstandard-0.24.0-cp314-cp314-manylinux2014_s390x.manylinux_2_17_s390x.whl\", hash = \"sha256:2825a3951f945fb2613ded0f517d402b1e5a68e87e0ee65f5bd224a8333a9a46\", size = 5450383, upload-time = \"2025-08-17T18:23:29.044Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a3/95/0498328cbb1693885509f2fc145402b108b750a87a3af65b7250b10bd896/zstandard-0.24.0-cp314-cp314-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:09887301001e7a81a3618156bc1759e48588de24bddfdd5b7a4364da9a8fbc20\", size = 5546142, upload-time = \"2025-08-17T18:23:31.281Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8a/8a/64aa15a726594df3bf5d8decfec14fe20cd788c60890f44fcfc74d98c2cc/zstandard-0.24.0-cp314-cp314-musllinux_1_2_aarch64.whl\", hash = \"sha256:98ca91dc9602cf351497d5600aa66e6d011a38c085a8237b370433fcb53e3409\", size = 4953456, upload-time = \"2025-08-17T18:23:33.234Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b0/b6/e94879c5cd6017af57bcba08519ed1228b1ebb15681efd949f4a00199449/zstandard-0.24.0-cp314-cp314-musllinux_1_2_i686.whl\", hash = \"sha256:e69f8e534b4e254f523e2f9d4732cf9c169c327ca1ce0922682aac9a5ee01155\", size = 5268287, upload-time = \"2025-08-17T18:23:35.145Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fd/e5/1a3b3a93f953dbe9e77e2a19be146e9cd2af31b67b1419d6cc8e8898d409/zstandard-0.24.0-cp314-cp314-musllinux_1_2_ppc64le.whl\", hash = \"sha256:444633b487a711e34f4bccc46a0c5dfbe1aee82c1a511e58cdc16f6bd66f187c\", size = 5433197, upload-time = \"2025-08-17T18:23:36.969Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/39/83/b6eb1e1181de994b29804e1e0d2dc677bece4177f588c71653093cb4f6d5/zstandard-0.24.0-cp314-cp314-musllinux_1_2_s390x.whl\", hash = \"sha256:f7d3fe9e1483171e9183ffdb1fab07c5fef80a9c3840374a38ec2ab869ebae20\", size = 5813161, upload-time = \"2025-08-17T18:23:38.812Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/f6/d3/2fb4166561591e9d75e8e35c79182aa9456644e2f4536f29e51216d1c513/zstandard-0.24.0-cp314-cp314-musllinux_1_2_x86_64.whl\", hash = \"sha256:27b6fa72b57824a3f7901fc9cc4ce1c1c834b28f3a43d1d4254c64c8f11149d4\", size = 5359831, upload-time = \"2025-08-17T18:23:41.162Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/11/94/6a9227315b774f64a67445f62152c69b4e5e49a52a3c7c4dad8520a55e20/zstandard-0.24.0-cp314-cp314-win32.whl\", hash = \"sha256:fdc7a52a4cdaf7293e10813fd6a3abc0c7753660db12a3b864ab1fb5a0c60c16\", size = 444448, upload-time = \"2025-08-17T18:23:45.151Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fc/de/67acaba311013e0798cb96d1a2685cb6edcdfc1cae378b297ea7b02c319f/zstandard-0.24.0-cp314-cp314-win_amd64.whl\", hash = \"sha256:656ed895b28c7e42dd5b40dfcea3217cfc166b6b7eef88c3da2f5fc62484035b\", size = 516075, upload-time = \"2025-08-17T18:23:42.8Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/10/ae/45fd8921263cea0228b20aa31bce47cc66016b2aba1afae1c6adcc3dbb1f/zstandard-0.24.0-cp314-cp314-win_arm64.whl\", hash = \"sha256:0101f835da7de08375f380192ff75135527e46e3f79bef224e3c49cb640fef6a\", size = 476847, upload-time = \"2025-08-17T18:23:43.892Z\" },\n+]\n"
    },
    {
      "file_name": "mcp/vuln_sample.py",
      "status": "A",
      "additions": 91,
      "deletions": 0,
      "diff": "diff --git a/mcp/vuln_sample.py b/mcp/vuln_sample.py\nnew file mode 100644\nindex 0000000..ea4036b\n--- /dev/null\n+++ b/mcp/vuln_sample.py\n@@ -0,0 +1,91 @@\n+import os\r\n+import subprocess\r\n+import sqlite3\r\n+import hashlib\r\n+import yaml\r\n+import pickle\r\n+import requests\r\n+from flask import Flask, request\r\n+\r\n+\r\n+# Hardcoded secret (vulnerability: hardcoded credential)\r\n+API_KEY = \"sk_live_1234567890SECRET\"\r\n+\r\n+\r\n+def run_system_command(user_input: str) -\u003e str:\r\n+    \"\"\"VULN: Command injection via shell=True and unsanitized input.\"\"\"\r\n+    try:\r\n+        out = subprocess.check_output(user_input, shell=True)\r\n+        return out.decode(\"utf-8\", errors=\"ignore\")\r\n+    except Exception as exc:\r\n+        return f\"error: {exc}\"\r\n+\r\n+\r\n+def query_user_by_name(db_path: str, user_name: str):\r\n+    \"\"\"VULN: SQL injection via string formatting instead of parameters.\"\"\"\r\n+    conn = sqlite3.connect(db_path)\r\n+    cur = conn.cursor()\r\n+    sql = f\"SELECT id, name, email FROM users WHERE name = '{user_name}'\"  # nosec\r\n+    cur.execute(sql)\r\n+    rows = cur.fetchall()\r\n+    conn.close()\r\n+    return rows\r\n+\r\n+\r\n+def evaluate_expression(expr: str):\r\n+    \"\"\"VULN: Arbitrary code execution via eval.\"\"\"\r\n+    return eval(expr)  # nosec\r\n+\r\n+\r\n+def parse_yaml_untrusted(yaml_str: str):\r\n+    \"\"\"VULN: Unsafe YAML load allowing arbitrary object construction.\"\"\"\r\n+    return yaml.load(yaml_str)  # nosec\r\n+\r\n+\r\n+def deserialize_untrusted(data: bytes):\r\n+    \"\"\"VULN: Unsafe deserialization with pickle.loads.\"\"\"\r\n+    return pickle.loads(data)  # nosec\r\n+\r\n+\r\n+def weak_password_hash(password: str) -\u003e str:\r\n+    \"\"\"VULN: Weak hashing algorithm (MD5).\"\"\"\r\n+    return hashlib.md5(password.encode()).hexdigest()  # nosec\r\n+\r\n+\r\n+def download_insecure(url: str) -\u003e str:\r\n+    \"\"\"VULN: TLS verification disabled.\"\"\"\r\n+    r = requests.get(url, verify=False)  # nosec\r\n+    return r.text\r\n+\r\n+\r\n+def save_upload(filename: str, content: bytes):\r\n+    \"\"\"VULN: Path traversal by concatenating user-controlled filename.\"\"\"\r\n+    upload_path = os.path.join(\"uploads\", filename)\r\n+    os.makedirs(os.path.dirname(upload_path), exist_ok=True)\r\n+    with open(upload_path, \"wb\") as f:\r\n+        f.write(content)\r\n+    return upload_path\r\n+\r\n+\r\n+# Minimal Flask app with debug enabled (information disclosure)\r\n+app = Flask(__name__)\r\n+app.config[\"SECRET_KEY\"] = \"dev-secret-key\"  # VULN: hardcoded secret\r\n+\r\n+\r\n+@app.route(\"/run\", methods=[\"POST\"])\r\n+def run():\r\n+    cmd = request.form.get(\"cmd\", \"echo hello\")\r\n+    return run_system_command(cmd)\r\n+\r\n+\r\n+@app.route(\"/calc\", methods=[\"POST\"])\r\n+def calc():\r\n+    expr = request.form.get(\"expr\", \"1+1\")\r\n+    return str(evaluate_expression(expr))\r\n+\r\n+\r\n+if __name__ == \"__main__\":\r\n+    # VULN: debug=True should not be used in production\r\n+    app.run(host=\"0.0.0.0\", port=5001, debug=True)\r\n+\r\n+\r\n"
    }
  ],
  "full_diff": " .DS_Store                           |  Bin 0 -\u003e 6148 bytes\n backend/bin/git-hook                |  Bin 10151938 -\u003e 10151938 bytes\n hello.cpp                           |    6 +\n mcp/.env                            |    8 +\n mcp/README.md                       |    0\n mcp/__pycache__/api.cpython-313.pyc |  Bin 0 -\u003e 6632 bytes\n mcp/agent.py                        |  325 ++++++++++\n mcp/api.py                          |  444 +++++++++++++\n mcp/main.py                         |    6 +\n mcp/pyproject.toml                  |   22 +\n mcp/requirements.txt                |   14 +\n mcp/simple_multi_agent.py           |  239 +++++++\n mcp/test_api.py                     |  143 +++++\n mcp/threat-demo                     |    1 +\n mcp/uv.lock                         | 1183 +++++++++++++++++++++++++++++++++++\n mcp/vuln_sample.py                  |   91 +++\n 16 files changed, 2482 insertions(+)\n\ndiff --git a/.DS_Store b/.DS_Store\nnew file mode 100644\nindex 0000000000000000000000000000000000000000..76d6ba91a8191310586b12b46768f1652db1e4f7\nBinary files /dev/null and b/.DS_Store differ\ndiff --git a/backend/bin/git-hook b/backend/bin/git-hook\nindex c3447bcb0fb57b83c25f7d82bc64e59da97a4656..d58fdde7c35f4642f7c0cb04ed59f81f3022d631 100755\nBinary files a/backend/bin/git-hook and b/backend/bin/git-hook differ\ndiff --git a/hello.cpp b/hello.cpp\nnew file mode 100644\nindex 0000000000000000000000000000000000000000..f253cbe41afe163bb3d9777d37984aec781aaeff\n--- /dev/null\n+++ b/hello.cpp\n@@ -0,0 +1,6 @@\n+#include \u003ciostream\u003e\n+\n+int main() {\n+    std::cout \u003c\u003c \"Hello, World!\" \u003c\u003c std::endl;\n+    return 0;\n+}\n\\ No newline at end of file\ndiff --git a/mcp/.env b/mcp/.env\nnew file mode 100644\nindex 0000000000000000000000000000000000000000..00d1eaa4659ea71f0637d4ea48fe5d5d7b2ed060\n--- /dev/null\n+++ b/mcp/.env\n@@ -0,0 +1,8 @@\n+OPENAI_API_KEY = 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\n+LANGSMITH_TRACING=\"true\"\n+LANGSMITH_ENDPOINT=\"https://api.smith.langchain.com\"\n+LANGSMITH_API_KEY=\"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\"\n+LANGSMITH_PROJECT=\"BlogAgent\"\n+\n+GROQ_API_KEY=\"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\"\n+SLACK_WEBHOOK_URL=\"https://hooks.slack.com/services/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\"\n\\ No newline at end of file\ndiff --git a/mcp/README.md b/mcp/README.md\nnew file mode 100644\nindex 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391\ndiff --git a/mcp/__pycache__/api.cpython-313.pyc b/mcp/__pycache__/api.cpython-313.pyc\nnew file mode 100644\nindex 0000000000000000000000000000000000000000..295f73061393cebcc2e55510edac51f6c4b07655\nBinary files /dev/null and b/mcp/__pycache__/api.cpython-313.pyc differ\ndiff --git a/mcp/agent.py b/mcp/agent.py\nnew file mode 100644\nindex 0000000000000000000000000000000000000000..25087fb108a80bb308d2ca65c1f317691b2e4400\n--- /dev/null\n+++ b/mcp/agent.py\n@@ -0,0 +1,325 @@\n+import asyncio\r\n+import os\r\n+import requests\r\n+import json\r\n+from datetime import datetime\r\n+from langchain_mcp_adapters.client import MultiServerMCPClient\r\n+# Corrected import for the chat model\r\n+from langchain_openai import ChatOpenAI\r\n+from langgraph.graph import StateGraph, START, END\r\n+from typing import TypedDict, List\r\n+from typing_extensions import Annotated\r\n+from langgraph.graph.message import add_messages\r\n+from langgraph.prebuilt import ToolNode\r\n+from dotenv import load_dotenv\r\n+\r\n+# Load environment variables from .env file\r\n+load_dotenv()\r\n+\r\n+# Slack integration functions\r\n+async def send_to_slack(message: str, webhook_url: str = None) -\u003e bool:\r\n+    \"\"\"Send security analysis report to Slack\"\"\"\r\n+    if not webhook_url:\r\n+        webhook_url = os.getenv(\"SLACK_WEBHOOK_URL\")\r\n+    \r\n+    if not webhook_url:\r\n+        print(\"‚ö†Ô∏è No Slack webhook URL found. Set SLACK_WEBHOOK_URL in .env file\")\r\n+        return False\r\n+    \r\n+    try:\r\n+        # Format message for Slack\r\n+        slack_payload = {\r\n+            \"text\": \"üîí Security Analysis Report\",\r\n+            \"blocks\": [\r\n+                {\r\n+                    \"type\": \"header\",\r\n+                    \"text\": {\r\n+                        \"type\": \"plain_text\",\r\n+                        \"text\": \"üîí Security Analysis Report\"\r\n+                    }\r\n+                },\r\n+                {\r\n+                    \"type\": \"section\",\r\n+                    \"fields\": [\r\n+                        {\r\n+                            \"type\": \"mrkdwn\",\r\n+                            \"text\": f\"*Timestamp:* {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\"\r\n+                        },\r\n+                        {\r\n+                            \"type\": \"mrkdwn\",\r\n+                            \"text\": f\"*Analysis Type:* Automated Security Scan\"\r\n+                        }\r\n+                    ]\r\n+                },\r\n+                {\r\n+                    \"type\": \"section\",\r\n+                    \"text\": {\r\n+                        \"type\": \"mrkdwn\",\r\n+                        \"text\": f\"```\\n{message}\\n```\"\r\n+                    }\r\n+                }\r\n+            ]\r\n+        }\r\n+        \r\n+        response = requests.post(\r\n+            webhook_url,\r\n+            json=slack_payload,\r\n+            headers={'Content-Type': 'application/json'},\r\n+            timeout=10\r\n+        )\r\n+        \r\n+        if response.status_code == 200:\r\n+            print(\"‚úÖ Security report sent to Slack successfully!\")\r\n+            return True\r\n+        else:\r\n+            print(f\"‚ùå Failed to send to Slack. Status: {response.status_code}\")\r\n+            return False\r\n+            \r\n+    except Exception as e:\r\n+        print(f\"‚ùå Error sending to Slack: {str(e)}\")\r\n+        return False\r\n+\r\n+def format_security_report_for_slack(report_content: str) -\u003e str:\r\n+    \"\"\"Format the security report for better Slack presentation\"\"\"\r\n+    # Truncate if too long for Slack (max 3000 chars for text blocks)\r\n+    if len(report_content) \u003e 2800:\r\n+        report_content = report_content[:2800] + \"\\n...\\n[Report truncated - see full details in logs]\"\r\n+    \r\n+    return report_content\r\n+\r\n+# Define the state for the graph\r\n+# This structure correctly defines how messages and other data will be managed.\r\n+class SecurityAnalysisState(TypedDict):\r\n+    messages: Annotated[List, add_messages]\r\n+    file_queue: List[str]\r\n+    processed_files: List[str]\r\n+    scan_results: List[dict] # Note: This isn't currently being populated, but the field is ready.\r\n+    current_phase: str\r\n+\r\n+async def main():\r\n+    # FIX 1: Correctly initialize the model using the standard LangChain class.\r\n+    # \"gpt-4.1\" is not a valid model name. Using a standard, powerful model like \"gpt-4-turbo\".\r\n+    # Setting temperature to 0 encourages more deterministic, instruction-following behavior.\r\n+    model = ChatOpenAI(model=\"gpt-4o\", temperature=0)\r\n+\r\n+    # Set up the Multi-Server MCP Client\r\n+    # Ensure the path \"E:\\\\Threat_detect\" exists and is accessible.\r\n+    client = MultiServerMCPClient(\r\n+        {\r\n+            \"semgrep\": {\r\n+                \"url\": \"https://mcp.semgrep.ai/mcp\",\r\n+                \"transport\": \"streamable_http\",\r\n+            },\r\n+            \"filesystem\": {\r\n+                \"command\": \"npx\",\r\n+                \"args\": [\r\n+                    \"-y\",\r\n+                    \"@modelcontextprotocol/server-filesystem\",\r\n+                    os.getcwd()  # Using the current working directory for portability\r\n+                ],\r\n+                \"transport\": \"stdio\",\r\n+            }\r\n+        }\r\n+    )\r\n+    \r\n+    # Gracefully load tools, allowing the script to run without them.\r\n+    try:\r\n+        tools = await client.get_tools()\r\n+        print(\"‚úÖ MCP tools loaded successfully.\")\r\n+    except Exception as e:\r\n+        print(f\"‚ö†Ô∏è Warning: MCP tools failed to load ({str(e)}) ‚Äì continuing without tools.\")\r\n+        tools = []\r\n+\r\n+    # Bind the loaded tools to the model.\r\n+    model_with_tools = model.bind_tools(tools) if tools else model\r\n+    tool_node = ToolNode(tools) if tools else None\r\n+\r\n+    # --- Agent Definitions ---\r\n+\r\n+    async def discovery_agent(state: SecurityAnalysisState):\r\n+        \"\"\"Dynamically discovers all files within the 'threat-demo/IaC' subdirectory.\"\"\"\r\n+        print(\"--- DISCOVERY PHASE ---\")\r\n+    \r\n+        # Correctly point to the nested directory\r\n+        target_dir = os.path.join(\"threat-demo\", \"IaC\")\r\n+        discovered_files = []\r\n+    \r\n+        if not os.path.isdir(target_dir):\r\n+            print(f\"‚ö†Ô∏è Error: Directory '{target_dir}' not found. Make sure you are running the script from the correct location.\")\r\n+            return {\r\n+                \"file_queue\": [],\r\n+            }\r\n+\r\n+        # os.walk will find all files in the target directory and its subfolders\r\n+        for root, _, files in os.walk(target_dir):\r\n+            for filename in files:\r\n+                # Create the full relative path (e.g., \"threat-demo/IaC/terraform/main.tf\")\r\n+                full_path = os.path.join(root, filename)\r\n+                discovered_files.append(full_path)\r\n+                \r\n+        if discovered_files:\r\n+            print(f\"‚úÖ Discovered {len(discovered_files)} files to scan: {discovered_files}\")\r\n+        else:\r\n+            print(f\"‚ö†Ô∏è No files found in the '{target_dir}' directory.\")\r\n+\r\n+        return {\r\n+            \"current_phase\": \"processing\",\r\n+            \"file_queue\": discovered_files,\r\n+            \"processed_files\": [],\r\n+            \"scan_results\": []\r\n+        }\r\n+\r\n+    async def file_processor_agent(state: SecurityAnalysisState):\r\n+        \"\"\"Processes one file from the queue, invoking tools to scan it.\"\"\"\r\n+        print(f\"--- PROCESSING PHASE (Queue: {state['file_queue']}) ---\")\r\n+        file_queue = state.get(\"file_queue\", [])\r\n+        \r\n+        if not file_queue:\r\n+            # This case should ideally not be hit due to graph routing, but it's safe to have.\r\n+            return {\"current_phase\": \"reporting\"}\r\n+\r\n+        next_file = file_queue[0]\r\n+        remaining_queue = file_queue[1:]\r\n+        \r\n+        # Dynamically create the prompt based on the file type\r\n+        file_ext = next_file.split('.')[-1].lower()\r\n+        if file_ext in ['tf', 'tfvars']:\r\n+            config = 'p/terraform'\r\n+        elif file_ext in ['yml', 'yaml'] and 'k8s' in next_file.lower():\r\n+            config = 'p/kubernetes'\r\n+        elif 'dockerfile' in next_file.lower():\r\n+            config = 'p/docker'\r\n+        else:\r\n+            # Default to a generic, fast scan for other file types\r\n+            config = 'p/default'\r\n+\r\n+        scan_instruction = f\"\"\"\r\n+        You MUST perform a security scan on the file: `{next_file}`.\r\n+        \r\n+        Follow these steps MANDATORILY:\r\n+        1. Use the `read_text_file` tool to read the content of `{next_file}`.\r\n+        2. Use the `semgrep_scan` tool on the content you just read. Use the configuration: '{config}'.\r\n+        3. Analyze the JSON output from semgrep and report any security findings in a human-readable format.\r\n+        \r\n+        DO NOT describe what you would do. YOU MUST call the tools now.\r\n+        \"\"\"\r\n+        \r\n+        # Append the instruction to the message history and invoke the model\r\n+        response = await model_with_tools.ainvoke(state['messages'] + [(\"user\", scan_instruction)])\r\n+        \r\n+        return {\r\n+            \"messages\": [response],\r\n+            \"file_queue\": remaining_queue,\r\n+            \"processed_files\": state.get(\"processed_files\", []) + [next_file],\r\n+        }\r\n+\r\n+    async def report_generator_agent(state: SecurityAnalysisState):\r\n+        \"\"\"Generates a final summary report of all findings and sends to Slack.\"\"\"\r\n+        print(\"--- REPORTING PHASE ---\")\r\n+        summary_prompt = (\r\n+            \"You have completed the security scan. Please generate a final, comprehensive security report. \"\r\n+            f\"You have processed the following files: {state['processed_files']}. \"\r\n+            \"Summarize all the findings from the conversation history, group them by severity, \"\r\n+            \"and provide clear recommendations for remediation.\"\r\n+        )\r\n+        response = await model.ainvoke(state['messages'] + [(\"user\", summary_prompt)])\r\n+        \r\n+        # Extract the report content\r\n+        report_content = response.content if hasattr(response, 'content') else str(response)\r\n+        \r\n+        # Format and send to Slack\r\n+        formatted_report = format_security_report_for_slack(report_content)\r\n+        slack_success = await send_to_slack(formatted_report)\r\n+        \r\n+        if slack_success:\r\n+            print(\"üì§ Security report sent to Slack!\")\r\n+        else:\r\n+            print(\"üìã Security report generated (Slack delivery failed)\")\r\n+        \r\n+        return {\"messages\": [response], \"current_phase\": \"complete\"}\r\n+\r\n+    # --- Graph Routing Logic ---\r\n+\r\n+    # FIX 2: A simplified and more robust router function.\r\n+    # This function is now only responsible for the logic within the processing loop.\r\n+    def processing_router(state: SecurityAnalysisState):\r\n+        \"\"\"Determines the next step after the file_processor_agent runs.\"\"\"\r\n+        last_message = state[\"messages\"][-1]\r\n+        \r\n+        # If the last message from the agent contains a tool call, route to the tool node.\r\n+        if hasattr(last_message, \"tool_calls\") and last_message.tool_calls:\r\n+            return \"tools\"\r\n+        \r\n+        # If there are still files in the queue, loop back to the processor.\r\n+        if state.get(\"file_queue\"):\r\n+            return \"file_processor\"\r\n+            \r\n+        # If the queue is empty, proceed to generate the final report.\r\n+        return \"report_generator\"\r\n+\r\n+    # --- Graph Construction ---\r\n+\r\n+    builder = StateGraph(SecurityAnalysisState)\r\n+    \r\n+    # Add all the nodes to the graph\r\n+    builder.add_node(\"discovery\", discovery_agent)\r\n+    builder.add_node(\"file_processor\", file_processor_agent)\r\n+    builder.add_node(\"report_generator\", report_generator_agent)\r\n+    if tool_node:\r\n+        builder.add_node(\"tools\", tool_node)\r\n+\r\n+    # FIX 3: Simplified and more robust graph edges.\r\n+    # The workflow is now more explicit and easier to follow.\r\n+    builder.add_edge(START, \"discovery\")\r\n+    builder.add_edge(\"discovery\", \"file_processor\")\r\n+\r\n+    # The file_processor is the heart of the loop. Its next step is conditional.\r\n+    builder.add_conditional_edges(\r\n+        \"file_processor\",\r\n+        processing_router,\r\n+        # The dictionary maps the router's return values to the next node.\r\n+        {\r\n+            \"tools\": \"tools\" if tool_node else \"report_generator\", # Fallback if tools aren't loaded\r\n+            \"file_processor\": \"file_processor\",\r\n+            \"report_generator\": \"report_generator\"\r\n+        }\r\n+    )\r\n+    \r\n+    # CRITICAL FIX: After a tool is used, control MUST return to the agent that called it\r\n+    # so it can process the results. We add a direct edge back to the file_processor.\r\n+    if tool_node:\r\n+        builder.add_edge(\"tools\", \"file_processor\")\r\n+\r\n+    # The report generator is the final step before ending.\r\n+    builder.add_edge(\"report_generator\", END)\r\n+\r\n+    graph = builder.compile()\r\n+\r\n+    # --- Graph Execution ---\r\n+    \r\n+    # The initial prompt provides the agent with its persona and overall goal.\r\n+    initial_prompt = \"\"\"\r\n+    You are a security analysis AI agent. Your mission is to scan code for vulnerabilities using the provided tools.\r\n+    Start by analyzing the files given to you one by one. After scanning all files, provide a final summary report.\r\n+    Let's begin the analysis.\r\n+    \"\"\"\r\n+    initial_state = {\r\n+        \"messages\": [(\"user\", initial_prompt)],\r\n+    }\r\n+    \r\n+    # Invoke the graph with the initial state\r\n+    final_state = await graph.ainvoke(initial_state, config={\"recursion_limit\": 20})\r\n+    \r\n+    print(\"\\n--- FINAL REPORT ---\")\r\n+    # Print the last message from the AI, which contains the final report.\r\n+    print(final_state['messages'][-1].content)\r\n+\r\n+\r\n+if __name__ == \"__main__\":\r\n+    # To run this, you need a file named `vuln_sample.py` in the same directory.\r\n+    # Example `vuln_sample.py`:\r\n+    # import os\r\n+    # password = \"hardcoded_password\"\r\n+    # def run_command(cmd):\r\n+    #     os.system(f\"echo {cmd}\")\r\n+    asyncio.run(main())\n\\ No newline at end of file\ndiff --git a/mcp/api.py b/mcp/api.py\nnew file mode 100644\nindex 0000000000000000000000000000000000000000..329e448a41a892a324b4586f9713c8c1ad4902e1\n--- /dev/null\n+++ b/mcp/api.py\n@@ -0,0 +1,444 @@\n+import asyncio\r\n+import os\r\n+import requests\r\n+import json\r\n+from datetime import datetime\r\n+from langchain_mcp_adapters.client import MultiServerMCPClient\r\n+from langchain_openai import ChatOpenAI\r\n+from langgraph.graph import StateGraph, START, END\r\n+from typing import TypedDict, List\r\n+from typing_extensions import Annotated\r\n+from langgraph.graph.message import add_messages\r\n+from langgraph.prebuilt import ToolNode\r\n+from dotenv import load_dotenv\r\n+import tempfile # NEW: For creating temporary files\r\n+\r\n+# Load environment variables from .env file\r\n+load_dotenv()\r\n+\r\n+# Slack integration functions (unchanged)\r\n+async def send_to_slack(message: str, webhook_url: str = None) -\u003e bool:\r\n+    \"\"\"Send security analysis report to Slack\"\"\"\r\n+    if not webhook_url:\r\n+        webhook_url = os.getenv(\"SLACK_WEBHOOK_URL\")\r\n+    \r\n+    if not webhook_url:\r\n+        print(\"‚ö†Ô∏è No Slack webhook URL found. Set SLACK_WEBHOOK_URL in .env file\")\r\n+        return False\r\n+    \r\n+    try:\r\n+        slack_payload = {\r\n+            \"text\": \"üîí Security Analysis Report\",\r\n+            \"blocks\": [\r\n+                {\r\n+                    \"type\": \"header\",\r\n+                    \"text\": {\r\n+                        \"type\": \"plain_text\",\r\n+                        \"text\": \"üîí Security Analysis Report\"\r\n+                    }\r\n+                },\r\n+                {\r\n+                    \"type\": \"section\",\r\n+                    \"fields\": [\r\n+                        {\r\n+                            \"type\": \"mrkdwn\",\r\n+                            \"text\": f\"*Timestamp:* {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\"\r\n+                        },\r\n+                        {\r\n+                            \"type\": \"mrkdwn\",\r\n+                            \"text\": f\"*Analysis Type:* Automated Security Scan\"\r\n+                        }\r\n+                    ]\r\n+                },\r\n+                {\r\n+                    \"type\": \"section\",\r\n+                    \"text\": {\r\n+                        \"type\": \"mrkdwn\",\r\n+                        \"text\": f\"```\\n{message}\\n```\"\r\n+                    }\r\n+                }\r\n+            ]\r\n+        }\r\n+        \r\n+        response = requests.post(\r\n+            webhook_url,\r\n+            json=slack_payload,\r\n+            headers={'Content-Type': 'application/json'},\r\n+            timeout=10\r\n+        )\r\n+        \r\n+        if response.status_code == 200:\r\n+            print(\"‚úÖ Security report sent to Slack successfully!\")\r\n+            return True\r\n+        else:\r\n+            print(f\"‚ùå Failed to send to Slack. Status: {response.status_code}\")\r\n+            return False\r\n+            \r\n+    except Exception as e:\r\n+        print(f\"‚ùå Error sending to Slack: {str(e)}\")\r\n+        return False\r\n+\r\n+def format_security_report_for_slack(report_content: str) -\u003e str:\r\n+    \"\"\"Format the security report for better Slack presentation\"\"\"\r\n+    if len(report_content) \u003e 2800:\r\n+        report_content = report_content[:2800] + \"\\n...\\n[Report truncated - see full details in logs]\"\r\n+    return report_content\r\n+\r\n+# Define the state for the graph (unchanged)\r\n+class SecurityAnalysisState(TypedDict):\r\n+    messages: Annotated[List, add_messages]\r\n+    file_queue: List[str]\r\n+    processed_files: List[str]\r\n+    scan_results: List[dict]\r\n+    current_phase: str\r\n+\r\n+async def main():\r\n+    model = ChatOpenAI(model=\"gpt-4o\", temperature=0)\r\n+\r\n+    # Set up MCP Client (unchanged)\r\n+    client = MultiServerMCPClient(\r\n+        {\r\n+            \"semgrep\": {\r\n+                \"url\": \"https://mcp.semgrep.ai/mcp\",\r\n+                \"transport\": \"streamable_http\",\r\n+            },\r\n+            \"filesystem\": {\r\n+                \"command\": \"npx\",\r\n+                \"args\": [\r\n+                    \"-y\",\r\n+                    \"@modelcontextprotocol/server-filesystem\",\r\n+                    os.getcwd()\r\n+                ],\r\n+                \"transport\": \"stdio\",\r\n+            }\r\n+        }\r\n+    )\r\n+    \r\n+    try:\r\n+        tools = await client.get_tools()\r\n+        print(\"‚úÖ MCP tools loaded successfully.\")\r\n+    except Exception as e:\r\n+        print(f\"‚ö†Ô∏è Warning: MCP tools failed to load ({str(e)}) ‚Äì continuing without tools.\")\r\n+        tools = []\r\n+\r\n+    model_with_tools = model.bind_tools(tools) if tools else model\r\n+    tool_node = ToolNode(tools) if tools else None\r\n+\r\n+    # --- Agent Definitions ---\r\n+\r\n+    # MODIFIED: This agent now fetches code from your API\r\n+    async def discovery_agent(state: SecurityAnalysisState):\r\n+        \"\"\"Fetches code from the API endpoint and prepares it for scanning.\"\"\"\r\n+        print(\"--- DISCOVERY PHASE (via API) ---\")\r\n+        api_endpoint = \"http://localhost:8000/api/v1/commits/latest\"\r\n+        discovered_files = []\r\n+        \r\n+        # NEW: Create a temporary directory to store the code files\r\n+        # This directory and its contents will be automatically deleted when the 'with' block is exited.\r\n+        with tempfile.TemporaryDirectory() as temp_dir:\r\n+            try:\r\n+                print(f\"Fetching code from {api_endpoint}...\")\r\n+                response = requests.get(api_endpoint, timeout=15)\r\n+                response.raise_for_status()  # Raise an exception for bad status codes (4xx or 5xx)\r\n+                \r\n+                # IMPORTANT: Assuming the API returns a JSON list of objects,\r\n+                # where each object has 'filename' and 'code' keys.\r\n+                # e.g., [{\"filename\": \"main.py\", \"code\": \"print('hello')\"}, ...]\r\n+                code_data = response.json()\r\n+\r\n+                if not isinstance(code_data, list):\r\n+                    print(f\"‚ö†Ô∏è Error: API response is not a JSON list. Received: {type(code_data)}\")\r\n+                    return {\"file_queue\": []}\r\n+\r\n+                for item in code_data:\r\n+                    filename = item.get(\"filename\", \"unknown_file.tmp\")\r\n+                    code_content = item.get(\"code\", \"\")\r\n+                    \r\n+                    # Create a secure temporary file path\r\n+                    file_path = os.path.join(temp_dir, filename)\r\n+                    \r\n+                    # Ensure subdirectory exists if filename contains slashes\r\n+                    os.makedirs(os.path.dirname(file_path), exist_ok=True)\r\n+                    \r\n+                    with open(file_path, \"w\", encoding=\"utf-8\") as f:\r\n+                        f.write(code_content)\r\n+                    \r\n+                    discovered_files.append(file_path)\r\n+\r\n+            except requests.exceptions.RequestException as e:\r\n+                print(f\"‚ùå Error fetching code from API: {e}\")\r\n+                # Return an empty queue to stop the process gracefully\r\n+                return {\"file_queue\": []}\r\n+            except json.JSONDecodeError:\r\n+                print(\"‚ùå Error: Failed to decode JSON from API response.\")\r\n+                return {\"file_queue\": []}\r\n+        \r\n+            if discovered_files:\r\n+                print(f\"‚úÖ Discovered {len(discovered_files)} files from API to scan: {discovered_files}\")\r\n+            else:\r\n+                print(\"‚ö†Ô∏è No files found from the API endpoint.\")\r\n+\r\n+            # This part is tricky because the temp_dir will be deleted.\r\n+            # For a real-world scenario, you might manage the temp dir outside this function\r\n+            # or pass the content directly. For this example, we'll proceed,\r\n+            # but be aware the files are gone after this function returns.\r\n+            # A better approach is shown in the next version of main().\r\n+\r\n+            # For now, let's assume the graph runs fast enough or the file handles remain open\r\n+            # A more robust solution is to manage temp_dir in the main execution scope.\r\n+\r\n+            # Let's adjust main() to handle the temporary directory correctly.\r\n+            # The logic to create files will be moved there. This function will just fetch.\r\n+            \r\n+        # This function will now be redefined inside main() to have access to a persistent temp_dir\r\n+        pass # Placeholder\r\n+\r\n+    # All other agents (file_processor_agent, report_generator_agent) remain UNCHANGED\r\n+    # because they are already designed to work with a queue of file paths.\r\n+    async def file_processor_agent(state: SecurityAnalysisState):\r\n+        \"\"\"Processes one file from the queue, invoking tools to scan it.\"\"\"\r\n+        print(f\"--- PROCESSING PHASE (Queue: {state['file_queue']}) ---\")\r\n+        file_queue = state.get(\"file_queue\", [])\r\n+        \r\n+        if not file_queue:\r\n+            return {\"current_phase\": \"reporting\"}\r\n+\r\n+        next_file = file_queue[0]\r\n+        remaining_queue = file_queue[1:]\r\n+        \r\n+        file_ext = os.path.basename(next_file).split('.')[-1].lower()\r\n+        if file_ext in ['tf', 'tfvars']:\r\n+            config = 'p/terraform'\r\n+        elif file_ext in ['yml', 'yaml'] and 'k8s' in next_file.lower():\r\n+            config = 'p/kubernetes'\r\n+        elif 'dockerfile' in next_file.lower():\r\n+            config = 'p/docker'\r\n+        else:\r\n+            config = 'p/default'\r\n+\r\n+        scan_instruction = f\"\"\"\r\n+        You MUST perform a security scan on the file: `{next_file}`.\r\n+        \r\n+        Follow these steps MANDATORILY:\r\n+        1. Use the `read_text_file` tool to read the content of `{next_file}`.\r\n+        2. Use the `semgrep_scan` tool on the content you just read. Use the configuration: '{config}'.\r\n+        3. Analyze the JSON output from semgrep and report any security findings in a human-readable format.\r\n+        \r\n+        DO NOT describe what you would do. YOU MUST call the tools now.\r\n+        \"\"\"\r\n+        \r\n+        response = await model_with_tools.ainvoke(state['messages'] + [(\"user\", scan_instruction)])\r\n+        \r\n+        return {\r\n+            \"messages\": [response],\r\n+            \"file_queue\": remaining_queue,\r\n+            \"processed_files\": state.get(\"processed_files\", []) + [next_file],\r\n+            \"scan_results\": state.get(\"scan_results\", [])\r\n+        }\r\n+\r\n+    async def report_generator_agent(state: SecurityAnalysisState):\r\n+        \"\"\"Generates a final summary report of all findings and sends to Slack.\"\"\"\r\n+        print(\"--- REPORTING PHASE ---\")\r\n+        \r\n+        # Safely get processed_files with a default empty list\r\n+        processed_files = state.get(\"processed_files\", [])\r\n+        \r\n+        summary_prompt = (\r\n+            \"You have completed the security scan. Please generate a final, comprehensive security report. \"\r\n+            f\"You have processed the following files: {[os.path.basename(f) for f in processed_files]}. \"\r\n+            \"Summarize all the findings from the conversation history, group them by severity, \"\r\n+            \"and provide clear recommendations for remediation.\"\r\n+        )\r\n+        response = await model.ainvoke(state['messages'] + [(\"user\", summary_prompt)])\r\n+        \r\n+        report_content = response.content if hasattr(response, 'content') else str(response)\r\n+        \r\n+        formatted_report = format_security_report_for_slack(report_content)\r\n+        slack_success = await send_to_slack(formatted_report)\r\n+        \r\n+        if slack_success:\r\n+            print(\"üì§ Security report sent to Slack!\")\r\n+        else:\r\n+            print(\"üìã Security report generated (Slack delivery failed)\")\r\n+        \r\n+        return {\"messages\": [response], \"current_phase\": \"complete\"}\r\n+\r\n+    # Routing logic (unchanged)\r\n+    def processing_router(state: SecurityAnalysisState):\r\n+        \"\"\"Determines the next step after the file_processor_agent runs.\"\"\"\r\n+        last_message = state[\"messages\"][-1]\r\n+        \r\n+        if hasattr(last_message, \"tool_calls\") and last_message.tool_calls:\r\n+            return \"tools\"\r\n+        \r\n+        if state.get(\"file_queue\"):\r\n+            return \"file_processor\"\r\n+            \r\n+        return \"report_generator\"\r\n+    \r\n+    # MODIFIED: Create a temporary directory that persists for the entire graph execution\r\n+    with tempfile.TemporaryDirectory() as temp_dir:\r\n+        # NEW: Redefine the discovery agent inside this context to access temp_dir\r\n+        async def discovery_agent_api(state: SecurityAnalysisState):\r\n+            \"\"\"Fetches code from the API endpoint and saves it to a persistent temp directory.\"\"\"\r\n+            print(\"--- DISCOVERY PHASE (via API) ---\")\r\n+            api_endpoint = \"http://localhost:8000/api/v1/commits/latest\"\r\n+            discovered_files = []\r\n+\r\n+            try:\r\n+                print(f\"Fetching code from {api_endpoint}...\")\r\n+                response = requests.get(api_endpoint, timeout=15)\r\n+                response.raise_for_status()\r\n+                api_response = response.json()\r\n+\r\n+                # Handle the actual API response format\r\n+                if not isinstance(api_response, dict) or \"data\" not in api_response:\r\n+                    print(f\"‚ö†Ô∏è Error: API response must be a JSON object with 'data' field. Got {type(api_response).__name__}.\")\r\n+                    return {\r\n+                        \"file_queue\": [],\r\n+                        \"processed_files\": [],\r\n+                        \"scan_results\": [],\r\n+                        \"current_phase\": \"processing\"\r\n+                    }\r\n+\r\n+                commit_data = api_response[\"data\"]\r\n+                \r\n+                # Extract file diffs from the commit data\r\n+                file_diffs = commit_data.get(\"file_diffs\", [])\r\n+                \r\n+                if not file_diffs:\r\n+                    print(\"‚ö†Ô∏è No file diffs found in the commit data.\")\r\n+                    return {\r\n+                        \"file_queue\": [],\r\n+                        \"processed_files\": [],\r\n+                        \"scan_results\": [],\r\n+                        \"current_phase\": \"processing\"\r\n+                    }\r\n+\r\n+                for file_diff in file_diffs:\r\n+                    filename = file_diff.get(\"file_name\", f\"unknown_file_{len(discovered_files)}.tmp\")\r\n+                    diff_content = file_diff.get(\"diff\", \"\")\r\n+                    \r\n+                    # Skip binary files or files without meaningful content\r\n+                    if \"Binary files\" in diff_content or not diff_content.strip():\r\n+                        print(f\"‚ö†Ô∏è Skipping binary or empty file: {filename}\")\r\n+                        continue\r\n+                    \r\n+                    # Extract the actual file content from the diff\r\n+                    # For added files, extract the new content\r\n+                    # For modified files, we'll use the diff content for analysis\r\n+                    file_content = extract_file_content_from_diff(diff_content, filename)\r\n+                    \r\n+                    if not file_content:\r\n+                        print(f\"‚ö†Ô∏è Could not extract content for file: {filename}\")\r\n+                        continue\r\n+                    \r\n+                    # Create a secure temporary file path\r\n+                    safe_filename = os.path.basename(filename)  # Use basename to avoid path traversal\r\n+                    file_path = os.path.join(temp_dir, safe_filename)\r\n+                    \r\n+                    with open(file_path, \"w\", encoding=\"utf-8\") as f:\r\n+                        f.write(file_content)\r\n+                    \r\n+                    discovered_files.append(file_path)\r\n+                    print(f\"‚úÖ Prepared file for analysis: {filename}\")\r\n+\r\n+            except requests.exceptions.RequestException as e:\r\n+                print(f\"‚ùå Error fetching code from API: {e}\")\r\n+                return {\r\n+                    \"file_queue\": [],\r\n+                    \"processed_files\": [],\r\n+                    \"scan_results\": [],\r\n+                    \"current_phase\": \"processing\"\r\n+                }\r\n+            except json.JSONDecodeError:\r\n+                print(f\"‚ùå Error: Failed to decode JSON from API response.\")\r\n+                return {\r\n+                    \"file_queue\": [],\r\n+                    \"processed_files\": [],\r\n+                    \"scan_results\": [],\r\n+                    \"current_phase\": \"processing\"\r\n+                }\r\n+\r\n+            if discovered_files:\r\n+                print(f\"‚úÖ Discovered {len(discovered_files)} files from API to scan: {discovered_files}\")\r\n+            else:\r\n+                print(\"‚ö†Ô∏è No files found from the API endpoint.\")\r\n+\r\n+            return {\r\n+                \"current_phase\": \"processing\",\r\n+                \"file_queue\": discovered_files,\r\n+                \"processed_files\": [],\r\n+                \"scan_results\": []\r\n+            }\r\n+\r\n+        def extract_file_content_from_diff(diff_content: str, filename: str) -\u003e str:\r\n+            \"\"\"Extract the actual file content from a git diff.\"\"\"\r\n+            lines = diff_content.split('\\n')\r\n+            content_lines = []\r\n+            \r\n+            for line in lines:\r\n+                # Skip diff headers and metadata\r\n+                if line.startswith('diff --git') or line.startswith('index ') or line.startswith('---') or line.startswith('+++'):\r\n+                    continue\r\n+                \r\n+                # Remove the diff markers and extract content\r\n+                if line.startswith('+') and not line.startswith('+++'):\r\n+                    # This is an added line, include it\r\n+                    content_lines.append(line[1:])\r\n+                elif line.startswith(' ') and not line.startswith(' '):\r\n+                    # This is an unchanged line, include it\r\n+                    content_lines.append(line[1:])\r\n+                # Skip lines starting with '-' as they are deletions\r\n+            \r\n+            return '\\n'.join(content_lines)\r\n+\r\n+\r\n+        # --- Graph Construction ---\r\n+        builder = StateGraph(SecurityAnalysisState)\r\n+        \r\n+        builder.add_node(\"discovery\", discovery_agent_api) # MODIFIED: Use the new API-based agent\r\n+        builder.add_node(\"file_processor\", file_processor_agent)\r\n+        builder.add_node(\"report_generator\", report_generator_agent)\r\n+        if tool_node:\r\n+            builder.add_node(\"tools\", tool_node)\r\n+\r\n+        builder.add_edge(START, \"discovery\")\r\n+        builder.add_edge(\"discovery\", \"file_processor\")\r\n+\r\n+        builder.add_conditional_edges(\r\n+            \"file_processor\",\r\n+            processing_router,\r\n+            {\r\n+                \"tools\": \"tools\" if tool_node else \"report_generator\",\r\n+                \"file_processor\": \"file_processor\",\r\n+                \"report_generator\": \"report_generator\"\r\n+            }\r\n+        )\r\n+        \r\n+        if tool_node:\r\n+            builder.add_edge(\"tools\", \"file_processor\")\r\n+\r\n+        builder.add_edge(\"report_generator\", END)\r\n+\r\n+        graph = builder.compile()\r\n+\r\n+        # --- Graph Execution ---\r\n+        initial_prompt = \"\"\"\r\n+        You are a security analysis AI agent. Your mission is to scan code for vulnerabilities using the provided tools.\r\n+        Start by analyzing the files given to you one by one. After scanning all files, provide a final summary report.\r\n+        Let's begin the analysis.\r\n+        \"\"\"\r\n+        initial_state = {\r\n+            \"messages\": [(\"user\", initial_prompt)],\r\n+        }\r\n+        \r\n+        final_state = await graph.ainvoke(initial_state, config={\"recursion_limit\": 50}) # Increased recursion limit\r\n+        \r\n+        print(\"\\n--- FINAL REPORT ---\")\r\n+        if final_state['messages'] and final_state['messages'][-1]:\r\n+             print(final_state['messages'][-1].content)\r\n+\r\n+\r\n+if __name__ == \"__main__\":\r\n+    asyncio.run(main())\n\\ No newline at end of file\ndiff --git a/mcp/main.py b/mcp/main.py\nnew file mode 100644\nindex 0000000000000000000000000000000000000000..196d48c3aa221dbae0635d27952ac0b496f8060a\n--- /dev/null\n+++ b/mcp/main.py\n@@ -0,0 +1,6 @@\n+def main():\n+    print(\"Hello from threat-detect!\")\n+\n+\n+if __name__ == \"__main__\":\n+    main()\ndiff --git a/mcp/pyproject.toml b/mcp/pyproject.toml\nnew file mode 100644\nindex 0000000000000000000000000000000000000000..a6dbe70594ec5a84f14ba43fcedf4cff102cffba\n--- /dev/null\n+++ b/mcp/pyproject.toml\n@@ -0,0 +1,22 @@\n+[project]\n+name = \"threat-detect\"\n+version = \"0.1.0\"\n+description = \"Add your description here\"\n+readme = \"README.md\"\n+requires-python = \"\u003e=3.13\"\n+dependencies = [\n+    \"fastapi\u003e=0.116.1\",\n+    \"langchain\u003e=0.3.27\",\n+    \"langchain-core\u003e=0.3.75\",\n+    \"langchain-groq\u003e=0.3.7\",\n+    \"langchain-mcp-adapters\u003e=0.1.9\",\n+    \"langchain-openai\u003e=0.3.32\",\n+    \"langgraph\u003e=0.6.6\",\n+    \"nest-asyncio\u003e=1.6.0\",\n+    \"pydantic\u003e=2.11.7\",\n+    \"python-dotenv\u003e=1.1.1\",\n+    \"requests\u003e=2.32.5\",\n+    \"tavily-python\u003e=0.7.11\",\n+    \"typing-extensions\u003e=4.15.0\",\n+    \"uvicorn[standard]\u003e=0.35.0\",\n+]\ndiff --git a/mcp/requirements.txt b/mcp/requirements.txt\nnew file mode 100644\nindex 0000000000000000000000000000000000000000..1264b0a6b95c873471c9f5ac56d2eca63784fb92\n--- /dev/null\n+++ b/mcp/requirements.txt\n@@ -0,0 +1,14 @@\n+langchain\n+langchain-core\n+langgraph\n+langchain-openai\n+langchain-mcp-adapters\n+\n+pydantic\n+typing-extensions\n+nest-asyncio\n+\n+tavily-python\n+python-dotenv\n+langchain_mcp_adapters\n+requests\ndiff --git a/mcp/simple_multi_agent.py b/mcp/simple_multi_agent.py\nnew file mode 100644\nindex 0000000000000000000000000000000000000000..c3cb05fa44455cac26cd0d1a1e255d9da776abe0\n--- /dev/null\n+++ b/mcp/simple_multi_agent.py\n@@ -0,0 +1,239 @@\n+import asyncio\r\n+from typing import Dict, List, Any\r\n+from dataclasses import dataclass\r\n+from langchain_mcp_adapters.client import MultiServerMCPClient\r\n+from langchain.chat_models import init_chat_model\r\n+from dotenv import load_dotenv\r\n+\r\n+load_dotenv()\r\n+\r\n+@dataclass\r\n+class SecurityFinding:\r\n+    file_path: str\r\n+    line_number: int\r\n+    rule_id: str\r\n+    severity: str\r\n+    message: str\r\n+\r\n+class MultiAgentSecuritySystem:\r\n+    def __init__(self):\r\n+        self.model = init_chat_model(\"groq:qwen/qwen3-32b\")\r\n+        self.tools = []\r\n+        self.files_read = set()\r\n+        self.findings = []\r\n+    \r\n+    async def setup_mcp(self):\r\n+        \"\"\"Initialize MCP client and tools\"\"\"\r\n+        client = MultiServerMCPClient({\r\n+            \"semgrep\": {\r\n+                \"url\": \"https://mcp.semgrep.ai/mcp\",\r\n+                \"transport\": \"streamable_http\",\r\n+            },\r\n+            \"filesystem\": {\r\n+                \"command\": \"npx\",\r\n+                \"args\": [\r\n+                    \"-y\",\r\n+                    \"@modelcontextprotocol/server-filesystem\",\r\n+                    \"E:\\\\Threat_detect\"\r\n+                ],\r\n+                \"transport\": \"stdio\",\r\n+            }\r\n+        })\r\n+        \r\n+        try:\r\n+            self.tools = await client.get_tools()\r\n+            print(\"‚úÖ MCP tools loaded successfully\")\r\n+        except Exception as e:\r\n+            print(f\"‚ùå MCP tools failed to load: {e}\")\r\n+            self.tools = []\r\n+    \r\n+    async def file_reader_agent(self, file_path: str) -\u003e str:\r\n+        \"\"\"Agent 1: Read files (prevents re-reading)\"\"\"\r\n+        if file_path in self.files_read:\r\n+            return f\"[SKIP] Already read: {file_path}\"\r\n+        \r\n+        try:\r\n+            read_tool = next((t for t in self.tools if getattr(t, \"name\", \"\") == \"read_text_file\"), None)\r\n+            if not read_tool:\r\n+                return f\"[ERROR] No read tool available\"\r\n+            \r\n+            result = await read_tool.ainvoke({\"path\": file_path})\r\n+            self.files_read.add(file_path)\r\n+            print(f\"üìñ Read: {file_path}\")\r\n+            return result\r\n+        except Exception as e:\r\n+            return f\"[ERROR] {file_path}: {str(e)}\"\r\n+    \r\n+    async def security_analyzer_agent(self, files_content: Dict[str, str]) -\u003e List[SecurityFinding]:\r\n+        \"\"\"Agent 2: Analyze security (structured, no hallucination)\"\"\"\r\n+        try:\r\n+            semgrep_tool = next((t for t in self.tools if getattr(t, \"name\", \"\") == \"semgrep_scan\"), None)\r\n+            if not semgrep_tool:\r\n+                return []\r\n+            \r\n+            # Batch files for efficiency\r\n+            code_files = [\r\n+                {\"filename\": path, \"content\": content}\r\n+                for path, content in files_content.items()\r\n+            ]\r\n+            \r\n+            # Determine config based on file types\r\n+            config = \"p/security-audit\"  # Default\r\n+            if any(path.endswith(('.tf', '.tfvars')) for path in files_content.keys()):\r\n+                config = \"p/terraform\"\r\n+            elif any(path.endswith(('.yml', '.yaml')) for path in files_content.keys()):\r\n+                config = \"p/kubernetes\"\r\n+            elif any('Dockerfile' in path for path in files_content.keys()):\r\n+                config = \"p/docker\"\r\n+            \r\n+            print(f\"üîç Scanning {len(code_files)} files with config: {config}\")\r\n+            result = await semgrep_tool.ainvoke({\r\n+                \"code_files\": code_files,\r\n+                \"config\": config\r\n+            })\r\n+            \r\n+            # Parse results (no LLM hallucination - direct parsing)\r\n+            findings = []\r\n+            if isinstance(result, dict) and \"results\" in result:\r\n+                for finding in result[\"results\"]:\r\n+                    findings.append(SecurityFinding(\r\n+                        file_path=finding.get(\"path\", \"\"),\r\n+                        line_number=finding.get(\"start\", {}).get(\"line\", 0),\r\n+                        rule_id=finding.get(\"check_id\", \"\"),\r\n+                        severity=finding.get(\"extra\", {}).get(\"severity\", \"\"),\r\n+                        message=finding.get(\"extra\", {}).get(\"message\", \"\")\r\n+                    ))\r\n+            \r\n+            print(f\"üéØ Found {len(findings)} security issues\")\r\n+            return findings\r\n+            \r\n+        except Exception as e:\r\n+            print(f\"‚ùå Security analysis failed: {e}\")\r\n+            return []\r\n+    \r\n+    async def report_writer_agent(self, findings: List[SecurityFinding], files_analyzed: List[str]) -\u003e str:\r\n+        \"\"\"Agent 3: Write reports (structured, factual)\"\"\"\r\n+        # Group by severity\r\n+        critical = [f for f in findings if f.severity.upper() == \"ERROR\"]\r\n+        high = [f for f in findings if f.severity.upper() == \"WARNING\"]\r\n+        medium = [f for f in findings if f.severity.upper() == \"INFO\"]\r\n+        \r\n+        # Generate structured report (no LLM hallucination)\r\n+        report = f\"\"\"\r\n+# üîí Security Analysis Report\r\n+\r\n+## üìä Summary\r\n+- **Files Analyzed**: {len(files_analyzed)}\r\n+- **Total Findings**: {len(findings)}\r\n+- **üö® Critical (ERROR)**: {len(critical)}\r\n+- **‚ö†Ô∏è High (WARNING)**: {len(high)}\r\n+- **‚ÑπÔ∏è Medium (INFO)**: {len(medium)}\r\n+\r\n+## üìÅ Files Analyzed\r\n+{chr(10).join(f\"- {f}\" for f in files_analyzed)}\r\n+\r\n+## üö® Critical Findings\r\n+\"\"\"\r\n+        \r\n+        for finding in critical:\r\n+            report += f\"\"\"\r\n+### {finding.rule_id}\r\n+- **File**: `{finding.file_path}:{finding.line_number}`\r\n+- **Severity**: {finding.severity}\r\n+- **Issue**: {finding.message}\r\n+\"\"\"\r\n+        \r\n+        report += \"\\n## ‚ö†Ô∏è High Priority Findings\\n\"\r\n+        for finding in high:\r\n+            report += f\"\"\"\r\n+### {finding.rule_id}\r\n+- **File**: `{finding.file_path}:{finding.line_number}`\r\n+- **Severity**: {finding.severity}\r\n+- **Issue**: {finding.message}\r\n+\"\"\"\r\n+        \r\n+        report += \"\\n## üõ†Ô∏è Recommendations\\n\"\r\n+        if critical:\r\n+            report += \"1. **URGENT**: Fix all Critical findings immediately\\n\"\r\n+        if high:\r\n+            report += \"2. **HIGH PRIORITY**: Address High severity findings\\n\"\r\n+        if findings:\r\n+            report += \"3. **PREVENTION**: Integrate Semgrep into CI/CD pipeline\\n\"\r\n+            report += \"4. **TRAINING**: Provide security training for developers\\n\"\r\n+        else:\r\n+            report += \"‚úÖ No security issues found. Continue regular monitoring.\\n\"\r\n+        \r\n+        return report\r\n+    \r\n+    async def context_manager_agent(self, current_step: str, data_size: int) -\u003e bool:\r\n+        \"\"\"Agent 4: Manage context window\"\"\"\r\n+        max_context = 8000\r\n+        if data_size \u003e max_context:\r\n+            print(f\"‚ö†Ô∏è Context limit reached ({data_size} \u003e {max_context})\")\r\n+            return False\r\n+        \r\n+        print(f\"üìä Context: {current_step} ({data_size} chars)\")\r\n+        return True\r\n+    \r\n+    async def analyze_directory(self, target_dir: str):\r\n+        \"\"\"Main orchestration method\"\"\"\r\n+        print(\"üöÄ Starting Multi-Agent Security Analysis...\")\r\n+        \r\n+        # Setup\r\n+        await self.setup_mcp()\r\n+        if not self.tools:\r\n+            print(\"‚ùå Cannot proceed without MCP tools\")\r\n+            return\r\n+        \r\n+        # Step 1: File Discovery\r\n+        print(\"\\nüìÅ Step 1: File Discovery\")\r\n+        try:\r\n+            list_tool = next((t for t in self.tools if getattr(t, \"name\", \"\") == \"list_directory\"), None)\r\n+            if list_tool:\r\n+                files = await list_tool.ainvoke({\"path\": target_dir})\r\n+                print(f\"Found {len(files)} items\")\r\n+            else:\r\n+                print(\"‚ùå No list_directory tool available\")\r\n+                return\r\n+        except Exception as e:\r\n+            print(f\"‚ùå File discovery failed: {e}\")\r\n+            return\r\n+        \r\n+        # Step 2: Read Files (Agent 1)\r\n+        print(\"\\nüìñ Step 2: Reading Files\")\r\n+        files_content = {}\r\n+        for file_path in files:\r\n+            if not file_path.startswith(\"[DIR]\"):\r\n+                full_path = f\"{target_dir}/{file_path.replace('[FILE] ', '')}\"\r\n+                content = await self.file_reader_agent(full_path)\r\n+                \r\n+                if not content.startswith(\"[ERROR]\") and not content.startswith(\"[SKIP]\"):\r\n+                    files_content[full_path] = content\r\n+                    \r\n+                    # Context management\r\n+                    if not await self.context_manager_agent(\"Reading files\", len(content)):\r\n+                        break\r\n+        \r\n+        print(f\"‚úÖ Read {len(files_content)} files\")\r\n+        \r\n+        # Step 3: Security Analysis (Agent 2)\r\n+        print(\"\\nüîç Step 3: Security Analysis\")\r\n+        findings = await self.security_analyzer_agent(files_content)\r\n+        \r\n+        # Step 4: Generate Report (Agent 3)\r\n+        print(\"\\nüìù Step 4: Generating Report\")\r\n+        report = await self.report_writer_agent(findings, list(files_content.keys()))\r\n+        \r\n+        # Step 5: Output\r\n+        print(\"\\n\" + \"=\"*80)\r\n+        print(report)\r\n+        print(\"=\"*80)\r\n+        \r\n+        print(f\"\\n‚úÖ Analysis complete: {len(findings)} issues in {len(files_content)} files\")\r\n+\r\n+async def main():\r\n+    system = MultiAgentSecuritySystem()\r\n+    await system.analyze_directory(\"threat-demo/IAC\")\r\n+\r\n+if __name__ == \"__main__\":\r\n+    asyncio.run(main())\r\ndiff --git a/mcp/test_api.py b/mcp/test_api.py\nnew file mode 100644\nindex 0000000000000000000000000000000000000000..e0bd6b4ef93f92f042d336040cb7d7c350844415\n--- /dev/null\n+++ b/mcp/test_api.py\n@@ -0,0 +1,143 @@\n+#!/usr/bin/env python3\r\n+\"\"\"\r\n+Test script for the MCP Code Analysis API\r\n+\"\"\"\r\n+\r\n+import requests\r\n+import json\r\n+import time\r\n+\r\n+# API endpoint\r\n+API_URL = \"http://localhost:8000/analyze-file\"\r\n+\r\n+def test_api_with_vulnerable_code():\r\n+    \"\"\"Test the API with the vulnerable code from vuln_sample.py\"\"\"\r\n+    \r\n+    # Read the vulnerable code\r\n+    with open(\"vuln_sample.py\", \"r\") as f:\r\n+        vulnerable_code = f.read()\r\n+    \r\n+    # Prepare the request\r\n+    payload = {\r\n+        \"code\": vulnerable_code,\r\n+        \"language\": \"python\"\r\n+    }\r\n+    \r\n+    print(\"üß™ Testing API with vulnerable code...\")\r\n+    print(f\"üì° Sending request to: {API_URL}\")\r\n+    print(f\"üìÑ Code length: {len(vulnerable_code)} characters\")\r\n+    \r\n+    try:\r\n+        # Send the request\r\n+        response = requests.post(\r\n+            API_URL,\r\n+            json=payload,\r\n+            headers={\"Content-Type\": \"application/json\"},\r\n+            timeout=60  # 60 second timeout for analysis\r\n+        )\r\n+        \r\n+        if response.status_code == 200:\r\n+            result = response.json()\r\n+            print(\"‚úÖ API request successful!\")\r\n+            print(\"\\n\" + \"=\"*80)\r\n+            print(\"üîí SECURITY ANALYSIS REPORT\")\r\n+            print(\"=\"*80)\r\n+            print(result[\"report\"])\r\n+            print(\"=\"*80)\r\n+            return True\r\n+        else:\r\n+            print(f\"‚ùå API request failed with status: {response.status_code}\")\r\n+            print(f\"Response: {response.text}\")\r\n+            return False\r\n+            \r\n+    except requests.exceptions.ConnectionError:\r\n+        print(\"‚ùå Connection failed. Is the API server running on localhost:8000?\")\r\n+        print(\"üí° Try running: python api.py\")\r\n+        return False\r\n+    except requests.exceptions.Timeout:\r\n+        print(\"‚ùå Request timed out. The analysis took too long.\")\r\n+        return False\r\n+    except Exception as e:\r\n+        print(f\"‚ùå Unexpected error: {e}\")\r\n+        return False\r\n+\r\n+def test_api_with_simple_code():\r\n+    \"\"\"Test the API with a simple, safe code snippet\"\"\"\r\n+    \r\n+    simple_code = '''\r\n+def hello_world():\r\n+    \"\"\"A simple, safe function\"\"\"\r\n+    return \"Hello, World!\"\r\n+\r\n+def add_numbers(a, b):\r\n+    \"\"\"Add two numbers safely\"\"\"\r\n+    return a + b\r\n+\r\n+if __name__ == \"__main__\":\r\n+    print(hello_world())\r\n+    print(add_numbers(5, 3))\r\n+'''\r\n+    \r\n+    payload = {\r\n+        \"code\": simple_code,\r\n+        \"language\": \"python\"\r\n+    }\r\n+    \r\n+    print(\"\\nüß™ Testing API with simple, safe code...\")\r\n+    \r\n+    try:\r\n+        response = requests.post(\r\n+            API_URL,\r\n+            json=payload,\r\n+            headers={\"Content-Type\": \"application/json\"},\r\n+            timeout=30\r\n+        )\r\n+        \r\n+        if response.status_code == 200:\r\n+            result = response.json()\r\n+            print(\"‚úÖ Simple code test successful!\")\r\n+            print(\"\\n\" + \"=\"*50)\r\n+            print(\"üìä ANALYSIS RESULT\")\r\n+            print(\"=\"*50)\r\n+            print(result[\"report\"])\r\n+            print(\"=\"*50)\r\n+            return True\r\n+        else:\r\n+            print(f\"‚ùå Simple code test failed: {response.status_code}\")\r\n+            return False\r\n+            \r\n+    except Exception as e:\r\n+        print(f\"‚ùå Simple code test error: {e}\")\r\n+        return False\r\n+\r\n+def main():\r\n+    \"\"\"Run all tests\"\"\"\r\n+    print(\"üöÄ Starting API Tests for Threat Detection System\")\r\n+    print(\"=\"*60)\r\n+    \r\n+    # Wait a moment for server to be ready\r\n+    print(\"‚è≥ Waiting 2 seconds for server to be ready...\")\r\n+    time.sleep(2)\r\n+    \r\n+    # Test 1: Simple code\r\n+    success1 = test_api_with_simple_code()\r\n+    \r\n+    # Test 2: Vulnerable code\r\n+    success2 = test_api_with_vulnerable_code()\r\n+    \r\n+    # Summary\r\n+    print(\"\\n\" + \"=\"*60)\r\n+    print(\"üìã TEST SUMMARY\")\r\n+    print(\"=\"*60)\r\n+    print(f\"Simple Code Test: {'‚úÖ PASSED' if success1 else '‚ùå FAILED'}\")\r\n+    print(f\"Vulnerable Code Test: {'‚úÖ PASSED' if success2 else '‚ùå FAILED'}\")\r\n+    \r\n+    if success1 and success2:\r\n+        print(\"\\nüéâ All tests passed! Your threat detection API is working correctly.\")\r\n+    else:\r\n+        print(\"\\n‚ö†Ô∏è Some tests failed. Check the error messages above.\")\r\n+    \r\n+    return success1 and success2\r\n+\r\n+if __name__ == \"__main__\":\r\n+    main()\r\ndiff --git a/mcp/threat-demo b/mcp/threat-demo\nnew file mode 160000\nindex 0000000000000000000000000000000000000000..e48ccb3cfede6f530fd5c23178b62c5b9017331b\n--- /dev/null\n+++ b/mcp/threat-demo\n@@ -0,0 +1 @@\n+Subproject commit e48ccb3cfede6f530fd5c23178b62c5b9017331b\ndiff --git a/mcp/uv.lock b/mcp/uv.lock\nnew file mode 100644\nindex 0000000000000000000000000000000000000000..b75074348262299d378f7bd5d858930988561c5c\n--- /dev/null\n+++ b/mcp/uv.lock\n@@ -0,0 +1,1183 @@\n+version = 1\n+revision = 2\n+requires-python = \"\u003e=3.13\"\n+\n+[[package]]\n+name = \"annotated-types\"\n+version = \"0.7.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/ee/67/531ea369ba64dcff5ec9c3402f9f51bf748cec26dde048a2f973a4eea7f5/annotated_types-0.7.0.tar.gz\", hash = \"sha256:aff07c09a53a08bc8cfccb9c85b05f1aa9a2a6f23728d790723543408344ce89\", size = 16081, upload-time = \"2024-05-20T21:33:25.928Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/78/b6/6307fbef88d9b5ee7421e68d78a9f162e0da4900bc5f5793f6d3d0e34fb8/annotated_types-0.7.0-py3-none-any.whl\", hash = \"sha256:1f02e8b43a8fbbc3f3e0d4f0f4bfc8131bcb4eebe8849b8e5c773f3a1c582a53\", size = 13643, upload-time = \"2024-05-20T21:33:24.1Z\" },\n+]\n+\n+[[package]]\n+name = \"anyio\"\n+version = \"4.10.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"idna\" },\n+    { name = \"sniffio\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/f1/b4/636b3b65173d3ce9a38ef5f0522789614e590dab6a8d505340a4efe4c567/anyio-4.10.0.tar.gz\", hash = \"sha256:3f3fae35c96039744587aa5b8371e7e8e603c0702999535961dd336026973ba6\", size = 213252, upload-time = \"2025-08-04T08:54:26.451Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/6f/12/e5e0282d673bb9746bacfb6e2dba8719989d3660cdb2ea79aee9a9651afb/anyio-4.10.0-py3-none-any.whl\", hash = \"sha256:60e474ac86736bbfd6f210f7a61218939c318f43f9972497381f1c5e930ed3d1\", size = 107213, upload-time = \"2025-08-04T08:54:24.882Z\" },\n+]\n+\n+[[package]]\n+name = \"attrs\"\n+version = \"25.3.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/5a/b0/1367933a8532ee6ff8d63537de4f1177af4bff9f3e829baf7331f595bb24/attrs-25.3.0.tar.gz\", hash = \"sha256:75d7cefc7fb576747b2c81b4442d4d4a1ce0900973527c011d1030fd3bf4af1b\", size = 812032, upload-time = \"2025-03-13T11:10:22.779Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/77/06/bb80f5f86020c4551da315d78b3ab75e8228f89f0162f2c3a819e407941a/attrs-25.3.0-py3-none-any.whl\", hash = \"sha256:427318ce031701fea540783410126f03899a97ffc6f61596ad581ac2e40e3bc3\", size = 63815, upload-time = \"2025-03-13T11:10:21.14Z\" },\n+]\n+\n+[[package]]\n+name = \"certifi\"\n+version = \"2025.8.3\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/dc/67/960ebe6bf230a96cda2e0abcf73af550ec4f090005363542f0765df162e0/certifi-2025.8.3.tar.gz\", hash = \"sha256:e564105f78ded564e3ae7c923924435e1daa7463faeab5bb932bc53ffae63407\", size = 162386, upload-time = \"2025-08-03T03:07:47.08Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/e5/48/1549795ba7742c948d2ad169c1c8cdbae65bc450d6cd753d124b17c8cd32/certifi-2025.8.3-py3-none-any.whl\", hash = \"sha256:f6c12493cfb1b06ba2ff328595af9350c65d6644968e5d3a2ffd78699af217a5\", size = 161216, upload-time = \"2025-08-03T03:07:45.777Z\" },\n+]\n+\n+[[package]]\n+name = \"charset-normalizer\"\n+version = \"3.4.3\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/83/2d/5fd176ceb9b2fc619e63405525573493ca23441330fcdaee6bef9460e924/charset_normalizer-3.4.3.tar.gz\", hash = \"sha256:6fce4b8500244f6fcb71465d4a4930d132ba9ab8e71a7859e6a5d59851068d14\", size = 122371, upload-time = \"2025-08-09T07:57:28.46Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/65/ca/2135ac97709b400c7654b4b764daf5c5567c2da45a30cdd20f9eefe2d658/charset_normalizer-3.4.3-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:14c2a87c65b351109f6abfc424cab3927b3bdece6f706e4d12faaf3d52ee5efe\", size = 205326, upload-time = \"2025-08-09T07:56:24.721Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/71/11/98a04c3c97dd34e49c7d247083af03645ca3730809a5509443f3c37f7c99/charset_normalizer-3.4.3-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:41d1fc408ff5fdfb910200ec0e74abc40387bccb3252f3f27c0676731df2b2c8\", size = 146008, upload-time = \"2025-08-09T07:56:26.004Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/60/f5/4659a4cb3c4ec146bec80c32d8bb16033752574c20b1252ee842a95d1a1e/charset_normalizer-3.4.3-cp313-cp313-manylinux2014_ppc64le.manylinux_2_17_ppc64le.manylinux_2_28_ppc64le.whl\", hash = \"sha256:1bb60174149316da1c35fa5233681f7c0f9f514509b8e399ab70fea5f17e45c9\", size = 159196, upload-time = \"2025-08-09T07:56:27.25Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/86/9e/f552f7a00611f168b9a5865a1414179b2c6de8235a4fa40189f6f79a1753/charset_normalizer-3.4.3-cp313-cp313-manylinux2014_s390x.manylinux_2_17_s390x.manylinux_2_28_s390x.whl\", hash = \"sha256:30d006f98569de3459c2fc1f2acde170b7b2bd265dc1943e87e1a4efe1b67c31\", size = 156819, upload-time = \"2025-08-09T07:56:28.515Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/7e/95/42aa2156235cbc8fa61208aded06ef46111c4d3f0de233107b3f38631803/charset_normalizer-3.4.3-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:416175faf02e4b0810f1f38bcb54682878a4af94059a1cd63b8747244420801f\", size = 151350, upload-time = \"2025-08-09T07:56:29.716Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c2/a9/3865b02c56f300a6f94fc631ef54f0a8a29da74fb45a773dfd3dcd380af7/charset_normalizer-3.4.3-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:6aab0f181c486f973bc7262a97f5aca3ee7e1437011ef0c2ec04b5a11d16c927\", size = 148644, upload-time = \"2025-08-09T07:56:30.984Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/77/d9/cbcf1a2a5c7d7856f11e7ac2d782aec12bdfea60d104e60e0aa1c97849dc/charset_normalizer-3.4.3-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:fdabf8315679312cfa71302f9bd509ded4f2f263fb5b765cf1433b39106c3cc9\", size = 160468, upload-time = \"2025-08-09T07:56:32.252Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/f6/42/6f45efee8697b89fda4d50580f292b8f7f9306cb2971d4b53f8914e4d890/charset_normalizer-3.4.3-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:bd28b817ea8c70215401f657edef3a8aa83c29d447fb0b622c35403780ba11d5\", size = 158187, upload-time = \"2025-08-09T07:56:33.481Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/70/99/f1c3bdcfaa9c45b3ce96f70b14f070411366fa19549c1d4832c935d8e2c3/charset_normalizer-3.4.3-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:18343b2d246dc6761a249ba1fb13f9ee9a2bcd95decc767319506056ea4ad4dc\", size = 152699, upload-time = \"2025-08-09T07:56:34.739Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a3/ad/b0081f2f99a4b194bcbb1934ef3b12aa4d9702ced80a37026b7607c72e58/charset_normalizer-3.4.3-cp313-cp313-win32.whl\", hash = \"sha256:6fb70de56f1859a3f71261cbe41005f56a7842cc348d3aeb26237560bfa5e0ce\", size = 99580, upload-time = \"2025-08-09T07:56:35.981Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/9a/8f/ae790790c7b64f925e5c953b924aaa42a243fb778fed9e41f147b2a5715a/charset_normalizer-3.4.3-cp313-cp313-win_amd64.whl\", hash = \"sha256:cf1ebb7d78e1ad8ec2a8c4732c7be2e736f6e5123a4146c5b89c9d1f585f8cef\", size = 107366, upload-time = \"2025-08-09T07:56:37.339Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8e/91/b5a06ad970ddc7a0e513112d40113e834638f4ca1120eb727a249fb2715e/charset_normalizer-3.4.3-cp314-cp314-macosx_10_13_universal2.whl\", hash = \"sha256:3cd35b7e8aedeb9e34c41385fda4f73ba609e561faedfae0a9e75e44ac558a15\", size = 204342, upload-time = \"2025-08-09T07:56:38.687Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ce/ec/1edc30a377f0a02689342f214455c3f6c2fbedd896a1d2f856c002fc3062/charset_normalizer-3.4.3-cp314-cp314-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:b89bc04de1d83006373429975f8ef9e7932534b8cc9ca582e4db7d20d91816db\", size = 145995, upload-time = \"2025-08-09T07:56:40.048Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/17/e5/5e67ab85e6d22b04641acb5399c8684f4d37caf7558a53859f0283a650e9/charset_normalizer-3.4.3-cp314-cp314-manylinux2014_ppc64le.manylinux_2_17_ppc64le.manylinux_2_28_ppc64le.whl\", hash = \"sha256:2001a39612b241dae17b4687898843f254f8748b796a2e16f1051a17078d991d\", size = 158640, upload-time = \"2025-08-09T07:56:41.311Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/f1/e5/38421987f6c697ee3722981289d554957c4be652f963d71c5e46a262e135/charset_normalizer-3.4.3-cp314-cp314-manylinux2014_s390x.manylinux_2_17_s390x.manylinux_2_28_s390x.whl\", hash = \"sha256:8dcfc373f888e4fb39a7bc57e93e3b845e7f462dacc008d9749568b1c4ece096\", size = 156636, upload-time = \"2025-08-09T07:56:43.195Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a0/e4/5a075de8daa3ec0745a9a3b54467e0c2967daaaf2cec04c845f73493e9a1/charset_normalizer-3.4.3-cp314-cp314-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:18b97b8404387b96cdbd30ad660f6407799126d26a39ca65729162fd810a99aa\", size = 150939, upload-time = \"2025-08-09T07:56:44.819Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/02/f7/3611b32318b30974131db62b4043f335861d4d9b49adc6d57c1149cc49d4/charset_normalizer-3.4.3-cp314-cp314-musllinux_1_2_aarch64.whl\", hash = \"sha256:ccf600859c183d70eb47e05a44cd80a4ce77394d1ac0f79dbd2dd90a69a3a049\", size = 148580, upload-time = \"2025-08-09T07:56:46.684Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/7e/61/19b36f4bd67f2793ab6a99b979b4e4f3d8fc754cbdffb805335df4337126/charset_normalizer-3.4.3-cp314-cp314-musllinux_1_2_ppc64le.whl\", hash = \"sha256:53cd68b185d98dde4ad8990e56a58dea83a4162161b1ea9272e5c9182ce415e0\", size = 159870, upload-time = \"2025-08-09T07:56:47.941Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/06/57/84722eefdd338c04cf3030ada66889298eaedf3e7a30a624201e0cbe424a/charset_normalizer-3.4.3-cp314-cp314-musllinux_1_2_s390x.whl\", hash = \"sha256:30a96e1e1f865f78b030d65241c1ee850cdf422d869e9028e2fc1d5e4db73b92\", size = 157797, upload-time = \"2025-08-09T07:56:49.756Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/72/2a/aff5dd112b2f14bcc3462c312dce5445806bfc8ab3a7328555da95330e4b/charset_normalizer-3.4.3-cp314-cp314-musllinux_1_2_x86_64.whl\", hash = \"sha256:d716a916938e03231e86e43782ca7878fb602a125a91e7acb8b5112e2e96ac16\", size = 152224, upload-time = \"2025-08-09T07:56:51.369Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b7/8c/9839225320046ed279c6e839d51f028342eb77c91c89b8ef2549f951f3ec/charset_normalizer-3.4.3-cp314-cp314-win32.whl\", hash = \"sha256:c6dbd0ccdda3a2ba7c2ecd9d77b37f3b5831687d8dc1b6ca5f56a4880cc7b7ce\", size = 100086, upload-time = \"2025-08-09T07:56:52.722Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ee/7a/36fbcf646e41f710ce0a563c1c9a343c6edf9be80786edeb15b6f62e17db/charset_normalizer-3.4.3-cp314-cp314-win_amd64.whl\", hash = \"sha256:73dc19b562516fc9bcf6e5d6e596df0b4eb98d87e4f79f3ae71840e6ed21361c\", size = 107400, upload-time = \"2025-08-09T07:56:55.172Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8a/1f/f041989e93b001bc4e44bb1669ccdcf54d3f00e628229a85b08d330615c5/charset_normalizer-3.4.3-py3-none-any.whl\", hash = \"sha256:ce571ab16d890d23b5c278547ba694193a45011ff86a9162a71307ed9f86759a\", size = 53175, upload-time = \"2025-08-09T07:57:26.864Z\" },\n+]\n+\n+[[package]]\n+name = \"click\"\n+version = \"8.2.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"colorama\", marker = \"sys_platform == 'win32'\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/60/6c/8ca2efa64cf75a977a0d7fac081354553ebe483345c734fb6b6515d96bbc/click-8.2.1.tar.gz\", hash = \"sha256:27c491cc05d968d271d5a1db13e3b5a184636d9d930f148c50b038f0d0646202\", size = 286342, upload-time = \"2025-05-20T23:19:49.832Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/85/32/10bb5764d90a8eee674e9dc6f4db6a0ab47c8c4d0d83c27f7c39ac415a4d/click-8.2.1-py3-none-any.whl\", hash = \"sha256:61a3265b914e850b85317d0b3109c7f8cd35a670f963866005d6ef1d5175a12b\", size = 102215, upload-time = \"2025-05-20T23:19:47.796Z\" },\n+]\n+\n+[[package]]\n+name = \"colorama\"\n+version = \"0.4.6\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/d8/53/6f443c9a4a8358a93a6792e2acffb9d9d5cb0a5cfd8802644b7b1c9a02e4/colorama-0.4.6.tar.gz\", hash = \"sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44\", size = 27697, upload-time = \"2022-10-25T02:36:22.414Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/d1/d6/3965ed04c63042e047cb6a3e6ed1a63a35087b6a609aa3a15ed8ac56c221/colorama-0.4.6-py2.py3-none-any.whl\", hash = \"sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6\", size = 25335, upload-time = \"2022-10-25T02:36:20.889Z\" },\n+]\n+\n+[[package]]\n+name = \"distro\"\n+version = \"1.9.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/fc/f8/98eea607f65de6527f8a2e8885fc8015d3e6f5775df186e443e0964a11c3/distro-1.9.0.tar.gz\", hash = \"sha256:2fa77c6fd8940f116ee1d6b94a2f90b13b5ea8d019b98bc8bafdcabcdd9bdbed\", size = 60722, upload-time = \"2023-12-24T09:54:32.31Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/12/b3/231ffd4ab1fc9d679809f356cebee130ac7daa00d6d6f3206dd4fd137e9e/distro-1.9.0-py3-none-any.whl\", hash = \"sha256:7bffd925d65168f85027d8da9af6bddab658135b840670a223589bc0c8ef02b2\", size = 20277, upload-time = \"2023-12-24T09:54:30.421Z\" },\n+]\n+\n+[[package]]\n+name = \"fastapi\"\n+version = \"0.116.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"pydantic\" },\n+    { name = \"starlette\" },\n+    { name = \"typing-extensions\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/78/d7/6c8b3bfe33eeffa208183ec037fee0cce9f7f024089ab1c5d12ef04bd27c/fastapi-0.116.1.tar.gz\", hash = \"sha256:ed52cbf946abfd70c5a0dccb24673f0670deeb517a88b3544d03c2a6bf283143\", size = 296485, upload-time = \"2025-07-11T16:22:32.057Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/e5/47/d63c60f59a59467fda0f93f46335c9d18526d7071f025cb5b89d5353ea42/fastapi-0.116.1-py3-none-any.whl\", hash = \"sha256:c46ac7c312df840f0c9e220f7964bada936781bc4e2e6eb71f1c4d7553786565\", size = 95631, upload-time = \"2025-07-11T16:22:30.485Z\" },\n+]\n+\n+[[package]]\n+name = \"greenlet\"\n+version = \"3.2.4\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/03/b8/704d753a5a45507a7aab61f18db9509302ed3d0a27ac7e0359ec2905b1a6/greenlet-3.2.4.tar.gz\", hash = \"sha256:0dca0d95ff849f9a364385f36ab49f50065d76964944638be9691e1832e9f86d\", size = 188260, upload-time = \"2025-08-07T13:24:33.51Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/49/e8/58c7f85958bda41dafea50497cbd59738c5c43dbbea5ee83d651234398f4/greenlet-3.2.4-cp313-cp313-macosx_11_0_universal2.whl\", hash = \"sha256:1a921e542453fe531144e91e1feedf12e07351b1cf6c9e8a3325ea600a715a31\", size = 272814, upload-time = \"2025-08-07T13:15:50.011Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/62/dd/b9f59862e9e257a16e4e610480cfffd29e3fae018a68c2332090b53aac3d/greenlet-3.2.4-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:cd3c8e693bff0fff6ba55f140bf390fa92c994083f838fece0f63be121334945\", size = 641073, upload-time = \"2025-08-07T13:42:57.23Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/f7/0b/bc13f787394920b23073ca3b6c4a7a21396301ed75a655bcb47196b50e6e/greenlet-3.2.4-cp313-cp313-manylinux2014_ppc64le.manylinux_2_17_ppc64le.whl\", hash = \"sha256:710638eb93b1fa52823aa91bf75326f9ecdfd5e0466f00789246a5280f4ba0fc\", size = 655191, upload-time = \"2025-08-07T13:45:29.752Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/f2/d6/6adde57d1345a8d0f14d31e4ab9c23cfe8e2cd39c3baf7674b4b0338d266/greenlet-3.2.4-cp313-cp313-manylinux2014_s390x.manylinux_2_17_s390x.whl\", hash = \"sha256:c5111ccdc9c88f423426df3fd1811bfc40ed66264d35aa373420a34377efc98a\", size = 649516, upload-time = \"2025-08-07T13:53:16.314Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/7f/3b/3a3328a788d4a473889a2d403199932be55b1b0060f4ddd96ee7cdfcad10/greenlet-3.2.4-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:d76383238584e9711e20ebe14db6c88ddcedc1829a9ad31a584389463b5aa504\", size = 652169, upload-time = \"2025-08-07T13:18:32.861Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ee/43/3cecdc0349359e1a527cbf2e3e28e5f8f06d3343aaf82ca13437a9aa290f/greenlet-3.2.4-cp313-cp313-manylinux_2_24_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:23768528f2911bcd7e475210822ffb5254ed10d71f4028387e5a99b4c6699671\", size = 610497, upload-time = \"2025-08-07T13:18:31.636Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b8/19/06b6cf5d604e2c382a6f31cafafd6f33d5dea706f4db7bdab184bad2b21d/greenlet-3.2.4-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:00fadb3fedccc447f517ee0d3fd8fe49eae949e1cd0f6a611818f4f6fb7dc83b\", size = 1121662, upload-time = \"2025-08-07T13:42:41.117Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a2/15/0d5e4e1a66fab130d98168fe984c509249c833c1a3c16806b90f253ce7b9/greenlet-3.2.4-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:d25c5091190f2dc0eaa3f950252122edbbadbb682aa7b1ef2f8af0f8c0afefae\", size = 1149210, upload-time = \"2025-08-07T13:18:24.072Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/0b/55/2321e43595e6801e105fcfdee02b34c0f996eb71e6ddffca6b10b7e1d771/greenlet-3.2.4-cp313-cp313-win_amd64.whl\", hash = \"sha256:554b03b6e73aaabec3745364d6239e9e012d64c68ccd0b8430c64ccc14939a8b\", size = 299685, upload-time = \"2025-08-07T13:24:38.824Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/22/5c/85273fd7cc388285632b0498dbbab97596e04b154933dfe0f3e68156c68c/greenlet-3.2.4-cp314-cp314-macosx_11_0_universal2.whl\", hash = \"sha256:49a30d5fda2507ae77be16479bdb62a660fa51b1eb4928b524975b3bde77b3c0\", size = 273586, upload-time = \"2025-08-07T13:16:08.004Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d1/75/10aeeaa3da9332c2e761e4c50d4c3556c21113ee3f0afa2cf5769946f7a3/greenlet-3.2.4-cp314-cp314-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:299fd615cd8fc86267b47597123e3f43ad79c9d8a22bebdce535e53550763e2f\", size = 686346, upload-time = \"2025-08-07T13:42:59.944Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c0/aa/687d6b12ffb505a4447567d1f3abea23bd20e73a5bed63871178e0831b7a/greenlet-3.2.4-cp314-cp314-manylinux2014_ppc64le.manylinux_2_17_ppc64le.whl\", hash = \"sha256:c17b6b34111ea72fc5a4e4beec9711d2226285f0386ea83477cbb97c30a3f3a5\", size = 699218, upload-time = \"2025-08-07T13:45:30.969Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/dc/8b/29aae55436521f1d6f8ff4e12fb676f3400de7fcf27fccd1d4d17fd8fecd/greenlet-3.2.4-cp314-cp314-manylinux2014_s390x.manylinux_2_17_s390x.whl\", hash = \"sha256:b4a1870c51720687af7fa3e7cda6d08d801dae660f75a76f3845b642b4da6ee1\", size = 694659, upload-time = \"2025-08-07T13:53:17.759Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/92/2e/ea25914b1ebfde93b6fc4ff46d6864564fba59024e928bdc7de475affc25/greenlet-3.2.4-cp314-cp314-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:061dc4cf2c34852b052a8620d40f36324554bc192be474b9e9770e8c042fd735\", size = 695355, upload-time = \"2025-08-07T13:18:34.517Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/72/60/fc56c62046ec17f6b0d3060564562c64c862948c9d4bc8aa807cf5bd74f4/greenlet-3.2.4-cp314-cp314-manylinux_2_24_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:44358b9bf66c8576a9f57a590d5f5d6e72fa4228b763d0e43fee6d3b06d3a337\", size = 657512, upload-time = \"2025-08-07T13:18:33.969Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e3/a5/6ddab2b4c112be95601c13428db1d8b6608a8b6039816f2ba09c346c08fc/greenlet-3.2.4-cp314-cp314-win_amd64.whl\", hash = \"sha256:e37ab26028f12dbb0ff65f29a8d3d44a765c61e729647bf2ddfbbed621726f01\", size = 303425, upload-time = \"2025-08-07T13:32:27.59Z\" },\n+]\n+\n+[[package]]\n+name = \"groq\"\n+version = \"0.31.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"anyio\" },\n+    { name = \"distro\" },\n+    { name = \"httpx\" },\n+    { name = \"pydantic\" },\n+    { name = \"sniffio\" },\n+    { name = \"typing-extensions\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/66/a2/77fd1460e7d55859219223719aa44ae8902a3a1ad333cd5faf330eb0b894/groq-0.31.0.tar.gz\", hash = \"sha256:182252e9bf0d696df607c137cbafa851d2c84aaf94bcfe9165c0bc231043490c\", size = 136237, upload-time = \"2025-08-05T23:14:01.183Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/ab/f8/14672d69a91495f43462c5490067eeafc30346e81bda1a62848e897f9bc3/groq-0.31.0-py3-none-any.whl\", hash = \"sha256:5e3c7ec9728b7cccf913da982a9b5ebb46dc18a070b35e12a3d6a1e12d6b0f7f\", size = 131365, upload-time = \"2025-08-05T23:13:59.768Z\" },\n+]\n+\n+[[package]]\n+name = \"h11\"\n+version = \"0.16.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/01/ee/02a2c011bdab74c6fb3c75474d40b3052059d95df7e73351460c8588d963/h11-0.16.0.tar.gz\", hash = \"sha256:4e35b956cf45792e4caa5885e69fba00bdbc6ffafbfa020300e549b208ee5ff1\", size = 101250, upload-time = \"2025-04-24T03:35:25.427Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/04/4b/29cac41a4d98d144bf5f6d33995617b185d14b22401f75ca86f384e87ff1/h11-0.16.0-py3-none-any.whl\", hash = \"sha256:63cf8bbe7522de3bf65932fda1d9c2772064ffb3dae62d55932da54b31cb6c86\", size = 37515, upload-time = \"2025-04-24T03:35:24.344Z\" },\n+]\n+\n+[[package]]\n+name = \"httpcore\"\n+version = \"1.0.9\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"certifi\" },\n+    { name = \"h11\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/06/94/82699a10bca87a5556c9c59b5963f2d039dbd239f25bc2a63907a05a14cb/httpcore-1.0.9.tar.gz\", hash = \"sha256:6e34463af53fd2ab5d807f399a9b45ea31c3dfa2276f15a2c3f00afff6e176e8\", size = 85484, upload-time = \"2025-04-24T22:06:22.219Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/7e/f5/f66802a942d491edb555dd61e3a9961140fd64c90bce1eafd741609d334d/httpcore-1.0.9-py3-none-any.whl\", hash = \"sha256:2d400746a40668fc9dec9810239072b40b4484b640a8c38fd654a024c7a1bf55\", size = 78784, upload-time = \"2025-04-24T22:06:20.566Z\" },\n+]\n+\n+[[package]]\n+name = \"httptools\"\n+version = \"0.6.4\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/a7/9a/ce5e1f7e131522e6d3426e8e7a490b3a01f39a6696602e1c4f33f9e94277/httptools-0.6.4.tar.gz\", hash = \"sha256:4e93eee4add6493b59a5c514da98c939b244fce4a0d8879cd3f466562f4b7d5c\", size = 240639, upload-time = \"2024-10-16T19:45:08.902Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/94/a3/9fe9ad23fd35f7de6b91eeb60848986058bd8b5a5c1e256f5860a160cc3e/httptools-0.6.4-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:ade273d7e767d5fae13fa637f4d53b6e961fb7fd93c7797562663f0171c26660\", size = 197214, upload-time = \"2024-10-16T19:44:38.738Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ea/d9/82d5e68bab783b632023f2fa31db20bebb4e89dfc4d2293945fd68484ee4/httptools-0.6.4-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:856f4bc0478ae143bad54a4242fccb1f3f86a6e1be5548fecfd4102061b3a083\", size = 102431, upload-time = \"2024-10-16T19:44:39.818Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/96/c1/cb499655cbdbfb57b577734fde02f6fa0bbc3fe9fb4d87b742b512908dff/httptools-0.6.4-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:322d20ea9cdd1fa98bd6a74b77e2ec5b818abdc3d36695ab402a0de8ef2865a3\", size = 473121, upload-time = \"2024-10-16T19:44:41.189Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/af/71/ee32fd358f8a3bb199b03261f10921716990808a675d8160b5383487a317/httptools-0.6.4-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4d87b29bd4486c0093fc64dea80231f7c7f7eb4dc70ae394d70a495ab8436071\", size = 473805, upload-time = \"2024-10-16T19:44:42.384Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8a/0a/0d4df132bfca1507114198b766f1737d57580c9ad1cf93c1ff673e3387be/httptools-0.6.4-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:342dd6946aa6bda4b8f18c734576106b8a31f2fe31492881a9a160ec84ff4bd5\", size = 448858, upload-time = \"2024-10-16T19:44:43.959Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1e/6a/787004fdef2cabea27bad1073bf6a33f2437b4dbd3b6fb4a9d71172b1c7c/httptools-0.6.4-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:4b36913ba52008249223042dca46e69967985fb4051951f94357ea681e1f5dc0\", size = 452042, upload-time = \"2024-10-16T19:44:45.071Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/4d/dc/7decab5c404d1d2cdc1bb330b1bf70e83d6af0396fd4fc76fc60c0d522bf/httptools-0.6.4-cp313-cp313-win_amd64.whl\", hash = \"sha256:28908df1b9bb8187393d5b5db91435ccc9c8e891657f9cbb42a2541b44c82fc8\", size = 87682, upload-time = \"2024-10-16T19:44:46.46Z\" },\n+]\n+\n+[[package]]\n+name = \"httpx\"\n+version = \"0.28.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"anyio\" },\n+    { name = \"certifi\" },\n+    { name = \"httpcore\" },\n+    { name = \"idna\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/b1/df/48c586a5fe32a0f01324ee087459e112ebb7224f646c0b5023f5e79e9956/httpx-0.28.1.tar.gz\", hash = \"sha256:75e98c5f16b0f35b567856f597f06ff2270a374470a5c2392242528e3e3e42fc\", size = 141406, upload-time = \"2024-12-06T15:37:23.222Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/2a/39/e50c7c3a983047577ee07d2a9e53faf5a69493943ec3f6a384bdc792deb2/httpx-0.28.1-py3-none-any.whl\", hash = \"sha256:d909fcccc110f8c7faf814ca82a9a4d816bc5a6dbfea25d6591d6985b8ba59ad\", size = 73517, upload-time = \"2024-12-06T15:37:21.509Z\" },\n+]\n+\n+[[package]]\n+name = \"httpx-sse\"\n+version = \"0.4.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/6e/fa/66bd985dd0b7c109a3bcb89272ee0bfb7e2b4d06309ad7b38ff866734b2a/httpx_sse-0.4.1.tar.gz\", hash = \"sha256:8f44d34414bc7b21bf3602713005c5df4917884f76072479b21f68befa4ea26e\", size = 12998, upload-time = \"2025-06-24T13:21:05.71Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/25/0a/6269e3473b09aed2dab8aa1a600c70f31f00ae1349bee30658f7e358a159/httpx_sse-0.4.1-py3-none-any.whl\", hash = \"sha256:cba42174344c3a5b06f255ce65b350880f962d99ead85e776f23c6618a377a37\", size = 8054, upload-time = \"2025-06-24T13:21:04.772Z\" },\n+]\n+\n+[[package]]\n+name = \"idna\"\n+version = \"3.10\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/f1/70/7703c29685631f5a7590aa73f1f1d3fa9a380e654b86af429e0934a32f7d/idna-3.10.tar.gz\", hash = \"sha256:12f65c9b470abda6dc35cf8e63cc574b1c52b11df2c86030af0ac09b01b13ea9\", size = 190490, upload-time = \"2024-09-15T18:07:39.745Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/76/c6/c88e154df9c4e1a2a66ccf0005a88dfb2650c1dffb6f5ce603dfbd452ce3/idna-3.10-py3-none-any.whl\", hash = \"sha256:946d195a0d259cbba61165e88e65941f16e9b36ea6ddb97f00452bae8b1287d3\", size = 70442, upload-time = \"2024-09-15T18:07:37.964Z\" },\n+]\n+\n+[[package]]\n+name = \"jiter\"\n+version = \"0.10.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/ee/9d/ae7ddb4b8ab3fb1b51faf4deb36cb48a4fbbd7cb36bad6a5fca4741306f7/jiter-0.10.0.tar.gz\", hash = \"sha256:07a7142c38aacc85194391108dc91b5b57093c978a9932bd86a36862759d9500\", size = 162759, upload-time = \"2025-05-18T19:04:59.73Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/2e/b0/279597e7a270e8d22623fea6c5d4eeac328e7d95c236ed51a2b884c54f70/jiter-0.10.0-cp313-cp313-macosx_10_12_x86_64.whl\", hash = \"sha256:e0588107ec8e11b6f5ef0e0d656fb2803ac6cf94a96b2b9fc675c0e3ab5e8644\", size = 311617, upload-time = \"2025-05-18T19:04:02.078Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/91/e3/0916334936f356d605f54cc164af4060e3e7094364add445a3bc79335d46/jiter-0.10.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:cafc4628b616dc32530c20ee53d71589816cf385dd9449633e910d596b1f5c8a\", size = 318947, upload-time = \"2025-05-18T19:04:03.347Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/6a/8e/fd94e8c02d0e94539b7d669a7ebbd2776e51f329bb2c84d4385e8063a2ad/jiter-0.10.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:520ef6d981172693786a49ff5b09eda72a42e539f14788124a07530f785c3ad6\", size = 344618, upload-time = \"2025-05-18T19:04:04.709Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/6f/b0/f9f0a2ec42c6e9c2e61c327824687f1e2415b767e1089c1d9135f43816bd/jiter-0.10.0-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:554dedfd05937f8fc45d17ebdf298fe7e0c77458232bcb73d9fbbf4c6455f5b3\", size = 368829, upload-time = \"2025-05-18T19:04:06.912Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e8/57/5bbcd5331910595ad53b9fd0c610392ac68692176f05ae48d6ce5c852967/jiter-0.10.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:5bc299da7789deacf95f64052d97f75c16d4fc8c4c214a22bf8d859a4288a1c2\", size = 491034, upload-time = \"2025-05-18T19:04:08.222Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/9b/be/c393df00e6e6e9e623a73551774449f2f23b6ec6a502a3297aeeece2c65a/jiter-0.10.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5161e201172de298a8a1baad95eb85db4fb90e902353b1f6a41d64ea64644e25\", size = 388529, upload-time = \"2025-05-18T19:04:09.566Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/42/3e/df2235c54d365434c7f150b986a6e35f41ebdc2f95acea3036d99613025d/jiter-0.10.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2e2227db6ba93cb3e2bf67c87e594adde0609f146344e8207e8730364db27041\", size = 350671, upload-time = \"2025-05-18T19:04:10.98Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c6/77/71b0b24cbcc28f55ab4dbfe029f9a5b73aeadaba677843fc6dc9ed2b1d0a/jiter-0.10.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:15acb267ea5e2c64515574b06a8bf393fbfee6a50eb1673614aa45f4613c0cca\", size = 390864, upload-time = \"2025-05-18T19:04:12.722Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/6a/d3/ef774b6969b9b6178e1d1e7a89a3bd37d241f3d3ec5f8deb37bbd203714a/jiter-0.10.0-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:901b92f2e2947dc6dfcb52fd624453862e16665ea909a08398dde19c0731b7f4\", size = 522989, upload-time = \"2025-05-18T19:04:14.261Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/0c/41/9becdb1d8dd5d854142f45a9d71949ed7e87a8e312b0bede2de849388cb9/jiter-0.10.0-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:d0cb9a125d5a3ec971a094a845eadde2db0de85b33c9f13eb94a0c63d463879e\", size = 513495, upload-time = \"2025-05-18T19:04:15.603Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/9c/36/3468e5a18238bdedae7c4d19461265b5e9b8e288d3f86cd89d00cbb48686/jiter-0.10.0-cp313-cp313-win32.whl\", hash = \"sha256:48a403277ad1ee208fb930bdf91745e4d2d6e47253eedc96e2559d1e6527006d\", size = 211289, upload-time = \"2025-05-18T19:04:17.541Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/7e/07/1c96b623128bcb913706e294adb5f768fb7baf8db5e1338ce7b4ee8c78ef/jiter-0.10.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:75f9eb72ecb640619c29bf714e78c9c46c9c4eaafd644bf78577ede459f330d4\", size = 205074, upload-time = \"2025-05-18T19:04:19.21Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/54/46/caa2c1342655f57d8f0f2519774c6d67132205909c65e9aa8255e1d7b4f4/jiter-0.10.0-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:28ed2a4c05a1f32ef0e1d24c2611330219fed727dae01789f4a335617634b1ca\", size = 318225, upload-time = \"2025-05-18T19:04:20.583Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/43/84/c7d44c75767e18946219ba2d703a5a32ab37b0bc21886a97bc6062e4da42/jiter-0.10.0-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:14a4c418b1ec86a195f1ca69da8b23e8926c752b685af665ce30777233dfe070\", size = 350235, upload-time = \"2025-05-18T19:04:22.363Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/01/16/f5a0135ccd968b480daad0e6ab34b0c7c5ba3bc447e5088152696140dcb3/jiter-0.10.0-cp313-cp313t-win_amd64.whl\", hash = \"sha256:d7bfed2fe1fe0e4dda6ef682cee888ba444b21e7a6553e03252e4feb6cf0adca\", size = 207278, upload-time = \"2025-05-18T19:04:23.627Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1c/9b/1d646da42c3de6c2188fdaa15bce8ecb22b635904fc68be025e21249ba44/jiter-0.10.0-cp314-cp314-macosx_10_12_x86_64.whl\", hash = \"sha256:5e9251a5e83fab8d87799d3e1a46cb4b7f2919b895c6f4483629ed2446f66522\", size = 310866, upload-time = \"2025-05-18T19:04:24.891Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ad/0e/26538b158e8a7c7987e94e7aeb2999e2e82b1f9d2e1f6e9874ddf71ebda0/jiter-0.10.0-cp314-cp314-macosx_11_0_arm64.whl\", hash = \"sha256:023aa0204126fe5b87ccbcd75c8a0d0261b9abdbbf46d55e7ae9f8e22424eeb8\", size = 318772, upload-time = \"2025-05-18T19:04:26.161Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/7b/fb/d302893151caa1c2636d6574d213e4b34e31fd077af6050a9c5cbb42f6fb/jiter-0.10.0-cp314-cp314-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3c189c4f1779c05f75fc17c0c1267594ed918996a231593a21a5ca5438445216\", size = 344534, upload-time = \"2025-05-18T19:04:27.495Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/01/d8/5780b64a149d74e347c5128d82176eb1e3241b1391ac07935693466d6219/jiter-0.10.0-cp314-cp314-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:15720084d90d1098ca0229352607cd68256c76991f6b374af96f36920eae13c4\", size = 369087, upload-time = \"2025-05-18T19:04:28.896Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e8/5b/f235a1437445160e777544f3ade57544daf96ba7e96c1a5b24a6f7ac7004/jiter-0.10.0-cp314-cp314-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e4f2fb68e5f1cfee30e2b2a09549a00683e0fde4c6a2ab88c94072fc33cb7426\", size = 490694, upload-time = \"2025-05-18T19:04:30.183Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/85/a9/9c3d4617caa2ff89cf61b41e83820c27ebb3f7b5fae8a72901e8cd6ff9be/jiter-0.10.0-cp314-cp314-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:ce541693355fc6da424c08b7edf39a2895f58d6ea17d92cc2b168d20907dee12\", size = 388992, upload-time = \"2025-05-18T19:04:32.028Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/68/b1/344fd14049ba5c94526540af7eb661871f9c54d5f5601ff41a959b9a0bbd/jiter-0.10.0-cp314-cp314-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:31c50c40272e189d50006ad5c73883caabb73d4e9748a688b216e85a9a9ca3b9\", size = 351723, upload-time = \"2025-05-18T19:04:33.467Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/41/89/4c0e345041186f82a31aee7b9d4219a910df672b9fef26f129f0cda07a29/jiter-0.10.0-cp314-cp314-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:fa3402a2ff9815960e0372a47b75c76979d74402448509ccd49a275fa983ef8a\", size = 392215, upload-time = \"2025-05-18T19:04:34.827Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/55/58/ee607863e18d3f895feb802154a2177d7e823a7103f000df182e0f718b38/jiter-0.10.0-cp314-cp314-musllinux_1_1_aarch64.whl\", hash = \"sha256:1956f934dca32d7bb647ea21d06d93ca40868b505c228556d3373cbd255ce853\", size = 522762, upload-time = \"2025-05-18T19:04:36.19Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/15/d0/9123fb41825490d16929e73c212de9a42913d68324a8ce3c8476cae7ac9d/jiter-0.10.0-cp314-cp314-musllinux_1_1_x86_64.whl\", hash = \"sha256:fcedb049bdfc555e261d6f65a6abe1d5ad68825b7202ccb9692636c70fcced86\", size = 513427, upload-time = \"2025-05-18T19:04:37.544Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d8/b3/2bd02071c5a2430d0b70403a34411fc519c2f227da7b03da9ba6a956f931/jiter-0.10.0-cp314-cp314-win32.whl\", hash = \"sha256:ac509f7eccca54b2a29daeb516fb95b6f0bd0d0d8084efaf8ed5dfc7b9f0b357\", size = 210127, upload-time = \"2025-05-18T19:04:38.837Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/03/0c/5fe86614ea050c3ecd728ab4035534387cd41e7c1855ef6c031f1ca93e3f/jiter-0.10.0-cp314-cp314t-macosx_11_0_arm64.whl\", hash = \"sha256:5ed975b83a2b8639356151cef5c0d597c68376fc4922b45d0eb384ac058cfa00\", size = 318527, upload-time = \"2025-05-18T19:04:40.612Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b3/4a/4175a563579e884192ba6e81725fc0448b042024419be8d83aa8a80a3f44/jiter-0.10.0-cp314-cp314t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3aa96f2abba33dc77f79b4cf791840230375f9534e5fac927ccceb58c5e604a5\", size = 354213, upload-time = \"2025-05-18T19:04:41.894Z\" },\n+]\n+\n+[[package]]\n+name = \"jsonpatch\"\n+version = \"1.33\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"jsonpointer\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/42/78/18813351fe5d63acad16aec57f94ec2b70a09e53ca98145589e185423873/jsonpatch-1.33.tar.gz\", hash = \"sha256:9fcd4009c41e6d12348b4a0ff2563ba56a2923a7dfee731d004e212e1ee5030c\", size = 21699, upload-time = \"2023-06-26T12:07:29.144Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/73/07/02e16ed01e04a374e644b575638ec7987ae846d25ad97bcc9945a3ee4b0e/jsonpatch-1.33-py2.py3-none-any.whl\", hash = \"sha256:0ae28c0cd062bbd8b8ecc26d7d164fbbea9652a1a3693f3b956c1eae5145dade\", size = 12898, upload-time = \"2023-06-16T21:01:28.466Z\" },\n+]\n+\n+[[package]]\n+name = \"jsonpointer\"\n+version = \"3.0.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/6a/0a/eebeb1fa92507ea94016a2a790b93c2ae41a7e18778f85471dc54475ed25/jsonpointer-3.0.0.tar.gz\", hash = \"sha256:2b2d729f2091522d61c3b31f82e11870f60b68f43fbc705cb76bf4b832af59ef\", size = 9114, upload-time = \"2024-06-10T19:24:42.462Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/71/92/5e77f98553e9e75130c78900d000368476aed74276eb8ae8796f65f00918/jsonpointer-3.0.0-py2.py3-none-any.whl\", hash = \"sha256:13e088adc14fca8b6aa8177c044e12701e6ad4b28ff10e65f2267a90109c9942\", size = 7595, upload-time = \"2024-06-10T19:24:40.698Z\" },\n+]\n+\n+[[package]]\n+name = \"jsonschema\"\n+version = \"4.25.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"attrs\" },\n+    { name = \"jsonschema-specifications\" },\n+    { name = \"referencing\" },\n+    { name = \"rpds-py\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/74/69/f7185de793a29082a9f3c7728268ffb31cb5095131a9c139a74078e27336/jsonschema-4.25.1.tar.gz\", hash = \"sha256:e4a9655ce0da0c0b67a085847e00a3a51449e1157f4f75e9fb5aa545e122eb85\", size = 357342, upload-time = \"2025-08-18T17:03:50.038Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/bf/9c/8c95d856233c1f82500c2450b8c68576b4cf1c871db3afac5c34ff84e6fd/jsonschema-4.25.1-py3-none-any.whl\", hash = \"sha256:3fba0169e345c7175110351d456342c364814cfcf3b964ba4587f22915230a63\", size = 90040, upload-time = \"2025-08-18T17:03:48.373Z\" },\n+]\n+\n+[[package]]\n+name = \"jsonschema-specifications\"\n+version = \"2025.4.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"referencing\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/bf/ce/46fbd9c8119cfc3581ee5643ea49464d168028cfb5caff5fc0596d0cf914/jsonschema_specifications-2025.4.1.tar.gz\", hash = \"sha256:630159c9f4dbea161a6a2205c3011cc4f18ff381b189fff48bb39b9bf26ae608\", size = 15513, upload-time = \"2025-04-23T12:34:07.418Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/01/0e/b27cdbaccf30b890c40ed1da9fd4a3593a5cf94dae54fb34f8a4b74fcd3f/jsonschema_specifications-2025.4.1-py3-none-any.whl\", hash = \"sha256:4653bffbd6584f7de83a67e0d620ef16900b390ddc7939d56684d6c81e33f1af\", size = 18437, upload-time = \"2025-04-23T12:34:05.422Z\" },\n+]\n+\n+[[package]]\n+name = \"langchain\"\n+version = \"0.3.27\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"langchain-core\" },\n+    { name = \"langchain-text-splitters\" },\n+    { name = \"langsmith\" },\n+    { name = \"pydantic\" },\n+    { name = \"pyyaml\" },\n+    { name = \"requests\" },\n+    { name = \"sqlalchemy\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/83/f6/f4f7f3a56626fe07e2bb330feb61254dbdf06c506e6b59a536a337da51cf/langchain-0.3.27.tar.gz\", hash = \"sha256:aa6f1e6274ff055d0fd36254176770f356ed0a8994297d1df47df341953cec62\", size = 10233809, upload-time = \"2025-07-24T14:42:32.959Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/f6/d5/4861816a95b2f6993f1360cfb605aacb015506ee2090433a71de9cca8477/langchain-0.3.27-py3-none-any.whl\", hash = \"sha256:7b20c4f338826acb148d885b20a73a16e410ede9ee4f19bb02011852d5f98798\", size = 1018194, upload-time = \"2025-07-24T14:42:30.23Z\" },\n+]\n+\n+[[package]]\n+name = \"langchain-core\"\n+version = \"0.3.75\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"jsonpatch\" },\n+    { name = \"langsmith\" },\n+    { name = \"packaging\" },\n+    { name = \"pydantic\" },\n+    { name = \"pyyaml\" },\n+    { name = \"tenacity\" },\n+    { name = \"typing-extensions\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/06/63/270b71a23e849984505ddc7c5c9fd3f4bd9cb14b1a484ee44c4e51c33cc2/langchain_core-0.3.75.tar.gz\", hash = \"sha256:ab0eb95a06ed6043f76162e6086b45037690cb70b7f090bd83b5ebb8a05b70ed\", size = 570876, upload-time = \"2025-08-26T15:24:12.246Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/fb/42/0d0221cce6f168f644d7d96cb6c87c4e42fc55d2941da7a36e970e3ab8ab/langchain_core-0.3.75-py3-none-any.whl\", hash = \"sha256:03ca1fadf955ee3c7d5806a841f4b3a37b816acea5e61a7e6ba1298c05eea7f5\", size = 443986, upload-time = \"2025-08-26T15:24:10.883Z\" },\n+]\n+\n+[[package]]\n+name = \"langchain-groq\"\n+version = \"0.3.7\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"groq\" },\n+    { name = \"langchain-core\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/54/9d/1bbe0b8d8368ac1df2eabd14be93e052cddac969573b910db4457237bce2/langchain_groq-0.3.7.tar.gz\", hash = \"sha256:4d799aa565f31e51c632f0f20c588f21c5a0e6c6dd2303efaef43351f9b41bd4\", size = 25004, upload-time = \"2025-08-05T19:20:45.436Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/9d/31/5f32d15105d0160c3753113d5cca5787236c6d2717d25126597d8adc39dd/langchain_groq-0.3.7-py3-none-any.whl\", hash = \"sha256:2e13870534c032fe1facde3a6ab1fb59af6f1e7a2763125ad549d8e403fc9d00\", size = 16418, upload-time = \"2025-08-05T19:20:44.4Z\" },\n+]\n+\n+[[package]]\n+name = \"langchain-mcp-adapters\"\n+version = \"0.1.9\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"langchain-core\" },\n+    { name = \"mcp\" },\n+    { name = \"typing-extensions\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/b9/74/e36003a43136f9095a5f968c730fbfe894f94284ebe6d2b50bb17d41b8b5/langchain_mcp_adapters-0.1.9.tar.gz\", hash = \"sha256:0018cf7b5f7bc4c044e05ec20fcb9ebe345311c8d1060c61d411188001ab3aab\", size = 22101, upload-time = \"2025-07-09T15:56:14.455Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/a4/eb/9e98822d3db22beff44449a8f61fca208d4f59d592a7ce67ce4c400b8f8f/langchain_mcp_adapters-0.1.9-py3-none-any.whl\", hash = \"sha256:fd131009c60c9e5a864f96576bbe757fc1809abd604891cb2e5d6e8aebd6975c\", size = 15300, upload-time = \"2025-07-09T15:56:13.316Z\" },\n+]\n+\n+[[package]]\n+name = \"langchain-openai\"\n+version = \"0.3.32\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"langchain-core\" },\n+    { name = \"openai\" },\n+    { name = \"tiktoken\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/7e/19/167d9ad1b6bb75406c4acceda01ef0dc1101c7f629f74441fe8a787fb190/langchain_openai-0.3.32.tar.gz\", hash = \"sha256:782ad669bd1bdb964456d8882c5178717adcfceecb482cc20005f770e43d346d\", size = 782982, upload-time = \"2025-08-26T14:25:27.917Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/e6/3d/e22ee65fff79afe7bdfbd67844243eb279b440c882dad9e4262dcc87131f/langchain_openai-0.3.32-py3-none-any.whl\", hash = \"sha256:3354f76822f7cc76d8069831fe2a77f9bc7ff3b4f13af788bd94e4c6e853b400\", size = 74531, upload-time = \"2025-08-26T14:25:26.542Z\" },\n+]\n+\n+[[package]]\n+name = \"langchain-text-splitters\"\n+version = \"0.3.11\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"langchain-core\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/11/43/dcda8fd25f0b19cb2835f2f6bb67f26ad58634f04ac2d8eae00526b0fa55/langchain_text_splitters-0.3.11.tar.gz\", hash = \"sha256:7a50a04ada9a133bbabb80731df7f6ddac51bc9f1b9cab7fa09304d71d38a6cc\", size = 46458, upload-time = \"2025-08-31T23:02:58.316Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/58/0d/41a51b40d24ff0384ec4f7ab8dd3dcea8353c05c973836b5e289f1465d4f/langchain_text_splitters-0.3.11-py3-none-any.whl\", hash = \"sha256:cf079131166a487f1372c8ab5d0bfaa6c0a4291733d9c43a34a16ac9bcd6a393\", size = 33845, upload-time = \"2025-08-31T23:02:57.195Z\" },\n+]\n+\n+[[package]]\n+name = \"langgraph\"\n+version = \"0.6.6\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"langchain-core\" },\n+    { name = \"langgraph-checkpoint\" },\n+    { name = \"langgraph-prebuilt\" },\n+    { name = \"langgraph-sdk\" },\n+    { name = \"pydantic\" },\n+    { name = \"xxhash\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/02/2b/59f0b2985467ec84b006dd41ec31c0aae43a7f16722d5514292500b871c9/langgraph-0.6.6.tar.gz\", hash = \"sha256:e7d3cefacf356f8c01721b166b67b3bf581659d5361a3530f59ecd9b8448eca7\", size = 465452, upload-time = \"2025-08-20T04:02:13.915Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/e4/ef/81fce0a80925cd89987aa641ff01573e3556a24f2d205112862a69df7fd3/langgraph-0.6.6-py3-none-any.whl\", hash = \"sha256:a2283a5236abba6c8307c1a485c04e8a0f0ffa2be770878782a7bf2deb8d7954\", size = 153274, upload-time = \"2025-08-20T04:02:12.251Z\" },\n+]\n+\n+[[package]]\n+name = \"langgraph-checkpoint\"\n+version = \"2.1.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"langchain-core\" },\n+    { name = \"ormsgpack\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/73/3e/d00eb2b56c3846a0cabd2e5aa71c17a95f882d4f799a6ffe96a19b55eba9/langgraph_checkpoint-2.1.1.tar.gz\", hash = \"sha256:72038c0f9e22260cb9bff1f3ebe5eb06d940b7ee5c1e4765019269d4f21cf92d\", size = 136256, upload-time = \"2025-07-17T13:07:52.411Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/4c/dd/64686797b0927fb18b290044be12ae9d4df01670dce6bb2498d5ab65cb24/langgraph_checkpoint-2.1.1-py3-none-any.whl\", hash = \"sha256:5a779134fd28134a9a83d078be4450bbf0e0c79fdf5e992549658899e6fc5ea7\", size = 43925, upload-time = \"2025-07-17T13:07:51.023Z\" },\n+]\n+\n+[[package]]\n+name = \"langgraph-prebuilt\"\n+version = \"0.6.4\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"langchain-core\" },\n+    { name = \"langgraph-checkpoint\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/d6/21/9b198d11732101ee8cdf30af98d0b4f11254c768de15173e57f5260fd14b/langgraph_prebuilt-0.6.4.tar.gz\", hash = \"sha256:e9e53b906ee5df46541d1dc5303239e815d3ec551e52bb03dd6463acc79ec28f\", size = 125695, upload-time = \"2025-08-07T18:17:57.333Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/0a/7f/973b0d9729d9693d6e5b4bc5f3ae41138d194cb7b16b0ed230020beeb13a/langgraph_prebuilt-0.6.4-py3-none-any.whl\", hash = \"sha256:819f31d88b84cb2729ff1b79db2d51e9506b8fb7aaacfc0d359d4fe16e717344\", size = 28025, upload-time = \"2025-08-07T18:17:56.493Z\" },\n+]\n+\n+[[package]]\n+name = \"langgraph-sdk\"\n+version = \"0.2.5\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"httpx\" },\n+    { name = \"orjson\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/42/72/37943b367f480b4761c052e86b0c380ecb928cdccf1d5c85d569e036c06f/langgraph_sdk-0.2.5.tar.gz\", hash = \"sha256:b28aa0f485811388465ac5d2a19d728ab84b59a8900cdfcf0f4e8177802cbf62\", size = 79816, upload-time = \"2025-09-03T00:51:14.285Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/f1/2c/9e5a0259601253f89f8b50095a6a2541ff6beb9041c92e64bd8e05e77c29/langgraph_sdk-0.2.5-py3-none-any.whl\", hash = \"sha256:a837a7a3c5e16ba55a3952037f9d8e247d3e001e9a0e3b07aacef55861e5dc58\", size = 54052, upload-time = \"2025-09-03T00:51:13.057Z\" },\n+]\n+\n+[[package]]\n+name = \"langsmith\"\n+version = \"0.4.23\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"httpx\" },\n+    { name = \"orjson\", marker = \"platform_python_implementation != 'PyPy'\" },\n+    { name = \"packaging\" },\n+    { name = \"pydantic\" },\n+    { name = \"requests\" },\n+    { name = \"requests-toolbelt\" },\n+    { name = \"zstandard\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/26/59/1f92c84585da3bad6d76050f32811198dd2bb4e6a0a63f7b0041b75344ee/langsmith-0.4.23.tar.gz\", hash = \"sha256:d8af9c6bf69c377a5a0a1c56bd742ab6acfce794e3c4a6993b08e76ee2397998\", size = 939141, upload-time = \"2025-09-02T22:06:38.606Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/3c/63/c132d3e356702668bf3103771e2398fee963c22715a88501d55361761f8f/langsmith-0.4.23-py3-none-any.whl\", hash = \"sha256:2b7cc692c537d5e48c2932277a69c35a89ff5b153828281194e2af34aeda985f\", size = 378757, upload-time = \"2025-09-02T22:06:36.621Z\" },\n+]\n+\n+[[package]]\n+name = \"mcp\"\n+version = \"1.13.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"anyio\" },\n+    { name = \"httpx\" },\n+    { name = \"httpx-sse\" },\n+    { name = \"jsonschema\" },\n+    { name = \"pydantic\" },\n+    { name = \"pydantic-settings\" },\n+    { name = \"python-multipart\" },\n+    { name = \"pywin32\", marker = \"sys_platform == 'win32'\" },\n+    { name = \"sse-starlette\" },\n+    { name = \"starlette\" },\n+    { name = \"uvicorn\", marker = \"sys_platform != 'emscripten'\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/66/3c/82c400c2d50afdac4fbefb5b4031fd327e2ad1f23ccef8eee13c5909aa48/mcp-1.13.1.tar.gz\", hash = \"sha256:165306a8fd7991dc80334edd2de07798175a56461043b7ae907b279794a834c5\", size = 438198, upload-time = \"2025-08-22T09:22:16.061Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/19/3f/d085c7f49ade6d273b185d61ec9405e672b6433f710ea64a90135a8dd445/mcp-1.13.1-py3-none-any.whl\", hash = \"sha256:c314e7c8bd477a23ba3ef472ee5a32880316c42d03e06dcfa31a1cc7a73b65df\", size = 161494, upload-time = \"2025-08-22T09:22:14.705Z\" },\n+]\n+\n+[[package]]\n+name = \"nest-asyncio\"\n+version = \"1.6.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/83/f8/51569ac65d696c8ecbee95938f89d4abf00f47d58d48f6fbabfe8f0baefe/nest_asyncio-1.6.0.tar.gz\", hash = \"sha256:6f172d5449aca15afd6c646851f4e31e02c598d553a667e38cafa997cfec55fe\", size = 7418, upload-time = \"2024-01-21T14:25:19.227Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/a0/c4/c2971a3ba4c6103a3d10c4b0f24f461ddc027f0f09763220cf35ca1401b3/nest_asyncio-1.6.0-py3-none-any.whl\", hash = \"sha256:87af6efd6b5e897c81050477ef65c62e2b2f35d51703cae01aff2905b1852e1c\", size = 5195, upload-time = \"2024-01-21T14:25:17.223Z\" },\n+]\n+\n+[[package]]\n+name = \"openai\"\n+version = \"1.104.2\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"anyio\" },\n+    { name = \"distro\" },\n+    { name = \"httpx\" },\n+    { name = \"jiter\" },\n+    { name = \"pydantic\" },\n+    { name = \"sniffio\" },\n+    { name = \"tqdm\" },\n+    { name = \"typing-extensions\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/94/dc/965b3528ed0435b717acca45e2541d94bd827c0520ce172366323c9edcab/openai-1.104.2.tar.gz\", hash = \"sha256:9b582ead9dd208753f89dae8e36b6548c6ada076e87ba3db36630e29239661ab\", size = 557160, upload-time = \"2025-09-02T21:42:31.054Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/46/9c/d0b56971e5584aea338bb00d3ca96a7f6694dff77006581b21cd773497ce/openai-1.104.2-py3-none-any.whl\", hash = \"sha256:0148951da12ea651f890ef38f8adef75b78c053dba37ea2bdba857c8945860d4\", size = 928160, upload-time = \"2025-09-02T21:42:28.678Z\" },\n+]\n+\n+[[package]]\n+name = \"orjson\"\n+version = \"3.11.3\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/be/4d/8df5f83256a809c22c4d6792ce8d43bb503be0fb7a8e4da9025754b09658/orjson-3.11.3.tar.gz\", hash = \"sha256:1c0603b1d2ffcd43a411d64797a19556ef76958aef1c182f22dc30860152a98a\", size = 5482394, upload-time = \"2025-08-26T17:46:43.171Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/fc/79/8932b27293ad35919571f77cb3693b5906cf14f206ef17546052a241fdf6/orjson-3.11.3-cp313-cp313-macosx_10_15_x86_64.macosx_11_0_arm64.macosx_10_15_universal2.whl\", hash = \"sha256:af40c6612fd2a4b00de648aa26d18186cd1322330bd3a3cc52f87c699e995810\", size = 238127, upload-time = \"2025-08-26T17:45:38.146Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1c/82/cb93cd8cf132cd7643b30b6c5a56a26c4e780c7a145db6f83de977b540ce/orjson-3.11.3-cp313-cp313-macosx_15_0_arm64.whl\", hash = \"sha256:9f1587f26c235894c09e8b5b7636a38091a9e6e7fe4531937534749c04face43\", size = 127494, upload-time = \"2025-08-26T17:45:39.57Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a4/b8/2d9eb181a9b6bb71463a78882bcac1027fd29cf62c38a40cc02fc11d3495/orjson-3.11.3-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:61dcdad16da5bb486d7227a37a2e789c429397793a6955227cedbd7252eb5a27\", size = 123017, upload-time = \"2025-08-26T17:45:40.876Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b4/14/a0e971e72d03b509190232356d54c0f34507a05050bd026b8db2bf2c192c/orjson-3.11.3-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:11c6d71478e2cbea0a709e8a06365fa63da81da6498a53e4c4f065881d21ae8f\", size = 127898, upload-time = \"2025-08-26T17:45:42.188Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8e/af/dc74536722b03d65e17042cc30ae586161093e5b1f29bccda24765a6ae47/orjson-3.11.3-cp313-cp313-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ff94112e0098470b665cb0ed06efb187154b63649403b8d5e9aedeb482b4548c\", size = 130742, upload-time = \"2025-08-26T17:45:43.511Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/62/e6/7a3b63b6677bce089fe939353cda24a7679825c43a24e49f757805fc0d8a/orjson-3.11.3-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ae8b756575aaa2a855a75192f356bbda11a89169830e1439cfb1a3e1a6dde7be\", size = 132377, upload-time = \"2025-08-26T17:45:45.525Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fc/cd/ce2ab93e2e7eaf518f0fd15e3068b8c43216c8a44ed82ac2b79ce5cef72d/orjson-3.11.3-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:c9416cc19a349c167ef76135b2fe40d03cea93680428efee8771f3e9fb66079d\", size = 135313, upload-time = \"2025-08-26T17:45:46.821Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d0/b4/f98355eff0bd1a38454209bbc73372ce351ba29933cb3e2eba16c04b9448/orjson-3.11.3-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b822caf5b9752bc6f246eb08124c3d12bf2175b66ab74bac2ef3bbf9221ce1b2\", size = 132908, upload-time = \"2025-08-26T17:45:48.126Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/eb/92/8f5182d7bc2a1bed46ed960b61a39af8389f0ad476120cd99e67182bfb6d/orjson-3.11.3-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:414f71e3bdd5573893bf5ecdf35c32b213ed20aa15536fe2f588f946c318824f\", size = 130905, upload-time = \"2025-08-26T17:45:49.414Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1a/60/c41ca753ce9ffe3d0f67b9b4c093bdd6e5fdb1bc53064f992f66bb99954d/orjson-3.11.3-cp313-cp313-musllinux_1_2_armv7l.whl\", hash = \"sha256:828e3149ad8815dc14468f36ab2a4b819237c155ee1370341b91ea4c8672d2ee\", size = 403812, upload-time = \"2025-08-26T17:45:51.085Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/dd/13/e4a4f16d71ce1868860db59092e78782c67082a8f1dc06a3788aef2b41bc/orjson-3.11.3-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:ac9e05f25627ffc714c21f8dfe3a579445a5c392a9c8ae7ba1d0e9fb5333f56e\", size = 146277, upload-time = \"2025-08-26T17:45:52.851Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8d/8b/bafb7f0afef9344754a3a0597a12442f1b85a048b82108ef2c956f53babd/orjson-3.11.3-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:e44fbe4000bd321d9f3b648ae46e0196d21577cf66ae684a96ff90b1f7c93633\", size = 135418, upload-time = \"2025-08-26T17:45:54.806Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/60/d4/bae8e4f26afb2c23bea69d2f6d566132584d1c3a5fe89ee8c17b718cab67/orjson-3.11.3-cp313-cp313-win32.whl\", hash = \"sha256:2039b7847ba3eec1f5886e75e6763a16e18c68a63efc4b029ddf994821e2e66b\", size = 136216, upload-time = \"2025-08-26T17:45:57.182Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/88/76/224985d9f127e121c8cad882cea55f0ebe39f97925de040b75ccd4b33999/orjson-3.11.3-cp313-cp313-win_amd64.whl\", hash = \"sha256:29be5ac4164aa8bdcba5fa0700a3c9c316b411d8ed9d39ef8a882541bd452fae\", size = 131362, upload-time = \"2025-08-26T17:45:58.56Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e2/cf/0dce7a0be94bd36d1346be5067ed65ded6adb795fdbe3abd234c8d576d01/orjson-3.11.3-cp313-cp313-win_arm64.whl\", hash = \"sha256:18bd1435cb1f2857ceb59cfb7de6f92593ef7b831ccd1b9bfb28ca530e539dce\", size = 125989, upload-time = \"2025-08-26T17:45:59.95Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ef/77/d3b1fef1fc6aaeed4cbf3be2b480114035f4df8fa1a99d2dac1d40d6e924/orjson-3.11.3-cp314-cp314-macosx_10_15_x86_64.macosx_11_0_arm64.macosx_10_15_universal2.whl\", hash = \"sha256:cf4b81227ec86935568c7edd78352a92e97af8da7bd70bdfdaa0d2e0011a1ab4\", size = 238115, upload-time = \"2025-08-26T17:46:01.669Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e4/6d/468d21d49bb12f900052edcfbf52c292022d0a323d7828dc6376e6319703/orjson-3.11.3-cp314-cp314-macosx_15_0_arm64.whl\", hash = \"sha256:bc8bc85b81b6ac9fc4dae393a8c159b817f4c2c9dee5d12b773bddb3b95fc07e\", size = 127493, upload-time = \"2025-08-26T17:46:03.466Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/67/46/1e2588700d354aacdf9e12cc2d98131fb8ac6f31ca65997bef3863edb8ff/orjson-3.11.3-cp314-cp314-manylinux_2_34_aarch64.whl\", hash = \"sha256:88dcfc514cfd1b0de038443c7b3e6a9797ffb1b3674ef1fd14f701a13397f82d\", size = 122998, upload-time = \"2025-08-26T17:46:04.803Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3b/94/11137c9b6adb3779f1b34fd98be51608a14b430dbc02c6d41134fbba484c/orjson-3.11.3-cp314-cp314-manylinux_2_34_x86_64.whl\", hash = \"sha256:d61cd543d69715d5fc0a690c7c6f8dcc307bc23abef9738957981885f5f38229\", size = 132915, upload-time = \"2025-08-26T17:46:06.237Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/10/61/dccedcf9e9bcaac09fdabe9eaee0311ca92115699500efbd31950d878833/orjson-3.11.3-cp314-cp314-musllinux_1_2_aarch64.whl\", hash = \"sha256:2b7b153ed90ababadbef5c3eb39549f9476890d339cf47af563aea7e07db2451\", size = 130907, upload-time = \"2025-08-26T17:46:07.581Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/0e/fd/0e935539aa7b08b3ca0f817d73034f7eb506792aae5ecc3b7c6e679cdf5f/orjson-3.11.3-cp314-cp314-musllinux_1_2_armv7l.whl\", hash = \"sha256:7909ae2460f5f494fecbcd10613beafe40381fd0316e35d6acb5f3a05bfda167\", size = 403852, upload-time = \"2025-08-26T17:46:08.982Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/4a/2b/50ae1a5505cd1043379132fdb2adb8a05f37b3e1ebffe94a5073321966fd/orjson-3.11.3-cp314-cp314-musllinux_1_2_i686.whl\", hash = \"sha256:2030c01cbf77bc67bee7eef1e7e31ecf28649353987775e3583062c752da0077\", size = 146309, upload-time = \"2025-08-26T17:46:10.576Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/cd/1d/a473c158e380ef6f32753b5f39a69028b25ec5be331c2049a2201bde2e19/orjson-3.11.3-cp314-cp314-musllinux_1_2_x86_64.whl\", hash = \"sha256:a0169ebd1cbd94b26c7a7ad282cf5c2744fce054133f959e02eb5265deae1872\", size = 135424, upload-time = \"2025-08-26T17:46:12.386Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/da/09/17d9d2b60592890ff7382e591aa1d9afb202a266b180c3d4049b1ec70e4a/orjson-3.11.3-cp314-cp314-win32.whl\", hash = \"sha256:0c6d7328c200c349e3a4c6d8c83e0a5ad029bdc2d417f234152bf34842d0fc8d\", size = 136266, upload-time = \"2025-08-26T17:46:13.853Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/15/58/358f6846410a6b4958b74734727e582ed971e13d335d6c7ce3e47730493e/orjson-3.11.3-cp314-cp314-win_amd64.whl\", hash = \"sha256:317bbe2c069bbc757b1a2e4105b64aacd3bc78279b66a6b9e51e846e4809f804\", size = 131351, upload-time = \"2025-08-26T17:46:15.27Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/28/01/d6b274a0635be0468d4dbd9cafe80c47105937a0d42434e805e67cd2ed8b/orjson-3.11.3-cp314-cp314-win_arm64.whl\", hash = \"sha256:e8f6a7a27d7b7bec81bd5924163e9af03d49bbb63013f107b48eb5d16db711bc\", size = 125985, upload-time = \"2025-08-26T17:46:16.67Z\" },\n+]\n+\n+[[package]]\n+name = \"ormsgpack\"\n+version = \"1.10.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/92/36/44eed5ef8ce93cded76a576780bab16425ce7876f10d3e2e6265e46c21ea/ormsgpack-1.10.0.tar.gz\", hash = \"sha256:7f7a27efd67ef22d7182ec3b7fa7e9d147c3ad9be2a24656b23c989077e08b16\", size = 58629, upload-time = \"2025-05-24T19:07:53.944Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/61/f8/ec5f4e03268d0097545efaab2893aa63f171cf2959cb0ea678a5690e16a1/ormsgpack-1.10.0-cp313-cp313-macosx_10_12_x86_64.macosx_11_0_arm64.macosx_10_12_universal2.whl\", hash = \"sha256:8d816d45175a878993b7372bd5408e0f3ec5a40f48e2d5b9d8f1cc5d31b61f1f\", size = 376806, upload-time = \"2025-05-24T19:07:29.555Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c1/19/b3c53284aad1e90d4d7ed8c881a373d218e16675b8b38e3569d5b40cc9b8/ormsgpack-1.10.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a90345ccb058de0f35262893751c603b6376b05f02be2b6f6b7e05d9dd6d5643\", size = 204433, upload-time = \"2025-05-24T19:07:30.977Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/09/0b/845c258f59df974a20a536c06cace593698491defdd3d026a8a5f9b6e745/ormsgpack-1.10.0-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:144b5e88f1999433e54db9d637bae6fe21e935888be4e3ac3daecd8260bd454e\", size = 215549, upload-time = \"2025-05-24T19:07:32.345Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/61/56/57fce8fb34ca6c9543c026ebebf08344c64dbb7b6643d6ddd5355d37e724/ormsgpack-1.10.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2190b352509d012915921cca76267db136cd026ddee42f1b0d9624613cc7058c\", size = 216747, upload-time = \"2025-05-24T19:07:34.075Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b8/3f/655b5f6a2475c8d209f5348cfbaaf73ce26237b92d79ef2ad439407dd0fa/ormsgpack-1.10.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:86fd9c1737eaba43d3bb2730add9c9e8b5fbed85282433705dd1b1e88ea7e6fb\", size = 384785, upload-time = \"2025-05-24T19:07:35.83Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/4b/94/687a0ad8afd17e4bce1892145d6a1111e58987ddb176810d02a1f3f18686/ormsgpack-1.10.0-cp313-cp313-musllinux_1_2_armv7l.whl\", hash = \"sha256:33afe143a7b61ad21bb60109a86bb4e87fec70ef35db76b89c65b17e32da7935\", size = 479076, upload-time = \"2025-05-24T19:07:37.533Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c8/34/68925232e81e0e062a2f0ac678f62aa3b6f7009d6a759e19324dbbaebae7/ormsgpack-1.10.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:f23d45080846a7b90feabec0d330a9cc1863dc956728412e4f7986c80ab3a668\", size = 390446, upload-time = \"2025-05-24T19:07:39.469Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/12/ad/f4e1a36a6d1714afb7ffb74b3ababdcb96529cf4e7a216f9f7c8eda837b6/ormsgpack-1.10.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:534d18acb805c75e5fba09598bf40abe1851c853247e61dda0c01f772234da69\", size = 121399, upload-time = \"2025-05-24T19:07:40.854Z\" },\n+]\n+\n+[[package]]\n+name = \"packaging\"\n+version = \"25.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/a1/d4/1fc4078c65507b51b96ca8f8c3ba19e6a61c8253c72794544580a7b6c24d/packaging-25.0.tar.gz\", hash = \"sha256:d443872c98d677bf60f6a1f2f8c1cb748e8fe762d2bf9d3148b5599295b0fc4f\", size = 165727, upload-time = \"2025-04-19T11:48:59.673Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/20/12/38679034af332785aac8774540895e234f4d07f7545804097de4b666afd8/packaging-25.0-py3-none-any.whl\", hash = \"sha256:29572ef2b1f17581046b3a2227d5c611fb25ec70ca1ba8554b24b0e69331a484\", size = 66469, upload-time = \"2025-04-19T11:48:57.875Z\" },\n+]\n+\n+[[package]]\n+name = \"pydantic\"\n+version = \"2.11.7\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"annotated-types\" },\n+    { name = \"pydantic-core\" },\n+    { name = \"typing-extensions\" },\n+    { name = \"typing-inspection\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/00/dd/4325abf92c39ba8623b5af936ddb36ffcfe0beae70405d456ab1fb2f5b8c/pydantic-2.11.7.tar.gz\", hash = \"sha256:d989c3c6cb79469287b1569f7447a17848c998458d49ebe294e975b9baf0f0db\", size = 788350, upload-time = \"2025-06-14T08:33:17.137Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/6a/c0/ec2b1c8712ca690e5d61979dee872603e92b8a32f94cc1b72d53beab008a/pydantic-2.11.7-py3-none-any.whl\", hash = \"sha256:dde5df002701f6de26248661f6835bbe296a47bf73990135c7d07ce741b9623b\", size = 444782, upload-time = \"2025-06-14T08:33:14.905Z\" },\n+]\n+\n+[[package]]\n+name = \"pydantic-core\"\n+version = \"2.33.2\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"typing-extensions\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/ad/88/5f2260bdfae97aabf98f1778d43f69574390ad787afb646292a638c923d4/pydantic_core-2.33.2.tar.gz\", hash = \"sha256:7cb8bc3605c29176e1b105350d2e6474142d7c1bd1d9327c4a9bdb46bf827acc\", size = 435195, upload-time = \"2025-04-23T18:33:52.104Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/46/8c/99040727b41f56616573a28771b1bfa08a3d3fe74d3d513f01251f79f172/pydantic_core-2.33.2-cp313-cp313-macosx_10_12_x86_64.whl\", hash = \"sha256:1082dd3e2d7109ad8b7da48e1d4710c8d06c253cbc4a27c1cff4fbcaa97a9e3f\", size = 2015688, upload-time = \"2025-04-23T18:31:53.175Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3a/cc/5999d1eb705a6cefc31f0b4a90e9f7fc400539b1a1030529700cc1b51838/pydantic_core-2.33.2-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:f517ca031dfc037a9c07e748cefd8d96235088b83b4f4ba8939105d20fa1dcd6\", size = 1844808, upload-time = \"2025-04-23T18:31:54.79Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/6f/5e/a0a7b8885c98889a18b6e376f344da1ef323d270b44edf8174d6bce4d622/pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0a9f2c9dd19656823cb8250b0724ee9c60a82f3cdf68a080979d13092a3b0fef\", size = 1885580, upload-time = \"2025-04-23T18:31:57.393Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3b/2a/953581f343c7d11a304581156618c3f592435523dd9d79865903272c256a/pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:2b0a451c263b01acebe51895bfb0e1cc842a5c666efe06cdf13846c7418caa9a\", size = 1973859, upload-time = \"2025-04-23T18:31:59.065Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e6/55/f1a813904771c03a3f97f676c62cca0c0a4138654107c1b61f19c644868b/pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1ea40a64d23faa25e62a70ad163571c0b342b8bf66d5fa612ac0dec4f069d916\", size = 2120810, upload-time = \"2025-04-23T18:32:00.78Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/aa/c3/053389835a996e18853ba107a63caae0b9deb4a276c6b472931ea9ae6e48/pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:0fb2d542b4d66f9470e8065c5469ec676978d625a8b7a363f07d9a501a9cb36a\", size = 2676498, upload-time = \"2025-04-23T18:32:02.418Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/eb/3c/f4abd740877a35abade05e437245b192f9d0ffb48bbbbd708df33d3cda37/pydantic_core-2.33.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9fdac5d6ffa1b5a83bca06ffe7583f5576555e6c8b3a91fbd25ea7780f825f7d\", size = 2000611, upload-time = \"2025-04-23T18:32:04.152Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/59/a7/63ef2fed1837d1121a894d0ce88439fe3e3b3e48c7543b2a4479eb99c2bd/pydantic_core-2.33.2-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:04a1a413977ab517154eebb2d326da71638271477d6ad87a769102f7c2488c56\", size = 2107924, upload-time = \"2025-04-23T18:32:06.129Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/04/8f/2551964ef045669801675f1cfc3b0d74147f4901c3ffa42be2ddb1f0efc4/pydantic_core-2.33.2-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:c8e7af2f4e0194c22b5b37205bfb293d166a7344a5b0d0eaccebc376546d77d5\", size = 2063196, upload-time = \"2025-04-23T18:32:08.178Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/26/bd/d9602777e77fc6dbb0c7db9ad356e9a985825547dce5ad1d30ee04903918/pydantic_core-2.33.2-cp313-cp313-musllinux_1_1_armv7l.whl\", hash = \"sha256:5c92edd15cd58b3c2d34873597a1e20f13094f59cf88068adb18947df5455b4e\", size = 2236389, upload-time = \"2025-04-23T18:32:10.242Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/42/db/0e950daa7e2230423ab342ae918a794964b053bec24ba8af013fc7c94846/pydantic_core-2.33.2-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:65132b7b4a1c0beded5e057324b7e16e10910c106d43675d9bd87d4f38dde162\", size = 2239223, upload-time = \"2025-04-23T18:32:12.382Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/58/4d/4f937099c545a8a17eb52cb67fe0447fd9a373b348ccfa9a87f141eeb00f/pydantic_core-2.33.2-cp313-cp313-win32.whl\", hash = \"sha256:52fb90784e0a242bb96ec53f42196a17278855b0f31ac7c3cc6f5c1ec4811849\", size = 1900473, upload-time = \"2025-04-23T18:32:14.034Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a0/75/4a0a9bac998d78d889def5e4ef2b065acba8cae8c93696906c3a91f310ca/pydantic_core-2.33.2-cp313-cp313-win_amd64.whl\", hash = \"sha256:c083a3bdd5a93dfe480f1125926afcdbf2917ae714bdb80b36d34318b2bec5d9\", size = 1955269, upload-time = \"2025-04-23T18:32:15.783Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/f9/86/1beda0576969592f1497b4ce8e7bc8cbdf614c352426271b1b10d5f0aa64/pydantic_core-2.33.2-cp313-cp313-win_arm64.whl\", hash = \"sha256:e80b087132752f6b3d714f041ccf74403799d3b23a72722ea2e6ba2e892555b9\", size = 1893921, upload-time = \"2025-04-23T18:32:18.473Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a4/7d/e09391c2eebeab681df2b74bfe6c43422fffede8dc74187b2b0bf6fd7571/pydantic_core-2.33.2-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:61c18fba8e5e9db3ab908620af374db0ac1baa69f0f32df4f61ae23f15e586ac\", size = 1806162, upload-time = \"2025-04-23T18:32:20.188Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/f1/3d/847b6b1fed9f8ed3bb95a9ad04fbd0b212e832d4f0f50ff4d9ee5a9f15cf/pydantic_core-2.33.2-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:95237e53bb015f67b63c91af7518a62a8660376a6a0db19b89acc77a4d6199f5\", size = 1981560, upload-time = \"2025-04-23T18:32:22.354Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/6f/9a/e73262f6c6656262b5fdd723ad90f518f579b7bc8622e43a942eec53c938/pydantic_core-2.33.2-cp313-cp313t-win_amd64.whl\", hash = \"sha256:c2fc0a768ef76c15ab9238afa6da7f69895bb5d1ee83aeea2e3509af4472d0b9\", size = 1935777, upload-time = \"2025-04-23T18:32:25.088Z\" },\n+]\n+\n+[[package]]\n+name = \"pydantic-settings\"\n+version = \"2.10.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"pydantic\" },\n+    { name = \"python-dotenv\" },\n+    { name = \"typing-inspection\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/68/85/1ea668bbab3c50071ca613c6ab30047fb36ab0da1b92fa8f17bbc38fd36c/pydantic_settings-2.10.1.tar.gz\", hash = \"sha256:06f0062169818d0f5524420a360d632d5857b83cffd4d42fe29597807a1614ee\", size = 172583, upload-time = \"2025-06-24T13:26:46.841Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/58/f0/427018098906416f580e3cf1366d3b1abfb408a0652e9f31600c24a1903c/pydantic_settings-2.10.1-py3-none-any.whl\", hash = \"sha256:a60952460b99cf661dc25c29c0ef171721f98bfcb52ef8d9ea4c943d7c8cc796\", size = 45235, upload-time = \"2025-06-24T13:26:45.485Z\" },\n+]\n+\n+[[package]]\n+name = \"python-dotenv\"\n+version = \"1.1.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/f6/b0/4bc07ccd3572a2f9df7e6782f52b0c6c90dcbb803ac4a167702d7d0dfe1e/python_dotenv-1.1.1.tar.gz\", hash = \"sha256:a8a6399716257f45be6a007360200409fce5cda2661e3dec71d23dc15f6189ab\", size = 41978, upload-time = \"2025-06-24T04:21:07.341Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/5f/ed/539768cf28c661b5b068d66d96a2f155c4971a5d55684a514c1a0e0dec2f/python_dotenv-1.1.1-py3-none-any.whl\", hash = \"sha256:31f23644fe2602f88ff55e1f5c79ba497e01224ee7737937930c448e4d0e24dc\", size = 20556, upload-time = \"2025-06-24T04:21:06.073Z\" },\n+]\n+\n+[[package]]\n+name = \"python-multipart\"\n+version = \"0.0.20\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/f3/87/f44d7c9f274c7ee665a29b885ec97089ec5dc034c7f3fafa03da9e39a09e/python_multipart-0.0.20.tar.gz\", hash = \"sha256:8dd0cab45b8e23064ae09147625994d090fa46f5b0d1e13af944c331a7fa9d13\", size = 37158, upload-time = \"2024-12-16T19:45:46.972Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/45/58/38b5afbc1a800eeea951b9285d3912613f2603bdf897a4ab0f4bd7f405fc/python_multipart-0.0.20-py3-none-any.whl\", hash = \"sha256:8a62d3a8335e06589fe01f2a3e178cdcc632f3fbe0d492ad9ee0ec35aab1f104\", size = 24546, upload-time = \"2024-12-16T19:45:44.423Z\" },\n+]\n+\n+[[package]]\n+name = \"pywin32\"\n+version = \"311\"\n+source = { registry = \"https://pypi.org/simple\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/a5/be/3fd5de0979fcb3994bfee0d65ed8ca9506a8a1260651b86174f6a86f52b3/pywin32-311-cp313-cp313-win32.whl\", hash = \"sha256:f95ba5a847cba10dd8c4d8fefa9f2a6cf283b8b88ed6178fa8a6c1ab16054d0d\", size = 8705700, upload-time = \"2025-07-14T20:13:26.471Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e3/28/e0a1909523c6890208295a29e05c2adb2126364e289826c0a8bc7297bd5c/pywin32-311-cp313-cp313-win_amd64.whl\", hash = \"sha256:718a38f7e5b058e76aee1c56ddd06908116d35147e133427e59a3983f703a20d\", size = 9494700, upload-time = \"2025-07-14T20:13:28.243Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/04/bf/90339ac0f55726dce7d794e6d79a18a91265bdf3aa70b6b9ca52f35e022a/pywin32-311-cp313-cp313-win_arm64.whl\", hash = \"sha256:7b4075d959648406202d92a2310cb990fea19b535c7f4a78d3f5e10b926eeb8a\", size = 8709318, upload-time = \"2025-07-14T20:13:30.348Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c9/31/097f2e132c4f16d99a22bfb777e0fd88bd8e1c634304e102f313af69ace5/pywin32-311-cp314-cp314-win32.whl\", hash = \"sha256:b7a2c10b93f8986666d0c803ee19b5990885872a7de910fc460f9b0c2fbf92ee\", size = 8840714, upload-time = \"2025-07-14T20:13:32.449Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/90/4b/07c77d8ba0e01349358082713400435347df8426208171ce297da32c313d/pywin32-311-cp314-cp314-win_amd64.whl\", hash = \"sha256:3aca44c046bd2ed8c90de9cb8427f581c479e594e99b5c0bb19b29c10fd6cb87\", size = 9656800, upload-time = \"2025-07-14T20:13:34.312Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c0/d2/21af5c535501a7233e734b8af901574572da66fcc254cb35d0609c9080dd/pywin32-311-cp314-cp314-win_arm64.whl\", hash = \"sha256:a508e2d9025764a8270f93111a970e1d0fbfc33f4153b388bb649b7eec4f9b42\", size = 8932540, upload-time = \"2025-07-14T20:13:36.379Z\" },\n+]\n+\n+[[package]]\n+name = \"pyyaml\"\n+version = \"6.0.2\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/54/ed/79a089b6be93607fa5cdaedf301d7dfb23af5f25c398d5ead2525b063e17/pyyaml-6.0.2.tar.gz\", hash = \"sha256:d584d9ec91ad65861cc08d42e834324ef890a082e591037abe114850ff7bbc3e\", size = 130631, upload-time = \"2024-08-06T20:33:50.674Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/ef/e3/3af305b830494fa85d95f6d95ef7fa73f2ee1cc8ef5b495c7c3269fb835f/PyYAML-6.0.2-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:efdca5630322a10774e8e98e1af481aad470dd62c3170801852d752aa7a783ba\", size = 181309, upload-time = \"2024-08-06T20:32:43.4Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/45/9f/3b1c20a0b7a3200524eb0076cc027a970d320bd3a6592873c85c92a08731/PyYAML-6.0.2-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:50187695423ffe49e2deacb8cd10510bc361faac997de9efef88badc3bb9e2d1\", size = 171679, upload-time = \"2024-08-06T20:32:44.801Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/7c/9a/337322f27005c33bcb656c655fa78325b730324c78620e8328ae28b64d0c/PyYAML-6.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0ffe8360bab4910ef1b9e87fb812d8bc0a308b0d0eef8c8f44e0254ab3b07133\", size = 733428, upload-time = \"2024-08-06T20:32:46.432Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a3/69/864fbe19e6c18ea3cc196cbe5d392175b4cf3d5d0ac1403ec3f2d237ebb5/PyYAML-6.0.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:17e311b6c678207928d649faa7cb0d7b4c26a0ba73d41e99c4fff6b6c3276484\", size = 763361, upload-time = \"2024-08-06T20:32:51.188Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/04/24/b7721e4845c2f162d26f50521b825fb061bc0a5afcf9a386840f23ea19fa/PyYAML-6.0.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:70b189594dbe54f75ab3a1acec5f1e3faa7e8cf2f1e08d9b561cb41b845f69d5\", size = 759523, upload-time = \"2024-08-06T20:32:53.019Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/2b/b2/e3234f59ba06559c6ff63c4e10baea10e5e7df868092bf9ab40e5b9c56b6/PyYAML-6.0.2-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:41e4e3953a79407c794916fa277a82531dd93aad34e29c2a514c2c0c5fe971cc\", size = 726660, upload-time = \"2024-08-06T20:32:54.708Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fe/0f/25911a9f080464c59fab9027482f822b86bf0608957a5fcc6eaac85aa515/PyYAML-6.0.2-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:68ccc6023a3400877818152ad9a1033e3db8625d899c72eacb5a668902e4d652\", size = 751597, upload-time = \"2024-08-06T20:32:56.985Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/14/0d/e2c3b43bbce3cf6bd97c840b46088a3031085179e596d4929729d8d68270/PyYAML-6.0.2-cp313-cp313-win32.whl\", hash = \"sha256:bc2fa7c6b47d6bc618dd7fb02ef6fdedb1090ec036abab80d4681424b84c1183\", size = 140527, upload-time = \"2024-08-06T20:33:03.001Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fa/de/02b54f42487e3d3c6efb3f89428677074ca7bf43aae402517bc7cca949f3/PyYAML-6.0.2-cp313-cp313-win_amd64.whl\", hash = \"sha256:8388ee1976c416731879ac16da0aff3f63b286ffdd57cdeb95f3f2e085687563\", size = 156446, upload-time = \"2024-08-06T20:33:04.33Z\" },\n+]\n+\n+[[package]]\n+name = \"referencing\"\n+version = \"0.36.2\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"attrs\" },\n+    { name = \"rpds-py\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/2f/db/98b5c277be99dd18bfd91dd04e1b759cad18d1a338188c936e92f921c7e2/referencing-0.36.2.tar.gz\", hash = \"sha256:df2e89862cd09deabbdba16944cc3f10feb6b3e6f18e902f7cc25609a34775aa\", size = 74744, upload-time = \"2025-01-25T08:48:16.138Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/c1/b1/3baf80dc6d2b7bc27a95a67752d0208e410351e3feb4eb78de5f77454d8d/referencing-0.36.2-py3-none-any.whl\", hash = \"sha256:e8699adbbf8b5c7de96d8ffa0eb5c158b3beafce084968e2ea8bb08c6794dcd0\", size = 26775, upload-time = \"2025-01-25T08:48:14.241Z\" },\n+]\n+\n+[[package]]\n+name = \"regex\"\n+version = \"2025.9.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/b2/5a/4c63457fbcaf19d138d72b2e9b39405954f98c0349b31c601bfcb151582c/regex-2025.9.1.tar.gz\", hash = \"sha256:88ac07b38d20b54d79e704e38aa3bd2c0f8027432164226bdee201a1c0c9c9ff\", size = 400852, upload-time = \"2025-09-01T22:10:10.479Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/98/25/b2959ce90c6138c5142fe5264ee1f9b71a0c502ca4c7959302a749407c79/regex-2025.9.1-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:bc6834727d1b98d710a63e6c823edf6ffbf5792eba35d3fa119531349d4142ef\", size = 485932, upload-time = \"2025-09-01T22:08:57.913Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/49/2e/6507a2a85f3f2be6643438b7bd976e67ad73223692d6988eb1ff444106d3/regex-2025.9.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:c3dc05b6d579875719bccc5f3037b4dc80433d64e94681a0061845bd8863c025\", size = 289568, upload-time = \"2025-09-01T22:08:59.258Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c7/d8/de4a4b57215d99868f1640e062a7907e185ec7476b4b689e2345487c1ff4/regex-2025.9.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:22213527df4c985ec4a729b055a8306272d41d2f45908d7bacb79be0fa7a75ad\", size = 286984, upload-time = \"2025-09-01T22:09:00.835Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/03/15/e8cb403403a57ed316e80661db0e54d7aa2efcd85cb6156f33cc18746922/regex-2025.9.1-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:8e3f6e3c5a5a1adc3f7ea1b5aec89abfc2f4fbfba55dafb4343cd1d084f715b2\", size = 797514, upload-time = \"2025-09-01T22:09:02.538Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e4/26/2446f2b9585fed61faaa7e2bbce3aca7dd8df6554c32addee4c4caecf24a/regex-2025.9.1-cp313-cp313-manylinux2014_ppc64le.manylinux_2_17_ppc64le.manylinux_2_28_ppc64le.whl\", hash = \"sha256:bcb89c02a0d6c2bec9b0bb2d8c78782699afe8434493bfa6b4021cc51503f249\", size = 862586, upload-time = \"2025-09-01T22:09:04.322Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fd/b8/82ffbe9c0992c31bbe6ae1c4b4e21269a5df2559102b90543c9b56724c3c/regex-2025.9.1-cp313-cp313-manylinux2014_s390x.manylinux_2_17_s390x.manylinux_2_28_s390x.whl\", hash = \"sha256:b0e2f95413eb0c651cd1516a670036315b91b71767af83bc8525350d4375ccba\", size = 910815, upload-time = \"2025-09-01T22:09:05.978Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/2f/d8/7303ea38911759c1ee30cc5bc623ee85d3196b733c51fd6703c34290a8d9/regex-2025.9.1-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:09a41dc039e1c97d3c2ed3e26523f748e58c4de3ea7a31f95e1cf9ff973fff5a\", size = 802042, upload-time = \"2025-09-01T22:09:07.865Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fc/0e/6ad51a55ed4b5af512bb3299a05d33309bda1c1d1e1808fa869a0bed31bc/regex-2025.9.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:4f0b4258b161094f66857a26ee938d3fe7b8a5063861e44571215c44fbf0e5df\", size = 786764, upload-time = \"2025-09-01T22:09:09.362Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8d/d5/394e3ffae6baa5a9217bbd14d96e0e5da47bb069d0dbb8278e2681a2b938/regex-2025.9.1-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:bf70e18ac390e6977ea7e56f921768002cb0fa359c4199606c7219854ae332e0\", size = 856557, upload-time = \"2025-09-01T22:09:11.129Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/cd/80/b288d3910c41194ad081b9fb4b371b76b0bbfdce93e7709fc98df27b37dc/regex-2025.9.1-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:b84036511e1d2bb0a4ff1aec26951caa2dea8772b223c9e8a19ed8885b32dbac\", size = 849108, upload-time = \"2025-09-01T22:09:12.877Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d1/cd/5ec76bf626d0d5abdc277b7a1734696f5f3d14fbb4a3e2540665bc305d85/regex-2025.9.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:c2e05dcdfe224047f2a59e70408274c325d019aad96227ab959403ba7d58d2d7\", size = 788201, upload-time = \"2025-09-01T22:09:14.561Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b5/36/674672f3fdead107565a2499f3007788b878188acec6d42bc141c5366c2c/regex-2025.9.1-cp313-cp313-win32.whl\", hash = \"sha256:3b9a62107a7441b81ca98261808fed30ae36ba06c8b7ee435308806bd53c1ed8\", size = 264508, upload-time = \"2025-09-01T22:09:16.193Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/83/ad/931134539515eb64ce36c24457a98b83c1b2e2d45adf3254b94df3735a76/regex-2025.9.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:b38afecc10c177eb34cfae68d669d5161880849ba70c05cbfbe409f08cc939d7\", size = 275469, upload-time = \"2025-09-01T22:09:17.462Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/24/8c/96d34e61c0e4e9248836bf86d69cb224fd222f270fa9045b24e218b65604/regex-2025.9.1-cp313-cp313-win_arm64.whl\", hash = \"sha256:ec329890ad5e7ed9fc292858554d28d58d56bf62cf964faf0aa57964b21155a0\", size = 268586, upload-time = \"2025-09-01T22:09:18.948Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/21/b1/453cbea5323b049181ec6344a803777914074b9726c9c5dc76749966d12d/regex-2025.9.1-cp314-cp314-macosx_10_13_universal2.whl\", hash = \"sha256:72fb7a016467d364546f22b5ae86c45680a4e0de6b2a6f67441d22172ff641f1\", size = 486111, upload-time = \"2025-09-01T22:09:20.734Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/f6/0e/92577f197bd2f7652c5e2857f399936c1876978474ecc5b068c6d8a79c86/regex-2025.9.1-cp314-cp314-macosx_10_13_x86_64.whl\", hash = \"sha256:c9527fa74eba53f98ad86be2ba003b3ebe97e94b6eb2b916b31b5f055622ef03\", size = 289520, upload-time = \"2025-09-01T22:09:22.249Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/af/c6/b472398116cca7ea5a6c4d5ccd0fc543f7fd2492cb0c48d2852a11972f73/regex-2025.9.1-cp314-cp314-macosx_11_0_arm64.whl\", hash = \"sha256:c905d925d194c83a63f92422af7544ec188301451b292c8b487f0543726107ca\", size = 287215, upload-time = \"2025-09-01T22:09:23.657Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/cf/11/f12ecb0cf9ca792a32bb92f758589a84149017467a544f2f6bfb45c0356d/regex-2025.9.1-cp314-cp314-manylinux2014_aarch64.manylinux_2_17_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:74df7c74a63adcad314426b1f4ea6054a5ab25d05b0244f0c07ff9ce640fa597\", size = 797855, upload-time = \"2025-09-01T22:09:25.197Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/46/88/bbb848f719a540fb5997e71310f16f0b33a92c5d4b4d72d4311487fff2a3/regex-2025.9.1-cp314-cp314-manylinux2014_ppc64le.manylinux_2_17_ppc64le.manylinux_2_28_ppc64le.whl\", hash = \"sha256:4f6e935e98ea48c7a2e8be44494de337b57a204470e7f9c9c42f912c414cd6f5\", size = 863363, upload-time = \"2025-09-01T22:09:26.705Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/54/a9/2321eb3e2838f575a78d48e03c1e83ea61bd08b74b7ebbdeca8abc50fc25/regex-2025.9.1-cp314-cp314-manylinux2014_s390x.manylinux_2_17_s390x.manylinux_2_28_s390x.whl\", hash = \"sha256:4a62d033cd9ebefc7c5e466731a508dfabee827d80b13f455de68a50d3c2543d\", size = 910202, upload-time = \"2025-09-01T22:09:28.906Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/33/07/d1d70835d7d11b7e126181f316f7213c4572ecf5c5c97bdbb969fb1f38a2/regex-2025.9.1-cp314-cp314-manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:ef971ebf2b93bdc88d8337238be4dfb851cc97ed6808eb04870ef67589415171\", size = 801808, upload-time = \"2025-09-01T22:09:30.733Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/13/d1/29e4d1bed514ef2bf3a4ead3cb8bb88ca8af94130239a4e68aa765c35b1c/regex-2025.9.1-cp314-cp314-musllinux_1_2_aarch64.whl\", hash = \"sha256:d936a1db208bdca0eca1f2bb2c1ba1d8370b226785c1e6db76e32a228ffd0ad5\", size = 786824, upload-time = \"2025-09-01T22:09:32.61Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/33/27/20d8ccb1bee460faaa851e6e7cc4cfe852a42b70caa1dca22721ba19f02f/regex-2025.9.1-cp314-cp314-musllinux_1_2_ppc64le.whl\", hash = \"sha256:7e786d9e4469698fc63815b8de08a89165a0aa851720eb99f5e0ea9d51dd2b6a\", size = 857406, upload-time = \"2025-09-01T22:09:34.117Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/74/fe/60c6132262dc36430d51e0c46c49927d113d3a38c1aba6a26c7744c84cf3/regex-2025.9.1-cp314-cp314-musllinux_1_2_s390x.whl\", hash = \"sha256:6b81d7dbc5466ad2c57ce3a0ddb717858fe1a29535c8866f8514d785fdb9fc5b\", size = 848593, upload-time = \"2025-09-01T22:09:35.598Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/cc/ae/2d4ff915622fabbef1af28387bf71e7f2f4944a348b8460d061e85e29bf0/regex-2025.9.1-cp314-cp314-musllinux_1_2_x86_64.whl\", hash = \"sha256:cd4890e184a6feb0ef195338a6ce68906a8903a0f2eb7e0ab727dbc0a3156273\", size = 787951, upload-time = \"2025-09-01T22:09:37.139Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/85/37/dc127703a9e715a284cc2f7dbdd8a9776fd813c85c126eddbcbdd1ca5fec/regex-2025.9.1-cp314-cp314-win32.whl\", hash = \"sha256:34679a86230e46164c9e0396b56cab13c0505972343880b9e705083cc5b8ec86\", size = 269833, upload-time = \"2025-09-01T22:09:39.245Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/83/bf/4bed4d3d0570e16771defd5f8f15f7ea2311edcbe91077436d6908956c4a/regex-2025.9.1-cp314-cp314-win_amd64.whl\", hash = \"sha256:a1196e530a6bfa5f4bde029ac5b0295a6ecfaaffbfffede4bbaf4061d9455b70\", size = 278742, upload-time = \"2025-09-01T22:09:40.651Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/cf/3e/7d7ac6fd085023312421e0d69dfabdfb28e116e513fadbe9afe710c01893/regex-2025.9.1-cp314-cp314-win_arm64.whl\", hash = \"sha256:f46d525934871ea772930e997d577d48c6983e50f206ff7b66d4ac5f8941e993\", size = 271860, upload-time = \"2025-09-01T22:09:42.413Z\" },\n+]\n+\n+[[package]]\n+name = \"requests\"\n+version = \"2.32.5\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"certifi\" },\n+    { name = \"charset-normalizer\" },\n+    { name = \"idna\" },\n+    { name = \"urllib3\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/c9/74/b3ff8e6c8446842c3f5c837e9c3dfcfe2018ea6ecef224c710c85ef728f4/requests-2.32.5.tar.gz\", hash = \"sha256:dbba0bac56e100853db0ea71b82b4dfd5fe2bf6d3754a8893c3af500cec7d7cf\", size = 134517, upload-time = \"2025-08-18T20:46:02.573Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/1e/db/4254e3eabe8020b458f1a747140d32277ec7a271daf1d235b70dc0b4e6e3/requests-2.32.5-py3-none-any.whl\", hash = \"sha256:2462f94637a34fd532264295e186976db0f5d453d1cdd31473c85a6a161affb6\", size = 64738, upload-time = \"2025-08-18T20:46:00.542Z\" },\n+]\n+\n+[[package]]\n+name = \"requests-toolbelt\"\n+version = \"1.0.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"requests\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/f3/61/d7545dafb7ac2230c70d38d31cbfe4cc64f7144dc41f6e4e4b78ecd9f5bb/requests-toolbelt-1.0.0.tar.gz\", hash = \"sha256:7681a0a3d047012b5bdc0ee37d7f8f07ebe76ab08caeccfc3921ce23c88d5bc6\", size = 206888, upload-time = \"2023-05-01T04:11:33.229Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/3f/51/d4db610ef29373b879047326cbf6fa98b6c1969d6f6dc423279de2b1be2c/requests_toolbelt-1.0.0-py2.py3-none-any.whl\", hash = \"sha256:cccfdd665f0a24fcf4726e690f65639d272bb0637b9b92dfd91a5568ccf6bd06\", size = 54481, upload-time = \"2023-05-01T04:11:28.427Z\" },\n+]\n+\n+[[package]]\n+name = \"rpds-py\"\n+version = \"0.27.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/e9/dd/2c0cbe774744272b0ae725f44032c77bdcab6e8bcf544bffa3b6e70c8dba/rpds_py-0.27.1.tar.gz\", hash = \"sha256:26a1c73171d10b7acccbded82bf6a586ab8203601e565badc74bbbf8bc5a10f8\", size = 27479, upload-time = \"2025-08-27T12:16:36.024Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/cc/77/610aeee8d41e39080c7e14afa5387138e3c9fa9756ab893d09d99e7d8e98/rpds_py-0.27.1-cp313-cp313-macosx_10_12_x86_64.whl\", hash = \"sha256:e4b9fcfbc021633863a37e92571d6f91851fa656f0180246e84cbd8b3f6b329b\", size = 361741, upload-time = \"2025-08-27T12:13:31.039Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3a/fc/c43765f201c6a1c60be2043cbdb664013def52460a4c7adace89d6682bf4/rpds_py-0.27.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:1441811a96eadca93c517d08df75de45e5ffe68aa3089924f963c782c4b898cf\", size = 345574, upload-time = \"2025-08-27T12:13:32.902Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/20/42/ee2b2ca114294cd9847d0ef9c26d2b0851b2e7e00bf14cc4c0b581df0fc3/rpds_py-0.27.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:55266dafa22e672f5a4f65019015f90336ed31c6383bd53f5e7826d21a0e0b83\", size = 385051, upload-time = \"2025-08-27T12:13:34.228Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fd/e8/1e430fe311e4799e02e2d1af7c765f024e95e17d651612425b226705f910/rpds_py-0.27.1-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:d78827d7ac08627ea2c8e02c9e5b41180ea5ea1f747e9db0915e3adf36b62dcf\", size = 398395, upload-time = \"2025-08-27T12:13:36.132Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/82/95/9dc227d441ff2670651c27a739acb2535ccaf8b351a88d78c088965e5996/rpds_py-0.27.1-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ae92443798a40a92dc5f0b01d8a7c93adde0c4dc965310a29ae7c64d72b9fad2\", size = 524334, upload-time = \"2025-08-27T12:13:37.562Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/87/01/a670c232f401d9ad461d9a332aa4080cd3cb1d1df18213dbd0d2a6a7ab51/rpds_py-0.27.1-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:c46c9dd2403b66a2a3b9720ec4b74d4ab49d4fabf9f03dfdce2d42af913fe8d0\", size = 407691, upload-time = \"2025-08-27T12:13:38.94Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/03/36/0a14aebbaa26fe7fab4780c76f2239e76cc95a0090bdb25e31d95c492fcd/rpds_py-0.27.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2efe4eb1d01b7f5f1939f4ef30ecea6c6b3521eec451fb93191bf84b2a522418\", size = 386868, upload-time = \"2025-08-27T12:13:40.192Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3b/03/8c897fb8b5347ff6c1cc31239b9611c5bf79d78c984430887a353e1409a1/rpds_py-0.27.1-cp313-cp313-manylinux_2_31_riscv64.whl\", hash = \"sha256:15d3b4d83582d10c601f481eca29c3f138d44c92187d197aff663a269197c02d\", size = 405469, upload-time = \"2025-08-27T12:13:41.496Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/da/07/88c60edc2df74850d496d78a1fdcdc7b54360a7f610a4d50008309d41b94/rpds_py-0.27.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:4ed2e16abbc982a169d30d1a420274a709949e2cbdef119fe2ec9d870b42f274\", size = 422125, upload-time = \"2025-08-27T12:13:42.802Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/6b/86/5f4c707603e41b05f191a749984f390dabcbc467cf833769b47bf14ba04f/rpds_py-0.27.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:a75f305c9b013289121ec0f1181931975df78738cdf650093e6b86d74aa7d8dd\", size = 562341, upload-time = \"2025-08-27T12:13:44.472Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b2/92/3c0cb2492094e3cd9baf9e49bbb7befeceb584ea0c1a8b5939dca4da12e5/rpds_py-0.27.1-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:67ce7620704745881a3d4b0ada80ab4d99df390838839921f99e63c474f82cf2\", size = 592511, upload-time = \"2025-08-27T12:13:45.898Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/10/bb/82e64fbb0047c46a168faa28d0d45a7851cd0582f850b966811d30f67ad8/rpds_py-0.27.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:9d992ac10eb86d9b6f369647b6a3f412fc0075cfd5d799530e84d335e440a002\", size = 557736, upload-time = \"2025-08-27T12:13:47.408Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/00/95/3c863973d409210da7fb41958172c6b7dbe7fc34e04d3cc1f10bb85e979f/rpds_py-0.27.1-cp313-cp313-win32.whl\", hash = \"sha256:4f75e4bd8ab8db624e02c8e2fc4063021b58becdbe6df793a8111d9343aec1e3\", size = 221462, upload-time = \"2025-08-27T12:13:48.742Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ce/2c/5867b14a81dc217b56d95a9f2a40fdbc56a1ab0181b80132beeecbd4b2d6/rpds_py-0.27.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:f9025faafc62ed0b75a53e541895ca272815bec18abe2249ff6501c8f2e12b83\", size = 232034, upload-time = \"2025-08-27T12:13:50.11Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c7/78/3958f3f018c01923823f1e47f1cc338e398814b92d83cd278364446fac66/rpds_py-0.27.1-cp313-cp313-win_arm64.whl\", hash = \"sha256:ed10dc32829e7d222b7d3b93136d25a406ba9788f6a7ebf6809092da1f4d279d\", size = 222392, upload-time = \"2025-08-27T12:13:52.587Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/01/76/1cdf1f91aed5c3a7bf2eba1f1c4e4d6f57832d73003919a20118870ea659/rpds_py-0.27.1-cp313-cp313t-macosx_10_12_x86_64.whl\", hash = \"sha256:92022bbbad0d4426e616815b16bc4127f83c9a74940e1ccf3cfe0b387aba0228\", size = 358355, upload-time = \"2025-08-27T12:13:54.012Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c3/6f/bf142541229374287604caf3bb2a4ae17f0a580798fd72d3b009b532db4e/rpds_py-0.27.1-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:47162fdab9407ec3f160805ac3e154df042e577dd53341745fc7fb3f625e6d92\", size = 342138, upload-time = \"2025-08-27T12:13:55.791Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1a/77/355b1c041d6be40886c44ff5e798b4e2769e497b790f0f7fd1e78d17e9a8/rpds_py-0.27.1-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:fb89bec23fddc489e5d78b550a7b773557c9ab58b7946154a10a6f7a214a48b2\", size = 380247, upload-time = \"2025-08-27T12:13:57.683Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d6/a4/d9cef5c3946ea271ce2243c51481971cd6e34f21925af2783dd17b26e815/rpds_py-0.27.1-cp313-cp313t-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:e48af21883ded2b3e9eb48cb7880ad8598b31ab752ff3be6457001d78f416723\", size = 390699, upload-time = \"2025-08-27T12:13:59.137Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3a/06/005106a7b8c6c1a7e91b73169e49870f4af5256119d34a361ae5240a0c1d/rpds_py-0.27.1-cp313-cp313t-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:6f5b7bd8e219ed50299e58551a410b64daafb5017d54bbe822e003856f06a802\", size = 521852, upload-time = \"2025-08-27T12:14:00.583Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e5/3e/50fb1dac0948e17a02eb05c24510a8fe12d5ce8561c6b7b7d1339ab7ab9c/rpds_py-0.27.1-cp313-cp313t-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:08f1e20bccf73b08d12d804d6e1c22ca5530e71659e6673bce31a6bb71c1e73f\", size = 402582, upload-time = \"2025-08-27T12:14:02.034Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/cb/b0/f4e224090dc5b0ec15f31a02d746ab24101dd430847c4d99123798661bfc/rpds_py-0.27.1-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0dc5dceeaefcc96dc192e3a80bbe1d6c410c469e97bdd47494a7d930987f18b2\", size = 384126, upload-time = \"2025-08-27T12:14:03.437Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/54/77/ac339d5f82b6afff1df8f0fe0d2145cc827992cb5f8eeb90fc9f31ef7a63/rpds_py-0.27.1-cp313-cp313t-manylinux_2_31_riscv64.whl\", hash = \"sha256:d76f9cc8665acdc0c9177043746775aa7babbf479b5520b78ae4002d889f5c21\", size = 399486, upload-time = \"2025-08-27T12:14:05.443Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d6/29/3e1c255eee6ac358c056a57d6d6869baa00a62fa32eea5ee0632039c50a3/rpds_py-0.27.1-cp313-cp313t-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:134fae0e36022edad8290a6661edf40c023562964efea0cc0ec7f5d392d2aaef\", size = 414832, upload-time = \"2025-08-27T12:14:06.902Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3f/db/6d498b844342deb3fa1d030598db93937a9964fcf5cb4da4feb5f17be34b/rpds_py-0.27.1-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:eb11a4f1b2b63337cfd3b4d110af778a59aae51c81d195768e353d8b52f88081\", size = 557249, upload-time = \"2025-08-27T12:14:08.37Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/60/f3/690dd38e2310b6f68858a331399b4d6dbb9132c3e8ef8b4333b96caf403d/rpds_py-0.27.1-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:13e608ac9f50a0ed4faec0e90ece76ae33b34c0e8656e3dceb9a7db994c692cd\", size = 587356, upload-time = \"2025-08-27T12:14:10.034Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/86/e3/84507781cccd0145f35b1dc32c72675200c5ce8d5b30f813e49424ef68fc/rpds_py-0.27.1-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:dd2135527aa40f061350c3f8f89da2644de26cd73e4de458e79606384f4f68e7\", size = 555300, upload-time = \"2025-08-27T12:14:11.783Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e5/ee/375469849e6b429b3516206b4580a79e9ef3eb12920ddbd4492b56eaacbe/rpds_py-0.27.1-cp313-cp313t-win32.whl\", hash = \"sha256:3020724ade63fe320a972e2ffd93b5623227e684315adce194941167fee02688\", size = 216714, upload-time = \"2025-08-27T12:14:13.629Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/21/87/3fc94e47c9bd0742660e84706c311a860dcae4374cf4a03c477e23ce605a/rpds_py-0.27.1-cp313-cp313t-win_amd64.whl\", hash = \"sha256:8ee50c3e41739886606388ba3ab3ee2aae9f35fb23f833091833255a31740797\", size = 228943, upload-time = \"2025-08-27T12:14:14.937Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/70/36/b6e6066520a07cf029d385de869729a895917b411e777ab1cde878100a1d/rpds_py-0.27.1-cp314-cp314-macosx_10_12_x86_64.whl\", hash = \"sha256:acb9aafccaae278f449d9c713b64a9e68662e7799dbd5859e2c6b3c67b56d334\", size = 362472, upload-time = \"2025-08-27T12:14:16.333Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/af/07/b4646032e0dcec0df9c73a3bd52f63bc6c5f9cda992f06bd0e73fe3fbebd/rpds_py-0.27.1-cp314-cp314-macosx_11_0_arm64.whl\", hash = \"sha256:b7fb801aa7f845ddf601c49630deeeccde7ce10065561d92729bfe81bd21fb33\", size = 345676, upload-time = \"2025-08-27T12:14:17.764Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b0/16/2f1003ee5d0af4bcb13c0cf894957984c32a6751ed7206db2aee7379a55e/rpds_py-0.27.1-cp314-cp314-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:fe0dd05afb46597b9a2e11c351e5e4283c741237e7f617ffb3252780cca9336a\", size = 385313, upload-time = \"2025-08-27T12:14:19.829Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/05/cd/7eb6dd7b232e7f2654d03fa07f1414d7dfc980e82ba71e40a7c46fd95484/rpds_py-0.27.1-cp314-cp314-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:b6dfb0e058adb12d8b1d1b25f686e94ffa65d9995a5157afe99743bf7369d62b\", size = 399080, upload-time = \"2025-08-27T12:14:21.531Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/20/51/5829afd5000ec1cb60f304711f02572d619040aa3ec033d8226817d1e571/rpds_py-0.27.1-cp314-cp314-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ed090ccd235f6fa8bb5861684567f0a83e04f52dfc2e5c05f2e4b1309fcf85e7\", size = 523868, upload-time = \"2025-08-27T12:14:23.485Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/05/2c/30eebca20d5db95720ab4d2faec1b5e4c1025c473f703738c371241476a2/rpds_py-0.27.1-cp314-cp314-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:bf876e79763eecf3e7356f157540d6a093cef395b65514f17a356f62af6cc136\", size = 408750, upload-time = \"2025-08-27T12:14:24.924Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/90/1a/cdb5083f043597c4d4276eae4e4c70c55ab5accec078da8611f24575a367/rpds_py-0.27.1-cp314-cp314-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:12ed005216a51b1d6e2b02a7bd31885fe317e45897de81d86dcce7d74618ffff\", size = 387688, upload-time = \"2025-08-27T12:14:27.537Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/7c/92/cf786a15320e173f945d205ab31585cc43969743bb1a48b6888f7a2b0a2d/rpds_py-0.27.1-cp314-cp314-manylinux_2_31_riscv64.whl\", hash = \"sha256:ee4308f409a40e50593c7e3bb8cbe0b4d4c66d1674a316324f0c2f5383b486f9\", size = 407225, upload-time = \"2025-08-27T12:14:28.981Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/33/5c/85ee16df5b65063ef26017bef33096557a4c83fbe56218ac7cd8c235f16d/rpds_py-0.27.1-cp314-cp314-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:0b08d152555acf1f455154d498ca855618c1378ec810646fcd7c76416ac6dc60\", size = 423361, upload-time = \"2025-08-27T12:14:30.469Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/4b/8e/1c2741307fcabd1a334ecf008e92c4f47bb6f848712cf15c923becfe82bb/rpds_py-0.27.1-cp314-cp314-musllinux_1_2_aarch64.whl\", hash = \"sha256:dce51c828941973a5684d458214d3a36fcd28da3e1875d659388f4f9f12cc33e\", size = 562493, upload-time = \"2025-08-27T12:14:31.987Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/04/03/5159321baae9b2222442a70c1f988cbbd66b9be0675dd3936461269be360/rpds_py-0.27.1-cp314-cp314-musllinux_1_2_i686.whl\", hash = \"sha256:c1476d6f29eb81aa4151c9a31219b03f1f798dc43d8af1250a870735516a1212\", size = 592623, upload-time = \"2025-08-27T12:14:33.543Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ff/39/c09fd1ad28b85bc1d4554a8710233c9f4cefd03d7717a1b8fbfd171d1167/rpds_py-0.27.1-cp314-cp314-musllinux_1_2_x86_64.whl\", hash = \"sha256:3ce0cac322b0d69b63c9cdb895ee1b65805ec9ffad37639f291dd79467bee675\", size = 558800, upload-time = \"2025-08-27T12:14:35.436Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c5/d6/99228e6bbcf4baa764b18258f519a9035131d91b538d4e0e294313462a98/rpds_py-0.27.1-cp314-cp314-win32.whl\", hash = \"sha256:dfbfac137d2a3d0725758cd141f878bf4329ba25e34979797c89474a89a8a3a3\", size = 221943, upload-time = \"2025-08-27T12:14:36.898Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/be/07/c802bc6b8e95be83b79bdf23d1aa61d68324cb1006e245d6c58e959e314d/rpds_py-0.27.1-cp314-cp314-win_amd64.whl\", hash = \"sha256:a6e57b0abfe7cc513450fcf529eb486b6e4d3f8aee83e92eb5f1ef848218d456\", size = 233739, upload-time = \"2025-08-27T12:14:38.386Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c8/89/3e1b1c16d4c2d547c5717377a8df99aee8099ff050f87c45cb4d5fa70891/rpds_py-0.27.1-cp314-cp314-win_arm64.whl\", hash = \"sha256:faf8d146f3d476abfee026c4ae3bdd9ca14236ae4e4c310cbd1cf75ba33d24a3\", size = 223120, upload-time = \"2025-08-27T12:14:39.82Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/62/7e/dc7931dc2fa4a6e46b2a4fa744a9fe5c548efd70e0ba74f40b39fa4a8c10/rpds_py-0.27.1-cp314-cp314t-macosx_10_12_x86_64.whl\", hash = \"sha256:ba81d2b56b6d4911ce735aad0a1d4495e808b8ee4dc58715998741a26874e7c2\", size = 358944, upload-time = \"2025-08-27T12:14:41.199Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e6/22/4af76ac4e9f336bfb1a5f240d18a33c6b2fcaadb7472ac7680576512b49a/rpds_py-0.27.1-cp314-cp314t-macosx_11_0_arm64.whl\", hash = \"sha256:84f7d509870098de0e864cad0102711c1e24e9b1a50ee713b65928adb22269e4\", size = 342283, upload-time = \"2025-08-27T12:14:42.699Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1c/15/2a7c619b3c2272ea9feb9ade67a45c40b3eeb500d503ad4c28c395dc51b4/rpds_py-0.27.1-cp314-cp314t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a9e960fc78fecd1100539f14132425e1d5fe44ecb9239f8f27f079962021523e\", size = 380320, upload-time = \"2025-08-27T12:14:44.157Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a2/7d/4c6d243ba4a3057e994bb5bedd01b5c963c12fe38dde707a52acdb3849e7/rpds_py-0.27.1-cp314-cp314t-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:62f85b665cedab1a503747617393573995dac4600ff51869d69ad2f39eb5e817\", size = 391760, upload-time = \"2025-08-27T12:14:45.845Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b4/71/b19401a909b83bcd67f90221330bc1ef11bc486fe4e04c24388d28a618ae/rpds_py-0.27.1-cp314-cp314t-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:fed467af29776f6556250c9ed85ea5a4dd121ab56a5f8b206e3e7a4c551e48ec\", size = 522476, upload-time = \"2025-08-27T12:14:47.364Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e4/44/1a3b9715c0455d2e2f0f6df5ee6d6f5afdc423d0773a8a682ed2b43c566c/rpds_py-0.27.1-cp314-cp314t-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f2729615f9d430af0ae6b36cf042cb55c0936408d543fb691e1a9e36648fd35a\", size = 403418, upload-time = \"2025-08-27T12:14:49.991Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1c/4b/fb6c4f14984eb56673bc868a66536f53417ddb13ed44b391998100a06a96/rpds_py-0.27.1-cp314-cp314t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1b207d881a9aef7ba753d69c123a35d96ca7cb808056998f6b9e8747321f03b8\", size = 384771, upload-time = \"2025-08-27T12:14:52.159Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c0/56/d5265d2d28b7420d7b4d4d85cad8ef891760f5135102e60d5c970b976e41/rpds_py-0.27.1-cp314-cp314t-manylinux_2_31_riscv64.whl\", hash = \"sha256:639fd5efec029f99b79ae47e5d7e00ad8a773da899b6309f6786ecaf22948c48\", size = 400022, upload-time = \"2025-08-27T12:14:53.859Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8f/e9/9f5fc70164a569bdd6ed9046486c3568d6926e3a49bdefeeccfb18655875/rpds_py-0.27.1-cp314-cp314t-manylinux_2_5_i686.manylinux1_i686.whl\", hash = \"sha256:fecc80cb2a90e28af8a9b366edacf33d7a91cbfe4c2c4544ea1246e949cfebeb\", size = 416787, upload-time = \"2025-08-27T12:14:55.673Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d4/64/56dd03430ba491db943a81dcdef115a985aac5f44f565cd39a00c766d45c/rpds_py-0.27.1-cp314-cp314t-musllinux_1_2_aarch64.whl\", hash = \"sha256:42a89282d711711d0a62d6f57d81aa43a1368686c45bc1c46b7f079d55692734\", size = 557538, upload-time = \"2025-08-27T12:14:57.245Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3f/36/92cc885a3129993b1d963a2a42ecf64e6a8e129d2c7cc980dbeba84e55fb/rpds_py-0.27.1-cp314-cp314t-musllinux_1_2_i686.whl\", hash = \"sha256:cf9931f14223de59551ab9d38ed18d92f14f055a5f78c1d8ad6493f735021bbb\", size = 588512, upload-time = \"2025-08-27T12:14:58.728Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/dd/10/6b283707780a81919f71625351182b4f98932ac89a09023cb61865136244/rpds_py-0.27.1-cp314-cp314t-musllinux_1_2_x86_64.whl\", hash = \"sha256:f39f58a27cc6e59f432b568ed8429c7e1641324fbe38131de852cd77b2d534b0\", size = 555813, upload-time = \"2025-08-27T12:15:00.334Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/04/2e/30b5ea18c01379da6272a92825dd7e53dc9d15c88a19e97932d35d430ef7/rpds_py-0.27.1-cp314-cp314t-win32.whl\", hash = \"sha256:d5fa0ee122dc09e23607a28e6d7b150da16c662e66409bbe85230e4c85bb528a\", size = 217385, upload-time = \"2025-08-27T12:15:01.937Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/32/7d/97119da51cb1dd3f2f3c0805f155a3aa4a95fa44fe7d78ae15e69edf4f34/rpds_py-0.27.1-cp314-cp314t-win_amd64.whl\", hash = \"sha256:6567d2bb951e21232c2f660c24cf3470bb96de56cdcb3f071a83feeaff8a2772\", size = 230097, upload-time = \"2025-08-27T12:15:03.961Z\" },\n+]\n+\n+[[package]]\n+name = \"sniffio\"\n+version = \"1.3.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/a2/87/a6771e1546d97e7e041b6ae58d80074f81b7d5121207425c964ddf5cfdbd/sniffio-1.3.1.tar.gz\", hash = \"sha256:f4324edc670a0f49750a81b895f35c3adb843cca46f0530f79fc1babb23789dc\", size = 20372, upload-time = \"2024-02-25T23:20:04.057Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/e9/44/75a9c9421471a6c4805dbf2356f7c181a29c1879239abab1ea2cc8f38b40/sniffio-1.3.1-py3-none-any.whl\", hash = \"sha256:2f6da418d1f1e0fddd844478f41680e794e6051915791a034ff65e5f100525a2\", size = 10235, upload-time = \"2024-02-25T23:20:01.196Z\" },\n+]\n+\n+[[package]]\n+name = \"sqlalchemy\"\n+version = \"2.0.43\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"greenlet\", marker = \"(python_full_version \u003c '3.14' and platform_machine == 'AMD64') or (python_full_version \u003c '3.14' and platform_machine == 'WIN32') or (python_full_version \u003c '3.14' and platform_machine == 'aarch64') or (python_full_version \u003c '3.14' and platform_machine == 'amd64') or (python_full_version \u003c '3.14' and platform_machine == 'ppc64le') or (python_full_version \u003c '3.14' and platform_machine == 'win32') or (python_full_version \u003c '3.14' and platform_machine == 'x86_64')\" },\n+    { name = \"typing-extensions\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/d7/bc/d59b5d97d27229b0e009bd9098cd81af71c2fa5549c580a0a67b9bed0496/sqlalchemy-2.0.43.tar.gz\", hash = \"sha256:788bfcef6787a7764169cfe9859fe425bf44559619e1d9f56f5bddf2ebf6f417\", size = 9762949, upload-time = \"2025-08-11T14:24:58.438Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/41/1c/a7260bd47a6fae7e03768bf66451437b36451143f36b285522b865987ced/sqlalchemy-2.0.43-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:e7c08f57f75a2bb62d7ee80a89686a5e5669f199235c6d1dac75cd59374091c3\", size = 2130598, upload-time = \"2025-08-11T15:51:15.903Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8e/84/8a337454e82388283830b3586ad7847aa9c76fdd4f1df09cdd1f94591873/sqlalchemy-2.0.43-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:14111d22c29efad445cd5021a70a8b42f7d9152d8ba7f73304c4d82460946aaa\", size = 2118415, upload-time = \"2025-08-11T15:51:17.256Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/cf/ff/22ab2328148492c4d71899d62a0e65370ea66c877aea017a244a35733685/sqlalchemy-2.0.43-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:21b27b56eb2f82653168cefe6cb8e970cdaf4f3a6cb2c5e3c3c1cf3158968ff9\", size = 3248707, upload-time = \"2025-08-11T15:52:38.444Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/dc/29/11ae2c2b981de60187f7cbc84277d9d21f101093d1b2e945c63774477aba/sqlalchemy-2.0.43-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9c5a9da957c56e43d72126a3f5845603da00e0293720b03bde0aacffcf2dc04f\", size = 3253602, upload-time = \"2025-08-11T15:56:37.348Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b8/61/987b6c23b12c56d2be451bc70900f67dd7d989d52b1ee64f239cf19aec69/sqlalchemy-2.0.43-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:5d79f9fdc9584ec83d1b3c75e9f4595c49017f5594fee1a2217117647225d738\", size = 3183248, upload-time = \"2025-08-11T15:52:39.865Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/86/85/29d216002d4593c2ce1c0ec2cec46dda77bfbcd221e24caa6e85eff53d89/sqlalchemy-2.0.43-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:9df7126fd9db49e3a5a3999442cc67e9ee8971f3cb9644250107d7296cb2a164\", size = 3219363, upload-time = \"2025-08-11T15:56:39.11Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b6/e4/bd78b01919c524f190b4905d47e7630bf4130b9f48fd971ae1c6225b6f6a/sqlalchemy-2.0.43-cp313-cp313-win32.whl\", hash = \"sha256:7f1ac7828857fcedb0361b48b9ac4821469f7694089d15550bbcf9ab22564a1d\", size = 2096718, upload-time = \"2025-08-11T15:55:05.349Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ac/a5/ca2f07a2a201f9497de1928f787926613db6307992fe5cda97624eb07c2f/sqlalchemy-2.0.43-cp313-cp313-win_amd64.whl\", hash = \"sha256:971ba928fcde01869361f504fcff3b7143b47d30de188b11c6357c0505824197\", size = 2123200, upload-time = \"2025-08-11T15:55:07.932Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b8/d9/13bdde6521f322861fab67473cec4b1cc8999f3871953531cf61945fad92/sqlalchemy-2.0.43-py3-none-any.whl\", hash = \"sha256:1681c21dd2ccee222c2fe0bef671d1aef7c504087c9c4e800371cfcc8ac966fc\", size = 1924759, upload-time = \"2025-08-11T15:39:53.024Z\" },\n+]\n+\n+[[package]]\n+name = \"sse-starlette\"\n+version = \"3.0.2\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"anyio\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/42/6f/22ed6e33f8a9e76ca0a412405f31abb844b779d52c5f96660766edcd737c/sse_starlette-3.0.2.tar.gz\", hash = \"sha256:ccd60b5765ebb3584d0de2d7a6e4f745672581de4f5005ab31c3a25d10b52b3a\", size = 20985, upload-time = \"2025-07-27T09:07:44.565Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/ef/10/c78f463b4ef22eef8491f218f692be838282cd65480f6e423d7730dfd1fb/sse_starlette-3.0.2-py3-none-any.whl\", hash = \"sha256:16b7cbfddbcd4eaca11f7b586f3b8a080f1afe952c15813455b162edea619e5a\", size = 11297, upload-time = \"2025-07-27T09:07:43.268Z\" },\n+]\n+\n+[[package]]\n+name = \"starlette\"\n+version = \"0.47.3\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"anyio\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/15/b9/cc3017f9a9c9b6e27c5106cc10cc7904653c3eec0729793aec10479dd669/starlette-0.47.3.tar.gz\", hash = \"sha256:6bc94f839cc176c4858894f1f8908f0ab79dfec1a6b8402f6da9be26ebea52e9\", size = 2584144, upload-time = \"2025-08-24T13:36:42.122Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/ce/fd/901cfa59aaa5b30a99e16876f11abe38b59a1a2c51ffb3d7142bb6089069/starlette-0.47.3-py3-none-any.whl\", hash = \"sha256:89c0778ca62a76b826101e7c709e70680a1699ca7da6b44d38eb0a7e61fe4b51\", size = 72991, upload-time = \"2025-08-24T13:36:40.887Z\" },\n+]\n+\n+[[package]]\n+name = \"tavily-python\"\n+version = \"0.7.11\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"httpx\" },\n+    { name = \"requests\" },\n+    { name = \"tiktoken\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/bb/a4/2b816cbb287c6417e7997195a2b8ce32200ea2acc7099fba1ddf37d0d051/tavily_python-0.7.11.tar.gz\", hash = \"sha256:58c3ab71bb62820ade5498acc17bc372f436e88151389912672add6bf6d31aed\", size = 19278, upload-time = \"2025-08-18T23:56:57.899Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/85/53/371a39e17f02e3df8ab3493c77453b0f8f0d2783bd23d6e0fc879d211217/tavily_python-0.7.11-py3-none-any.whl\", hash = \"sha256:50559d8b605b6854fd85b1b785c603851b86eb4d0e9fd29154f81b54b734dd6e\", size = 15826, upload-time = \"2025-08-18T23:56:52.203Z\" },\n+]\n+\n+[[package]]\n+name = \"tenacity\"\n+version = \"9.1.2\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/0a/d4/2b0cd0fe285e14b36db076e78c93766ff1d529d70408bd1d2a5a84f1d929/tenacity-9.1.2.tar.gz\", hash = \"sha256:1169d376c297e7de388d18b4481760d478b0e99a777cad3a9c86e556f4b697cb\", size = 48036, upload-time = \"2025-04-02T08:25:09.966Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/e5/30/643397144bfbfec6f6ef821f36f33e57d35946c44a2352d3c9f0ae847619/tenacity-9.1.2-py3-none-any.whl\", hash = \"sha256:f77bf36710d8b73a50b2dd155c97b870017ad21afe6ab300326b0371b3b05138\", size = 28248, upload-time = \"2025-04-02T08:25:07.678Z\" },\n+]\n+\n+[[package]]\n+name = \"threat-detect\"\n+version = \"0.1.0\"\n+source = { virtual = \".\" }\n+dependencies = [\n+    { name = \"fastapi\" },\n+    { name = \"langchain\" },\n+    { name = \"langchain-core\" },\n+    { name = \"langchain-groq\" },\n+    { name = \"langchain-mcp-adapters\" },\n+    { name = \"langchain-openai\" },\n+    { name = \"langgraph\" },\n+    { name = \"nest-asyncio\" },\n+    { name = \"pydantic\" },\n+    { name = \"python-dotenv\" },\n+    { name = \"requests\" },\n+    { name = \"tavily-python\" },\n+    { name = \"typing-extensions\" },\n+    { name = \"uvicorn\", extra = [\"standard\"] },\n+]\n+\n+[package.metadata]\n+requires-dist = [\n+    { name = \"fastapi\", specifier = \"\u003e=0.116.1\" },\n+    { name = \"langchain\", specifier = \"\u003e=0.3.27\" },\n+    { name = \"langchain-core\", specifier = \"\u003e=0.3.75\" },\n+    { name = \"langchain-groq\", specifier = \"\u003e=0.3.7\" },\n+    { name = \"langchain-mcp-adapters\", specifier = \"\u003e=0.1.9\" },\n+    { name = \"langchain-openai\", specifier = \"\u003e=0.3.32\" },\n+    { name = \"langgraph\", specifier = \"\u003e=0.6.6\" },\n+    { name = \"nest-asyncio\", specifier = \"\u003e=1.6.0\" },\n+    { name = \"pydantic\", specifier = \"\u003e=2.11.7\" },\n+    { name = \"python-dotenv\", specifier = \"\u003e=1.1.1\" },\n+    { name = \"requests\", specifier = \"\u003e=2.32.5\" },\n+    { name = \"tavily-python\", specifier = \"\u003e=0.7.11\" },\n+    { name = \"typing-extensions\", specifier = \"\u003e=4.15.0\" },\n+    { name = \"uvicorn\", extras = [\"standard\"], specifier = \"\u003e=0.35.0\" },\n+]\n+\n+[[package]]\n+name = \"tiktoken\"\n+version = \"0.11.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"regex\" },\n+    { name = \"requests\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/a7/86/ad0155a37c4f310935d5ac0b1ccf9bdb635dcb906e0a9a26b616dd55825a/tiktoken-0.11.0.tar.gz\", hash = \"sha256:3c518641aee1c52247c2b97e74d8d07d780092af79d5911a6ab5e79359d9b06a\", size = 37648, upload-time = \"2025-08-08T23:58:08.495Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/cc/cd/a9034bcee638716d9310443818d73c6387a6a96db93cbcb0819b77f5b206/tiktoken-0.11.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:a5f3f25ffb152ee7fec78e90a5e5ea5b03b4ea240beed03305615847f7a6ace2\", size = 1055339, upload-time = \"2025-08-08T23:57:51.802Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/f1/91/9922b345f611b4e92581f234e64e9661e1c524875c8eadd513c4b2088472/tiktoken-0.11.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:7dc6e9ad16a2a75b4c4be7208055a1f707c9510541d94d9cc31f7fbdc8db41d8\", size = 997080, upload-time = \"2025-08-08T23:57:53.442Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d0/9d/49cd047c71336bc4b4af460ac213ec1c457da67712bde59b892e84f1859f/tiktoken-0.11.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5a0517634d67a8a48fd4a4ad73930c3022629a85a217d256a6e9b8b47439d1e4\", size = 1128501, upload-time = \"2025-08-08T23:57:54.808Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/52/d5/a0dcdb40dd2ea357e83cb36258967f0ae96f5dd40c722d6e382ceee6bba9/tiktoken-0.11.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7fb4effe60574675118b73c6fbfd3b5868e5d7a1f570d6cc0d18724b09ecf318\", size = 1182743, upload-time = \"2025-08-08T23:57:56.307Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3b/17/a0fc51aefb66b7b5261ca1314afa83df0106b033f783f9a7bcbe8e741494/tiktoken-0.11.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:94f984c9831fd32688aef4348803b0905d4ae9c432303087bae370dc1381a2b8\", size = 1244057, upload-time = \"2025-08-08T23:57:57.628Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/50/79/bcf350609f3a10f09fe4fc207f132085e497fdd3612f3925ab24d86a0ca0/tiktoken-0.11.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:2177ffda31dec4023356a441793fed82f7af5291120751dee4d696414f54db0c\", size = 883901, upload-time = \"2025-08-08T23:57:59.359Z\" },\n+]\n+\n+[[package]]\n+name = \"tqdm\"\n+version = \"4.67.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"colorama\", marker = \"sys_platform == 'win32'\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/a8/4b/29b4ef32e036bb34e4ab51796dd745cdba7ed47ad142a9f4a1eb8e0c744d/tqdm-4.67.1.tar.gz\", hash = \"sha256:f8aef9c52c08c13a65f30ea34f4e5aac3fd1a34959879d7e59e63027286627f2\", size = 169737, upload-time = \"2024-11-24T20:12:22.481Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/d0/30/dc54f88dd4a2b5dc8a0279bdd7270e735851848b762aeb1c1184ed1f6b14/tqdm-4.67.1-py3-none-any.whl\", hash = \"sha256:26445eca388f82e72884e0d580d5464cd801a3ea01e63e5601bdff9ba6a48de2\", size = 78540, upload-time = \"2024-11-24T20:12:19.698Z\" },\n+]\n+\n+[[package]]\n+name = \"typing-extensions\"\n+version = \"4.15.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/72/94/1a15dd82efb362ac84269196e94cf00f187f7ed21c242792a923cdb1c61f/typing_extensions-4.15.0.tar.gz\", hash = \"sha256:0cea48d173cc12fa28ecabc3b837ea3cf6f38c6d1136f85cbaaf598984861466\", size = 109391, upload-time = \"2025-08-25T13:49:26.313Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/18/67/36e9267722cc04a6b9f15c7f3441c2363321a3ea07da7ae0c0707beb2a9c/typing_extensions-4.15.0-py3-none-any.whl\", hash = \"sha256:f0fa19c6845758ab08074a0cfa8b7aecb71c999ca73d62883bc25cc018c4e548\", size = 44614, upload-time = \"2025-08-25T13:49:24.86Z\" },\n+]\n+\n+[[package]]\n+name = \"typing-inspection\"\n+version = \"0.4.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"typing-extensions\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/f8/b1/0c11f5058406b3af7609f121aaa6b609744687f1d158b3c3a5bf4cc94238/typing_inspection-0.4.1.tar.gz\", hash = \"sha256:6ae134cc0203c33377d43188d4064e9b357dba58cff3185f22924610e70a9d28\", size = 75726, upload-time = \"2025-05-21T18:55:23.885Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/17/69/cd203477f944c353c31bade965f880aa1061fd6bf05ded0726ca845b6ff7/typing_inspection-0.4.1-py3-none-any.whl\", hash = \"sha256:389055682238f53b04f7badcb49b989835495a96700ced5dab2d8feae4b26f51\", size = 14552, upload-time = \"2025-05-21T18:55:22.152Z\" },\n+]\n+\n+[[package]]\n+name = \"urllib3\"\n+version = \"2.5.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/15/22/9ee70a2574a4f4599c47dd506532914ce044817c7752a79b6a51286319bc/urllib3-2.5.0.tar.gz\", hash = \"sha256:3fc47733c7e419d4bc3f6b3dc2b4f890bb743906a30d56ba4a5bfa4bbff92760\", size = 393185, upload-time = \"2025-06-18T14:07:41.644Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/a7/c2/fe1e52489ae3122415c51f387e221dd0773709bad6c6cdaa599e8a2c5185/urllib3-2.5.0-py3-none-any.whl\", hash = \"sha256:e6b01673c0fa6a13e374b50871808eb3bf7046c4b125b216f6bf1cc604cff0dc\", size = 129795, upload-time = \"2025-06-18T14:07:40.39Z\" },\n+]\n+\n+[[package]]\n+name = \"uvicorn\"\n+version = \"0.35.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"click\" },\n+    { name = \"h11\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/5e/42/e0e305207bb88c6b8d3061399c6a961ffe5fbb7e2aa63c9234df7259e9cd/uvicorn-0.35.0.tar.gz\", hash = \"sha256:bc662f087f7cf2ce11a1d7fd70b90c9f98ef2e2831556dd078d131b96cc94a01\", size = 78473, upload-time = \"2025-06-28T16:15:46.058Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/d2/e2/dc81b1bd1dcfe91735810265e9d26bc8ec5da45b4c0f6237e286819194c3/uvicorn-0.35.0-py3-none-any.whl\", hash = \"sha256:197535216b25ff9b785e29a0b79199f55222193d47f820816e7da751e9bc8d4a\", size = 66406, upload-time = \"2025-06-28T16:15:44.816Z\" },\n+]\n+\n+[package.optional-dependencies]\n+standard = [\n+    { name = \"colorama\", marker = \"sys_platform == 'win32'\" },\n+    { name = \"httptools\" },\n+    { name = \"python-dotenv\" },\n+    { name = \"pyyaml\" },\n+    { name = \"uvloop\", marker = \"platform_python_implementation != 'PyPy' and sys_platform != 'cygwin' and sys_platform != 'win32'\" },\n+    { name = \"watchfiles\" },\n+    { name = \"websockets\" },\n+]\n+\n+[[package]]\n+name = \"uvloop\"\n+version = \"0.21.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/af/c0/854216d09d33c543f12a44b393c402e89a920b1a0a7dc634c42de91b9cf6/uvloop-0.21.0.tar.gz\", hash = \"sha256:3bf12b0fda68447806a7ad847bfa591613177275d35b6724b1ee573faa3704e3\", size = 2492741, upload-time = \"2024-10-14T23:38:35.489Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/3f/8d/2cbef610ca21539f0f36e2b34da49302029e7c9f09acef0b1c3b5839412b/uvloop-0.21.0-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:bfd55dfcc2a512316e65f16e503e9e450cab148ef11df4e4e679b5e8253a5281\", size = 1468123, upload-time = \"2024-10-14T23:38:00.688Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/93/0d/b0038d5a469f94ed8f2b2fce2434a18396d8fbfb5da85a0a9781ebbdec14/uvloop-0.21.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:787ae31ad8a2856fc4e7c095341cccc7209bd657d0e71ad0dc2ea83c4a6fa8af\", size = 819325, upload-time = \"2024-10-14T23:38:02.309Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/50/94/0a687f39e78c4c1e02e3272c6b2ccdb4e0085fda3b8352fecd0410ccf915/uvloop-0.21.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5ee4d4ef48036ff6e5cfffb09dd192c7a5027153948d85b8da7ff705065bacc6\", size = 4582806, upload-time = \"2024-10-14T23:38:04.711Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d2/19/f5b78616566ea68edd42aacaf645adbf71fbd83fc52281fba555dc27e3f1/uvloop-0.21.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f3df876acd7ec037a3d005b3ab85a7e4110422e4d9c1571d4fc89b0fc41b6816\", size = 4701068, upload-time = \"2024-10-14T23:38:06.385Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/47/57/66f061ee118f413cd22a656de622925097170b9380b30091b78ea0c6ea75/uvloop-0.21.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:bd53ecc9a0f3d87ab847503c2e1552b690362e005ab54e8a48ba97da3924c0dc\", size = 4454428, upload-time = \"2024-10-14T23:38:08.416Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/63/9a/0962b05b308494e3202d3f794a6e85abe471fe3cafdbcf95c2e8c713aabd/uvloop-0.21.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:a5c39f217ab3c663dc699c04cbd50c13813e31d917642d459fdcec07555cc553\", size = 4660018, upload-time = \"2024-10-14T23:38:10.888Z\" },\n+]\n+\n+[[package]]\n+name = \"watchfiles\"\n+version = \"1.1.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+dependencies = [\n+    { name = \"anyio\" },\n+]\n+sdist = { url = \"https://files.pythonhosted.org/packages/2a/9a/d451fcc97d029f5812e898fd30a53fd8c15c7bbd058fd75cfc6beb9bd761/watchfiles-1.1.0.tar.gz\", hash = \"sha256:693ed7ec72cbfcee399e92c895362b6e66d63dac6b91e2c11ae03d10d503e575\", size = 94406, upload-time = \"2025-06-15T19:06:59.42Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/d3/42/fae874df96595556a9089ade83be34a2e04f0f11eb53a8dbf8a8a5e562b4/watchfiles-1.1.0-cp313-cp313-macosx_10_12_x86_64.whl\", hash = \"sha256:5007f860c7f1f8df471e4e04aaa8c43673429047d63205d1630880f7637bca30\", size = 402004, upload-time = \"2025-06-15T19:05:38.499Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fa/55/a77e533e59c3003d9803c09c44c3651224067cbe7fb5d574ddbaa31e11ca/watchfiles-1.1.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:20ecc8abbd957046f1fe9562757903f5eaf57c3bce70929fda6c7711bb58074a\", size = 393671, upload-time = \"2025-06-15T19:05:39.52Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/05/68/b0afb3f79c8e832e6571022611adbdc36e35a44e14f129ba09709aa4bb7a/watchfiles-1.1.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f2f0498b7d2a3c072766dba3274fe22a183dbea1f99d188f1c6c72209a1063dc\", size = 449772, upload-time = \"2025-06-15T19:05:40.897Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ff/05/46dd1f6879bc40e1e74c6c39a1b9ab9e790bf1f5a2fe6c08b463d9a807f4/watchfiles-1.1.0-cp313-cp313-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:239736577e848678e13b201bba14e89718f5c2133dfd6b1f7846fa1b58a8532b\", size = 456789, upload-time = \"2025-06-15T19:05:42.045Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8b/ca/0eeb2c06227ca7f12e50a47a3679df0cd1ba487ea19cf844a905920f8e95/watchfiles-1.1.0-cp313-cp313-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:eff4b8d89f444f7e49136dc695599a591ff769300734446c0a86cba2eb2f9895\", size = 482551, upload-time = \"2025-06-15T19:05:43.781Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/31/47/2cecbd8694095647406645f822781008cc524320466ea393f55fe70eed3b/watchfiles-1.1.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:12b0a02a91762c08f7264e2e79542f76870c3040bbc847fb67410ab81474932a\", size = 597420, upload-time = \"2025-06-15T19:05:45.244Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d9/7e/82abc4240e0806846548559d70f0b1a6dfdca75c1b4f9fa62b504ae9b083/watchfiles-1.1.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:29e7bc2eee15cbb339c68445959108803dc14ee0c7b4eea556400131a8de462b\", size = 477950, upload-time = \"2025-06-15T19:05:46.332Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/25/0d/4d564798a49bf5482a4fa9416dea6b6c0733a3b5700cb8a5a503c4b15853/watchfiles-1.1.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d9481174d3ed982e269c090f780122fb59cee6c3796f74efe74e70f7780ed94c\", size = 451706, upload-time = \"2025-06-15T19:05:47.459Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/81/b5/5516cf46b033192d544102ea07c65b6f770f10ed1d0a6d388f5d3874f6e4/watchfiles-1.1.0-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:80f811146831c8c86ab17b640801c25dc0a88c630e855e2bef3568f30434d52b\", size = 625814, upload-time = \"2025-06-15T19:05:48.654Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/0c/dd/7c1331f902f30669ac3e754680b6edb9a0dd06dea5438e61128111fadd2c/watchfiles-1.1.0-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:60022527e71d1d1fda67a33150ee42869042bce3d0fcc9cc49be009a9cded3fb\", size = 622820, upload-time = \"2025-06-15T19:05:50.088Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1b/14/36d7a8e27cd128d7b1009e7715a7c02f6c131be9d4ce1e5c3b73d0e342d8/watchfiles-1.1.0-cp313-cp313-win32.whl\", hash = \"sha256:32d6d4e583593cb8576e129879ea0991660b935177c0f93c6681359b3654bfa9\", size = 279194, upload-time = \"2025-06-15T19:05:51.186Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/25/41/2dd88054b849aa546dbeef5696019c58f8e0774f4d1c42123273304cdb2e/watchfiles-1.1.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:f21af781a4a6fbad54f03c598ab620e3a77032c5878f3d780448421a6e1818c7\", size = 292349, upload-time = \"2025-06-15T19:05:52.201Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c8/cf/421d659de88285eb13941cf11a81f875c176f76a6d99342599be88e08d03/watchfiles-1.1.0-cp313-cp313-win_arm64.whl\", hash = \"sha256:5366164391873ed76bfdf618818c82084c9db7fac82b64a20c44d335eec9ced5\", size = 283836, upload-time = \"2025-06-15T19:05:53.265Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/45/10/6faf6858d527e3599cc50ec9fcae73590fbddc1420bd4fdccfebffeedbc6/watchfiles-1.1.0-cp313-cp313t-macosx_10_12_x86_64.whl\", hash = \"sha256:17ab167cca6339c2b830b744eaf10803d2a5b6683be4d79d8475d88b4a8a4be1\", size = 400343, upload-time = \"2025-06-15T19:05:54.252Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/03/20/5cb7d3966f5e8c718006d0e97dfe379a82f16fecd3caa7810f634412047a/watchfiles-1.1.0-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:328dbc9bff7205c215a7807da7c18dce37da7da718e798356212d22696404339\", size = 392916, upload-time = \"2025-06-15T19:05:55.264Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8c/07/d8f1176328fa9e9581b6f120b017e286d2a2d22ae3f554efd9515c8e1b49/watchfiles-1.1.0-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f7208ab6e009c627b7557ce55c465c98967e8caa8b11833531fdf95799372633\", size = 449582, upload-time = \"2025-06-15T19:05:56.317Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/66/e8/80a14a453cf6038e81d072a86c05276692a1826471fef91df7537dba8b46/watchfiles-1.1.0-cp313-cp313t-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:a8f6f72974a19efead54195bc9bed4d850fc047bb7aa971268fd9a8387c89011\", size = 456752, upload-time = \"2025-06-15T19:05:57.359Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/5a/25/0853b3fe0e3c2f5af9ea60eb2e781eade939760239a72c2d38fc4cc335f6/watchfiles-1.1.0-cp313-cp313t-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d181ef50923c29cf0450c3cd47e2f0557b62218c50b2ab8ce2ecaa02bd97e670\", size = 481436, upload-time = \"2025-06-15T19:05:58.447Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fe/9e/4af0056c258b861fbb29dcb36258de1e2b857be4a9509e6298abcf31e5c9/watchfiles-1.1.0-cp313-cp313t-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:adb4167043d3a78280d5d05ce0ba22055c266cf8655ce942f2fb881262ff3cdf\", size = 596016, upload-time = \"2025-06-15T19:05:59.59Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c5/fa/95d604b58aa375e781daf350897aaaa089cff59d84147e9ccff2447c8294/watchfiles-1.1.0-cp313-cp313t-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:8c5701dc474b041e2934a26d31d39f90fac8a3dee2322b39f7729867f932b1d4\", size = 476727, upload-time = \"2025-06-15T19:06:01.086Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/65/95/fe479b2664f19be4cf5ceeb21be05afd491d95f142e72d26a42f41b7c4f8/watchfiles-1.1.0-cp313-cp313t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b067915e3c3936966a8607f6fe5487df0c9c4afb85226613b520890049deea20\", size = 451864, upload-time = \"2025-06-15T19:06:02.144Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d3/8a/3c4af14b93a15ce55901cd7a92e1a4701910f1768c78fb30f61d2b79785b/watchfiles-1.1.0-cp313-cp313t-musllinux_1_1_aarch64.whl\", hash = \"sha256:9c733cda03b6d636b4219625a4acb5c6ffb10803338e437fb614fef9516825ef\", size = 625626, upload-time = \"2025-06-15T19:06:03.578Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/da/f5/cf6aa047d4d9e128f4b7cde615236a915673775ef171ff85971d698f3c2c/watchfiles-1.1.0-cp313-cp313t-musllinux_1_1_x86_64.whl\", hash = \"sha256:cc08ef8b90d78bfac66f0def80240b0197008e4852c9f285907377b2947ffdcb\", size = 622744, upload-time = \"2025-06-15T19:06:05.066Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/2c/00/70f75c47f05dea6fd30df90f047765f6fc2d6eb8b5a3921379b0b04defa2/watchfiles-1.1.0-cp314-cp314-macosx_10_12_x86_64.whl\", hash = \"sha256:9974d2f7dc561cce3bb88dfa8eb309dab64c729de85fba32e98d75cf24b66297\", size = 402114, upload-time = \"2025-06-15T19:06:06.186Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/53/03/acd69c48db4a1ed1de26b349d94077cca2238ff98fd64393f3e97484cae6/watchfiles-1.1.0-cp314-cp314-macosx_11_0_arm64.whl\", hash = \"sha256:c68e9f1fcb4d43798ad8814c4c1b61547b014b667216cb754e606bfade587018\", size = 393879, upload-time = \"2025-06-15T19:06:07.369Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/2f/c8/a9a2a6f9c8baa4eceae5887fecd421e1b7ce86802bcfc8b6a942e2add834/watchfiles-1.1.0-cp314-cp314-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:95ab1594377effac17110e1352989bdd7bdfca9ff0e5eeccd8c69c5389b826d0\", size = 450026, upload-time = \"2025-06-15T19:06:08.476Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fe/51/d572260d98388e6e2b967425c985e07d47ee6f62e6455cefb46a6e06eda5/watchfiles-1.1.0-cp314-cp314-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:fba9b62da882c1be1280a7584ec4515d0a6006a94d6e5819730ec2eab60ffe12\", size = 457917, upload-time = \"2025-06-15T19:06:09.988Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c6/2d/4258e52917bf9f12909b6ec314ff9636276f3542f9d3807d143f27309104/watchfiles-1.1.0-cp314-cp314-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:3434e401f3ce0ed6b42569128b3d1e3af773d7ec18751b918b89cd49c14eaafb\", size = 483602, upload-time = \"2025-06-15T19:06:11.088Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/84/99/bee17a5f341a4345fe7b7972a475809af9e528deba056f8963d61ea49f75/watchfiles-1.1.0-cp314-cp314-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:fa257a4d0d21fcbca5b5fcba9dca5a78011cb93c0323fb8855c6d2dfbc76eb77\", size = 596758, upload-time = \"2025-06-15T19:06:12.197Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/40/76/e4bec1d59b25b89d2b0716b41b461ed655a9a53c60dc78ad5771fda5b3e6/watchfiles-1.1.0-cp314-cp314-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:7fd1b3879a578a8ec2076c7961076df540b9af317123f84569f5a9ddee64ce92\", size = 477601, upload-time = \"2025-06-15T19:06:13.391Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1f/fa/a514292956f4a9ce3c567ec0c13cce427c158e9f272062685a8a727d08fc/watchfiles-1.1.0-cp314-cp314-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:62cc7a30eeb0e20ecc5f4bd113cd69dcdb745a07c68c0370cea919f373f65d9e\", size = 451936, upload-time = \"2025-06-15T19:06:14.656Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/32/5d/c3bf927ec3bbeb4566984eba8dd7a8eb69569400f5509904545576741f88/watchfiles-1.1.0-cp314-cp314-musllinux_1_1_aarch64.whl\", hash = \"sha256:891c69e027748b4a73847335d208e374ce54ca3c335907d381fde4e41661b13b\", size = 626243, upload-time = \"2025-06-15T19:06:16.232Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e6/65/6e12c042f1a68c556802a84d54bb06d35577c81e29fba14019562479159c/watchfiles-1.1.0-cp314-cp314-musllinux_1_1_x86_64.whl\", hash = \"sha256:12fe8eaffaf0faa7906895b4f8bb88264035b3f0243275e0bf24af0436b27259\", size = 623073, upload-time = \"2025-06-15T19:06:17.457Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/89/ab/7f79d9bf57329e7cbb0a6fd4c7bd7d0cee1e4a8ef0041459f5409da3506c/watchfiles-1.1.0-cp314-cp314t-macosx_10_12_x86_64.whl\", hash = \"sha256:bfe3c517c283e484843cb2e357dd57ba009cff351edf45fb455b5fbd1f45b15f\", size = 400872, upload-time = \"2025-06-15T19:06:18.57Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/df/d5/3f7bf9912798e9e6c516094db6b8932df53b223660c781ee37607030b6d3/watchfiles-1.1.0-cp314-cp314t-macosx_11_0_arm64.whl\", hash = \"sha256:a9ccbf1f129480ed3044f540c0fdbc4ee556f7175e5ab40fe077ff6baf286d4e\", size = 392877, upload-time = \"2025-06-15T19:06:19.55Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/0d/c5/54ec7601a2798604e01c75294770dbee8150e81c6e471445d7601610b495/watchfiles-1.1.0-cp314-cp314t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ba0e3255b0396cac3cc7bbace76404dd72b5438bf0d8e7cefa2f79a7f3649caa\", size = 449645, upload-time = \"2025-06-15T19:06:20.66Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/0a/04/c2f44afc3b2fce21ca0b7802cbd37ed90a29874f96069ed30a36dfe57c2b/watchfiles-1.1.0-cp314-cp314t-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:4281cd9fce9fc0a9dbf0fc1217f39bf9cf2b4d315d9626ef1d4e87b84699e7e8\", size = 457424, upload-time = \"2025-06-15T19:06:21.712Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/9f/b0/eec32cb6c14d248095261a04f290636da3df3119d4040ef91a4a50b29fa5/watchfiles-1.1.0-cp314-cp314t-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:6d2404af8db1329f9a3c9b79ff63e0ae7131986446901582067d9304ae8aaf7f\", size = 481584, upload-time = \"2025-06-15T19:06:22.777Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d1/e2/ca4bb71c68a937d7145aa25709e4f5d68eb7698a25ce266e84b55d591bbd/watchfiles-1.1.0-cp314-cp314t-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e78b6ed8165996013165eeabd875c5dfc19d41b54f94b40e9fff0eb3193e5e8e\", size = 596675, upload-time = \"2025-06-15T19:06:24.226Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a1/dd/b0e4b7fb5acf783816bc950180a6cd7c6c1d2cf7e9372c0ea634e722712b/watchfiles-1.1.0-cp314-cp314t-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:249590eb75ccc117f488e2fabd1bfa33c580e24b96f00658ad88e38844a040bb\", size = 477363, upload-time = \"2025-06-15T19:06:25.42Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/69/c4/088825b75489cb5b6a761a4542645718893d395d8c530b38734f19da44d2/watchfiles-1.1.0-cp314-cp314t-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d05686b5487cfa2e2c28ff1aa370ea3e6c5accfe6435944ddea1e10d93872147\", size = 452240, upload-time = \"2025-06-15T19:06:26.552Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/10/8c/22b074814970eeef43b7c44df98c3e9667c1f7bf5b83e0ff0201b0bd43f9/watchfiles-1.1.0-cp314-cp314t-musllinux_1_1_aarch64.whl\", hash = \"sha256:d0e10e6f8f6dc5762adee7dece33b722282e1f59aa6a55da5d493a97282fedd8\", size = 625607, upload-time = \"2025-06-15T19:06:27.606Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/32/fa/a4f5c2046385492b2273213ef815bf71a0d4c1943b784fb904e184e30201/watchfiles-1.1.0-cp314-cp314t-musllinux_1_1_x86_64.whl\", hash = \"sha256:af06c863f152005c7592df1d6a7009c836a247c9d8adb78fef8575a5a98699db\", size = 623315, upload-time = \"2025-06-15T19:06:29.076Z\" },\n+]\n+\n+[[package]]\n+name = \"websockets\"\n+version = \"15.0.1\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/21/e6/26d09fab466b7ca9c7737474c52be4f76a40301b08362eb2dbc19dcc16c1/websockets-15.0.1.tar.gz\", hash = \"sha256:82544de02076bafba038ce055ee6412d68da13ab47f0c60cab827346de828dee\", size = 177016, upload-time = \"2025-03-05T20:03:41.606Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/cb/9f/51f0cf64471a9d2b4d0fc6c534f323b664e7095640c34562f5182e5a7195/websockets-15.0.1-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:ee443ef070bb3b6ed74514f5efaa37a252af57c90eb33b956d35c8e9c10a1931\", size = 175440, upload-time = \"2025-03-05T20:02:36.695Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8a/05/aa116ec9943c718905997412c5989f7ed671bc0188ee2ba89520e8765d7b/websockets-15.0.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:5a939de6b7b4e18ca683218320fc67ea886038265fd1ed30173f5ce3f8e85675\", size = 173098, upload-time = \"2025-03-05T20:02:37.985Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ff/0b/33cef55ff24f2d92924923c99926dcce78e7bd922d649467f0eda8368923/websockets-15.0.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:746ee8dba912cd6fc889a8147168991d50ed70447bf18bcda7039f7d2e3d9151\", size = 173329, upload-time = \"2025-03-05T20:02:39.298Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/31/1d/063b25dcc01faa8fada1469bdf769de3768b7044eac9d41f734fd7b6ad6d/websockets-15.0.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:595b6c3969023ecf9041b2936ac3827e4623bfa3ccf007575f04c5a6aa318c22\", size = 183111, upload-time = \"2025-03-05T20:02:40.595Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/93/53/9a87ee494a51bf63e4ec9241c1ccc4f7c2f45fff85d5bde2ff74fcb68b9e/websockets-15.0.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:3c714d2fc58b5ca3e285461a4cc0c9a66bd0e24c5da9911e30158286c9b5be7f\", size = 182054, upload-time = \"2025-03-05T20:02:41.926Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/ff/b2/83a6ddf56cdcbad4e3d841fcc55d6ba7d19aeb89c50f24dd7e859ec0805f/websockets-15.0.1-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0f3c1e2ab208db911594ae5b4f79addeb3501604a165019dd221c0bdcabe4db8\", size = 182496, upload-time = \"2025-03-05T20:02:43.304Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/98/41/e7038944ed0abf34c45aa4635ba28136f06052e08fc2168520bb8b25149f/websockets-15.0.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:229cf1d3ca6c1804400b0a9790dc66528e08a6a1feec0d5040e8b9eb14422375\", size = 182829, upload-time = \"2025-03-05T20:02:48.812Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/e0/17/de15b6158680c7623c6ef0db361da965ab25d813ae54fcfeae2e5b9ef910/websockets-15.0.1-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:756c56e867a90fb00177d530dca4b097dd753cde348448a1012ed6c5131f8b7d\", size = 182217, upload-time = \"2025-03-05T20:02:50.14Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/33/2b/1f168cb6041853eef0362fb9554c3824367c5560cbdaad89ac40f8c2edfc/websockets-15.0.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:558d023b3df0bffe50a04e710bc87742de35060580a293c2a984299ed83bc4e4\", size = 182195, upload-time = \"2025-03-05T20:02:51.561Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/86/eb/20b6cdf273913d0ad05a6a14aed4b9a85591c18a987a3d47f20fa13dcc47/websockets-15.0.1-cp313-cp313-win32.whl\", hash = \"sha256:ba9e56e8ceeeedb2e080147ba85ffcd5cd0711b89576b83784d8605a7df455fa\", size = 176393, upload-time = \"2025-03-05T20:02:53.814Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1b/6c/c65773d6cab416a64d191d6ee8a8b1c68a09970ea6909d16965d26bfed1e/websockets-15.0.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:e09473f095a819042ecb2ab9465aee615bd9c2028e4ef7d933600a8401c79561\", size = 176837, upload-time = \"2025-03-05T20:02:55.237Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fa/a8/5b41e0da817d64113292ab1f8247140aac61cbf6cfd085d6a0fa77f4984f/websockets-15.0.1-py3-none-any.whl\", hash = \"sha256:f7a866fbc1e97b5c617ee4116daaa09b722101d4a3c170c787450ba409f9736f\", size = 169743, upload-time = \"2025-03-05T20:03:39.41Z\" },\n+]\n+\n+[[package]]\n+name = \"xxhash\"\n+version = \"3.5.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/00/5e/d6e5258d69df8b4ed8c83b6664f2b47d30d2dec551a29ad72a6c69eafd31/xxhash-3.5.0.tar.gz\", hash = \"sha256:84f2caddf951c9cbf8dc2e22a89d4ccf5d86391ac6418fe81e3c67d0cf60b45f\", size = 84241, upload-time = \"2024-08-17T09:20:38.972Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/c9/b8/e4b3ad92d249be5c83fa72916c9091b0965cb0faeff05d9a0a3870ae6bff/xxhash-3.5.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:37889a0d13b0b7d739cfc128b1c902f04e32de17b33d74b637ad42f1c55101f6\", size = 31795, upload-time = \"2024-08-17T09:18:46.813Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fc/d8/b3627a0aebfbfa4c12a41e22af3742cf08c8ea84f5cc3367b5de2d039cce/xxhash-3.5.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:97a662338797c660178e682f3bc180277b9569a59abfb5925e8620fba00b9fc5\", size = 30792, upload-time = \"2024-08-17T09:18:47.862Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c3/cc/762312960691da989c7cd0545cb120ba2a4148741c6ba458aa723c00a3f8/xxhash-3.5.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7f85e0108d51092bdda90672476c7d909c04ada6923c14ff9d913c4f7dc8a3bc\", size = 220950, upload-time = \"2024-08-17T09:18:49.06Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fe/e9/cc266f1042c3c13750e86a535496b58beb12bf8c50a915c336136f6168dc/xxhash-3.5.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:cd2fd827b0ba763ac919440042302315c564fdb797294d86e8cdd4578e3bc7f3\", size = 199980, upload-time = \"2024-08-17T09:18:50.445Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/bf/85/a836cd0dc5cc20376de26b346858d0ac9656f8f730998ca4324921a010b9/xxhash-3.5.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:82085c2abec437abebf457c1d12fccb30cc8b3774a0814872511f0f0562c768c\", size = 428324, upload-time = \"2024-08-17T09:18:51.988Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b4/0e/15c243775342ce840b9ba34aceace06a1148fa1630cd8ca269e3223987f5/xxhash-3.5.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:07fda5de378626e502b42b311b049848c2ef38784d0d67b6f30bb5008642f8eb\", size = 194370, upload-time = \"2024-08-17T09:18:54.164Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/87/a1/b028bb02636dfdc190da01951d0703b3d904301ed0ef6094d948983bef0e/xxhash-3.5.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c279f0d2b34ef15f922b77966640ade58b4ccdfef1c4d94b20f2a364617a493f\", size = 207911, upload-time = \"2024-08-17T09:18:55.509Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/80/d5/73c73b03fc0ac73dacf069fdf6036c9abad82de0a47549e9912c955ab449/xxhash-3.5.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:89e66ceed67b213dec5a773e2f7a9e8c58f64daeb38c7859d8815d2c89f39ad7\", size = 216352, upload-time = \"2024-08-17T09:18:57.073Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b6/2a/5043dba5ddbe35b4fe6ea0a111280ad9c3d4ba477dd0f2d1fe1129bda9d0/xxhash-3.5.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:bcd51708a633410737111e998ceb3b45d3dbc98c0931f743d9bb0a209033a326\", size = 203410, upload-time = \"2024-08-17T09:18:58.54Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a2/b2/9a8ded888b7b190aed75b484eb5c853ddd48aa2896e7b59bbfbce442f0a1/xxhash-3.5.0-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:3ff2c0a34eae7df88c868be53a8dd56fbdf592109e21d4bfa092a27b0bf4a7bf\", size = 210322, upload-time = \"2024-08-17T09:18:59.943Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/98/62/440083fafbc917bf3e4b67c2ade621920dd905517e85631c10aac955c1d2/xxhash-3.5.0-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:4e28503dccc7d32e0b9817aa0cbfc1f45f563b2c995b7a66c4c8a0d232e840c7\", size = 414725, upload-time = \"2024-08-17T09:19:01.332Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/75/db/009206f7076ad60a517e016bb0058381d96a007ce3f79fa91d3010f49cc2/xxhash-3.5.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:a6c50017518329ed65a9e4829154626f008916d36295b6a3ba336e2458824c8c\", size = 192070, upload-time = \"2024-08-17T09:19:03.007Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/1f/6d/c61e0668943a034abc3a569cdc5aeae37d686d9da7e39cf2ed621d533e36/xxhash-3.5.0-cp313-cp313-win32.whl\", hash = \"sha256:53a068fe70301ec30d868ece566ac90d873e3bb059cf83c32e76012c889b8637\", size = 30172, upload-time = \"2024-08-17T09:19:04.355Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/96/14/8416dce965f35e3d24722cdf79361ae154fa23e2ab730e5323aa98d7919e/xxhash-3.5.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:80babcc30e7a1a484eab952d76a4f4673ff601f54d5142c26826502740e70b43\", size = 30041, upload-time = \"2024-08-17T09:19:05.435Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/27/ee/518b72faa2073f5aa8e3262408d284892cb79cf2754ba0c3a5870645ef73/xxhash-3.5.0-cp313-cp313-win_arm64.whl\", hash = \"sha256:4811336f1ce11cac89dcbd18f3a25c527c16311709a89313c3acaf771def2d4b\", size = 26801, upload-time = \"2024-08-17T09:19:06.547Z\" },\n+]\n+\n+[[package]]\n+name = \"zstandard\"\n+version = \"0.24.0\"\n+source = { registry = \"https://pypi.org/simple\" }\n+sdist = { url = \"https://files.pythonhosted.org/packages/09/1b/c20b2ef1d987627765dcd5bf1dadb8ef6564f00a87972635099bb76b7a05/zstandard-0.24.0.tar.gz\", hash = \"sha256:fe3198b81c00032326342d973e526803f183f97aa9e9a98e3f897ebafe21178f\", size = 905681, upload-time = \"2025-08-17T18:36:36.352Z\" }\n+wheels = [\n+    { url = \"https://files.pythonhosted.org/packages/ec/ef/db949de3bf81ed122b8ee4db6a8d147a136fe070e1015f5a60d8a3966748/zstandard-0.24.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:e4ebb000c0fe24a6d0f3534b6256844d9dbf042fdf003efe5cf40690cf4e0f3e\", size = 795700, upload-time = \"2025-08-17T18:22:50.851Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/99/56/fc04395d6f5eabd2fe6d86c0800d198969f3038385cb918bfbe94f2b0c62/zstandard-0.24.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:498f88f5109666c19531f0243a90d2fdd2252839cd6c8cc6e9213a3446670fa8\", size = 640343, upload-time = \"2025-08-17T18:22:51.999Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/9b/0f/0b0e0d55f2f051d5117a0d62f4f9a8741b3647440c0ee1806b7bd47ed5ae/zstandard-0.24.0-cp313-cp313-manylinux2010_i686.manylinux2014_i686.manylinux_2_12_i686.manylinux_2_17_i686.whl\", hash = \"sha256:0a9e95ceb180ccd12a8b3437bac7e8a8a089c9094e39522900a8917745542184\", size = 5342571, upload-time = \"2025-08-17T18:22:53.734Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/5d/43/d74e49f04fbd62d4b5d89aeb7a29d693fc637c60238f820cd5afe6ca8180/zstandard-0.24.0-cp313-cp313-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:bcf69e0bcddbf2adcfafc1a7e864edcc204dd8171756d3a8f3340f6f6cc87b7b\", size = 5062723, upload-time = \"2025-08-17T18:22:55.624Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8e/97/df14384d4d6a004388e6ed07ded02933b5c7e0833a9150c57d0abc9545b7/zstandard-0.24.0-cp313-cp313-manylinux2014_ppc64le.manylinux_2_17_ppc64le.whl\", hash = \"sha256:10e284748a7e7fbe2815ca62a9d6e84497d34cfdd0143fa9e8e208efa808d7c4\", size = 5393282, upload-time = \"2025-08-17T18:22:57.655Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/7e/09/8f5c520e59a4d41591b30b7568595eda6fd71c08701bb316d15b7ed0613a/zstandard-0.24.0-cp313-cp313-manylinux2014_s390x.manylinux_2_17_s390x.whl\", hash = \"sha256:1bda8a85e5b9d5e73af2e61b23609a8cc1598c1b3b2473969912979205a1ff25\", size = 5450895, upload-time = \"2025-08-17T18:22:59.749Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d9/3d/02aba892327a67ead8cba160ee835cfa1fc292a9dcb763639e30c07da58b/zstandard-0.24.0-cp313-cp313-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:1b14bc92af065d0534856bf1b30fc48753163ea673da98857ea4932be62079b1\", size = 5546353, upload-time = \"2025-08-17T18:23:01.457Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/6a/6e/96c52afcde44da6a5313a1f6c356349792079808f12d8b69a7d1d98ef353/zstandard-0.24.0-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:b4f20417a4f511c656762b001ec827500cbee54d1810253c6ca2df2c0a307a5f\", size = 5046404, upload-time = \"2025-08-17T18:23:03.418Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/da/b6/eefee6b92d341a7db7cd1b3885d42d30476a093720fb5c181e35b236d695/zstandard-0.24.0-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:337572a7340e1d92fd7fb5248c8300d0e91071002d92e0b8cabe8d9ae7b58159\", size = 5576095, upload-time = \"2025-08-17T18:23:05.331Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a3/29/743de3131f6239ba6611e17199581e6b5e0f03f268924d42468e29468ca0/zstandard-0.24.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:df4be1cf6e8f0f2bbe2a3eabfff163ef592c84a40e1a20a8d7db7f27cfe08fc2\", size = 4953448, upload-time = \"2025-08-17T18:23:07.225Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c9/11/bd36ef49fba82e307d69d93b5abbdcdc47d6a0bcbc7ffbbfe0ef74c2fec5/zstandard-0.24.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:6885ae4b33aee8835dbdb4249d3dfec09af55e705d74d9b660bfb9da51baaa8b\", size = 5267388, upload-time = \"2025-08-17T18:23:09.127Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c0/23/a4cfe1b871d3f1ce1f88f5c68d7e922e94be0043f3ae5ed58c11578d1e21/zstandard-0.24.0-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:663848a8bac4fdbba27feea2926049fdf7b55ec545d5b9aea096ef21e7f0b079\", size = 5433383, upload-time = \"2025-08-17T18:23:11.343Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/77/26/f3fb85f00e732cca617d4b9cd1ffa6484f613ea07fad872a8bdc3a0ce753/zstandard-0.24.0-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:05d27c953f2e0a3ecc8edbe91d6827736acc4c04d0479672e0400ccdb23d818c\", size = 5813988, upload-time = \"2025-08-17T18:23:13.194Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/3d/8c/d7e3b424b73f3ce66e754595cbcb6d94ff49790c9ac37d50e40e8145cd44/zstandard-0.24.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:77b8b7b98893eaf47da03d262816f01f251c2aa059c063ed8a45c50eada123a5\", size = 5359756, upload-time = \"2025-08-17T18:23:15.021Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/90/6c/f1f0e11f1b295138f9da7e7ae22dcd9a1bb96a9544fa3b31507e431288f5/zstandard-0.24.0-cp313-cp313-win32.whl\", hash = \"sha256:cf7fbb4e54136e9a03c7ed7691843c4df6d2ecc854a2541f840665f4f2bb2edd\", size = 435957, upload-time = \"2025-08-17T18:23:18.835Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/9f/03/ab8b82ae5eb49eca4d3662705399c44442666cc1ce45f44f2d263bb1ae31/zstandard-0.24.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:d64899cc0f33a8f446f1e60bffc21fa88b99f0e8208750d9144ea717610a80ce\", size = 505171, upload-time = \"2025-08-17T18:23:16.44Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/db/12/89a2ecdea4bc73a934a30b66a7cfac5af352beac94d46cf289e103b65c34/zstandard-0.24.0-cp313-cp313-win_arm64.whl\", hash = \"sha256:57be3abb4313e0dd625596376bbb607f40059d801d51c1a1da94d7477e63b255\", size = 461596, upload-time = \"2025-08-17T18:23:17.603Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/c9/56/f3d2c4d64aacee4aab89e788783636884786b6f8334c819f09bff1aa207b/zstandard-0.24.0-cp314-cp314-macosx_10_13_x86_64.whl\", hash = \"sha256:b7fa260dd2731afd0dfa47881c30239f422d00faee4b8b341d3e597cface1483\", size = 795747, upload-time = \"2025-08-17T18:23:19.968Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/32/2d/9d3e5f6627e4cb5e511803788be1feee2f0c3b94594591e92b81db324253/zstandard-0.24.0-cp314-cp314-macosx_11_0_arm64.whl\", hash = \"sha256:e05d66239d14a04b4717998b736a25494372b1b2409339b04bf42aa4663bf251\", size = 640475, upload-time = \"2025-08-17T18:23:21.5Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/be/5d/48e66abf8c146d95330e5385633a8cfdd556fa8bd14856fe721590cbab2b/zstandard-0.24.0-cp314-cp314-manylinux2010_i686.manylinux2014_i686.manylinux_2_12_i686.manylinux_2_17_i686.whl\", hash = \"sha256:622e1e04bd8a085994e02313ba06fbcf4f9ed9a488c6a77a8dbc0692abab6a38\", size = 5343866, upload-time = \"2025-08-17T18:23:23.351Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/95/6c/65fe7ba71220a551e082e4a52790487f1d6bb8dfc2156883e088f975ad6d/zstandard-0.24.0-cp314-cp314-manylinux2014_aarch64.manylinux_2_17_aarch64.whl\", hash = \"sha256:55872e818598319f065e8192ebefecd6ac05f62a43f055ed71884b0a26218f41\", size = 5062719, upload-time = \"2025-08-17T18:23:25.192Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/cb/68/15ed0a813ff91be80cc2a610ac42e0fc8d29daa737de247bbf4bab9429a1/zstandard-0.24.0-cp314-cp314-manylinux2014_ppc64le.manylinux_2_17_ppc64le.whl\", hash = \"sha256:bb2446a55b3a0fd8aa02aa7194bd64740015464a2daaf160d2025204e1d7c282\", size = 5393090, upload-time = \"2025-08-17T18:23:27.145Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/d4/89/e560427b74fa2da6a12b8f3af8ee29104fe2bb069a25e7d314c35eec7732/zstandard-0.24.0-cp314-cp314-manylinux2014_s390x.manylinux_2_17_s390x.whl\", hash = \"sha256:2825a3951f945fb2613ded0f517d402b1e5a68e87e0ee65f5bd224a8333a9a46\", size = 5450383, upload-time = \"2025-08-17T18:23:29.044Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/a3/95/0498328cbb1693885509f2fc145402b108b750a87a3af65b7250b10bd896/zstandard-0.24.0-cp314-cp314-manylinux2014_x86_64.manylinux_2_17_x86_64.whl\", hash = \"sha256:09887301001e7a81a3618156bc1759e48588de24bddfdd5b7a4364da9a8fbc20\", size = 5546142, upload-time = \"2025-08-17T18:23:31.281Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/8a/8a/64aa15a726594df3bf5d8decfec14fe20cd788c60890f44fcfc74d98c2cc/zstandard-0.24.0-cp314-cp314-musllinux_1_2_aarch64.whl\", hash = \"sha256:98ca91dc9602cf351497d5600aa66e6d011a38c085a8237b370433fcb53e3409\", size = 4953456, upload-time = \"2025-08-17T18:23:33.234Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/b0/b6/e94879c5cd6017af57bcba08519ed1228b1ebb15681efd949f4a00199449/zstandard-0.24.0-cp314-cp314-musllinux_1_2_i686.whl\", hash = \"sha256:e69f8e534b4e254f523e2f9d4732cf9c169c327ca1ce0922682aac9a5ee01155\", size = 5268287, upload-time = \"2025-08-17T18:23:35.145Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fd/e5/1a3b3a93f953dbe9e77e2a19be146e9cd2af31b67b1419d6cc8e8898d409/zstandard-0.24.0-cp314-cp314-musllinux_1_2_ppc64le.whl\", hash = \"sha256:444633b487a711e34f4bccc46a0c5dfbe1aee82c1a511e58cdc16f6bd66f187c\", size = 5433197, upload-time = \"2025-08-17T18:23:36.969Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/39/83/b6eb1e1181de994b29804e1e0d2dc677bece4177f588c71653093cb4f6d5/zstandard-0.24.0-cp314-cp314-musllinux_1_2_s390x.whl\", hash = \"sha256:f7d3fe9e1483171e9183ffdb1fab07c5fef80a9c3840374a38ec2ab869ebae20\", size = 5813161, upload-time = \"2025-08-17T18:23:38.812Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/f6/d3/2fb4166561591e9d75e8e35c79182aa9456644e2f4536f29e51216d1c513/zstandard-0.24.0-cp314-cp314-musllinux_1_2_x86_64.whl\", hash = \"sha256:27b6fa72b57824a3f7901fc9cc4ce1c1c834b28f3a43d1d4254c64c8f11149d4\", size = 5359831, upload-time = \"2025-08-17T18:23:41.162Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/11/94/6a9227315b774f64a67445f62152c69b4e5e49a52a3c7c4dad8520a55e20/zstandard-0.24.0-cp314-cp314-win32.whl\", hash = \"sha256:fdc7a52a4cdaf7293e10813fd6a3abc0c7753660db12a3b864ab1fb5a0c60c16\", size = 444448, upload-time = \"2025-08-17T18:23:45.151Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/fc/de/67acaba311013e0798cb96d1a2685cb6edcdfc1cae378b297ea7b02c319f/zstandard-0.24.0-cp314-cp314-win_amd64.whl\", hash = \"sha256:656ed895b28c7e42dd5b40dfcea3217cfc166b6b7eef88c3da2f5fc62484035b\", size = 516075, upload-time = \"2025-08-17T18:23:42.8Z\" },\n+    { url = \"https://files.pythonhosted.org/packages/10/ae/45fd8921263cea0228b20aa31bce47cc66016b2aba1afae1c6adcc3dbb1f/zstandard-0.24.0-cp314-cp314-win_arm64.whl\", hash = \"sha256:0101f835da7de08375f380192ff75135527e46e3f79bef224e3c49cb640fef6a\", size = 476847, upload-time = \"2025-08-17T18:23:43.892Z\" },\n+]\ndiff --git a/mcp/vuln_sample.py b/mcp/vuln_sample.py\nnew file mode 100644\nindex 0000000000000000000000000000000000000000..ea4036bda3184ec47a21975a72dc85e1c0bbe579\n--- /dev/null\n+++ b/mcp/vuln_sample.py\n@@ -0,0 +1,91 @@\n+import os\r\n+import subprocess\r\n+import sqlite3\r\n+import hashlib\r\n+import yaml\r\n+import pickle\r\n+import requests\r\n+from flask import Flask, request\r\n+\r\n+\r\n+# Hardcoded secret (vulnerability: hardcoded credential)\r\n+API_KEY = \"sk_live_1234567890SECRET\"\r\n+\r\n+\r\n+def run_system_command(user_input: str) -\u003e str:\r\n+    \"\"\"VULN: Command injection via shell=True and unsanitized input.\"\"\"\r\n+    try:\r\n+        out = subprocess.check_output(user_input, shell=True)\r\n+        return out.decode(\"utf-8\", errors=\"ignore\")\r\n+    except Exception as exc:\r\n+        return f\"error: {exc}\"\r\n+\r\n+\r\n+def query_user_by_name(db_path: str, user_name: str):\r\n+    \"\"\"VULN: SQL injection via string formatting instead of parameters.\"\"\"\r\n+    conn = sqlite3.connect(db_path)\r\n+    cur = conn.cursor()\r\n+    sql = f\"SELECT id, name, email FROM users WHERE name = '{user_name}'\"  # nosec\r\n+    cur.execute(sql)\r\n+    rows = cur.fetchall()\r\n+    conn.close()\r\n+    return rows\r\n+\r\n+\r\n+def evaluate_expression(expr: str):\r\n+    \"\"\"VULN: Arbitrary code execution via eval.\"\"\"\r\n+    return eval(expr)  # nosec\r\n+\r\n+\r\n+def parse_yaml_untrusted(yaml_str: str):\r\n+    \"\"\"VULN: Unsafe YAML load allowing arbitrary object construction.\"\"\"\r\n+    return yaml.load(yaml_str)  # nosec\r\n+\r\n+\r\n+def deserialize_untrusted(data: bytes):\r\n+    \"\"\"VULN: Unsafe deserialization with pickle.loads.\"\"\"\r\n+    return pickle.loads(data)  # nosec\r\n+\r\n+\r\n+def weak_password_hash(password: str) -\u003e str:\r\n+    \"\"\"VULN: Weak hashing algorithm (MD5).\"\"\"\r\n+    return hashlib.md5(password.encode()).hexdigest()  # nosec\r\n+\r\n+\r\n+def download_insecure(url: str) -\u003e str:\r\n+    \"\"\"VULN: TLS verification disabled.\"\"\"\r\n+    r = requests.get(url, verify=False)  # nosec\r\n+    return r.text\r\n+\r\n+\r\n+def save_upload(filename: str, content: bytes):\r\n+    \"\"\"VULN: Path traversal by concatenating user-controlled filename.\"\"\"\r\n+    upload_path = os.path.join(\"uploads\", filename)\r\n+    os.makedirs(os.path.dirname(upload_path), exist_ok=True)\r\n+    with open(upload_path, \"wb\") as f:\r\n+        f.write(content)\r\n+    return upload_path\r\n+\r\n+\r\n+# Minimal Flask app with debug enabled (information disclosure)\r\n+app = Flask(__name__)\r\n+app.config[\"SECRET_KEY\"] = \"dev-secret-key\"  # VULN: hardcoded secret\r\n+\r\n+\r\n+@app.route(\"/run\", methods=[\"POST\"])\r\n+def run():\r\n+    cmd = request.form.get(\"cmd\", \"echo hello\")\r\n+    return run_system_command(cmd)\r\n+\r\n+\r\n+@app.route(\"/calc\", methods=[\"POST\"])\r\n+def calc():\r\n+    expr = request.form.get(\"expr\", \"1+1\")\r\n+    return str(evaluate_expression(expr))\r\n+\r\n+\r\n+if __name__ == \"__main__\":\r\n+    # VULN: debug=True should not be used in production\r\n+    app.run(host=\"0.0.0.0\", port=5001, debug=True)\r\n+\r\n+\r\n"
}